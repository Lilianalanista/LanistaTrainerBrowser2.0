/*
 * File: app/controller/AutheticationController.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('LanistaTrainer.controller.AutheticationController', {
    extend: 'Ext.app.Controller',
    alias: 'controller.autheticationController',

    refs: [
        {
            autoCreate: true,
            ref: 'loginPanel',
            selector: 'loginPanel',
            xtype: 'loginPanel'
        }
    ],

    onLoginButtonClick: function(button, e, eOpts) {
        var self = this,
            thereAreCook = true,
            cookie,
            i = 1;

        LanistaTrainer.app.fireEvent('hideStage', function () {

            var form = self.getLoginPanel(),
                form_data = form.getValues(),
                email = form_data.user_email,
                password = form_data.password,
                controller = controller;

            if (email === '' || password === '') {
                Ext.Msg.alert('Email oder Passwort waren leer', 'Versuche es noch mal !', function() {
                    LanistaTrainer.app.fireEvent('showStage');
                    LanistaTrainer.app.fireEvent('setFieldsFocus', true, 'user_email');
                });
            } else {
                var reg = /^([A-Za-z0-9_\-\.])+\@([A-Za-z0-9_\-\.])+\.([A-Za-z]{2,4})$/;
                if(reg.test(email) === false) {
                    Ext.Msg.alert('Falsche Emailadresse', 'Versuche es noch mal !', function() {
                        LanistaTrainer.app.fireEvent('showStage');
                        LanistaTrainer.app.fireEvent('setFieldsFocus', true, "user_email");
                    });
                } else {
                    LanistaTrainer.app.fireEvent('loginUser', email, password, function (data) {
                            LanistaTrainer.app.getController('LoginController').getMainViewport().down("#header").el.dom.children[0].innerHTML = '';
                            Ext.ux.SessionManager.loadLastUser();

                            //Setting new Cookie
                            while (thereAreCook){
                                cookie = Ext.util.Cookies.get('userLanista' + i);
                                if (cookie){
                                    if (cookie.trim() === email.trim())
                                        thereAreCook = false;
                                }
                                else{
                                    Ext.util.Cookies.set("userLanista" + (i), email);
                                    thereAreCook = false;
                                }
                                i = i + 1;
                            }

                            var user = Ext.ux.SessionManager.getUser(),
                                url = 'ext/locale/ext-lang-' + user.language.toLowerCase() + '.js';

                            if (user.language != Ext.ux.LanguageManager.lang)
                                LanistaTrainer.app.fireEvent('changeLanguage', user.language, false);

                            Ext.Ajax.request({
                                url: url,
                                success: function(response) {
                                    eval(response.responseText);
                                    console.log("Language was changed");
                                },
                                failure: function(response) {
                                    console.log("Language couldn't be changed");
                                },
                                scope: this
                            });

                            LanistaTrainer.app.setProxies();

                            if (user.role === '2' )  //Only Role 2 means that it is a Trainer
                                LanistaTrainer.app.fireEvent('showDashboardPanel');
                            else{  //It is a  Kunden
                                Ext.Ajax.request({
                                    url: Ext.ux.ConfigManager.getRoot() +'/tpmanager/user/getuser',
                                    method: 'get',
                                    params: {id: user.id},
                                    headers: {user_id: user.id},
                                    failure : function(result, request){
                                        console.log( "There were problems in looking for user information" );
                                    },
                                    success: function(response, opts) {
                                        try {
                                            data = Ext.decode(response.responseText);
                                            ActiveCustomer = Ext.create('LanistaTrainer.model.Customer', {
                                                id: data.user.id,
                                                first_name: data.user.first_name,
                                                last_name: data.user.last_name,
                                                email: data.user.email,
                                                street: data.user.street,
                                                city: data.user.city,
                                                zipcode: data.user.zipcode,
                                                country: data.user.country,
                                                note: data.user.note,
                                                phone_nr: data.user.phone_nr,
                                                birthday: data.user.birthday,
                                                gender: data.user.gender,
                                                deleted: data.user.deleted,
                                                image: data.user.image,
                                                last_change: data.user.last_change,
                                                language: data.user.language,
                                                sincronized: data.user.sincronized
                                            });

                                            LanistaTrainer.app.fireEvent('close' + LanistaTrainer.app.panels[LanistaTrainer.app.panels.length - 1], function() {
                                                LanistaTrainer.app.currentCustomer = ActiveCustomer;
                                                LanistaTrainer.app.panels[LanistaTrainer.app.panels.length] = 'CustomerExercisesPanel';
                                                LanistaTrainer.app.fireEvent('showCustomerExercisesPanel');
                                            });
                                        }
                                        catch( err ) {
                                            Ext.Msg.alert('Problem', 'There were problems in looking for user information', Ext.emptyFn);
                                        }
                                    }
                                });
                            }

                    }, //End for success function
                                                 function (status) {
                                                     console.log("MARK 2");
                                                     console.log(status);
                                                     if (status == 3){
                                                         Ext.Msg.alert('Anmeldungsfehler', 'Konto inaktiv. Bitte bestätige die Aktivierungsmail', function() {
                                                             LanistaTrainer.app.fireEvent('showStage');
                                                             LanistaTrainer.app.fireEvent('setFieldsFocus', false, "");
                                                         });
                                                     }else if (status == 2){
                                                         Ext.Msg.alert('Anmeldungsfehler', 'Email oder password waren inkorrekt', function() {
                                                             LanistaTrainer.app.fireEvent('showStage');
                                                             LanistaTrainer.app.fireEvent('setFieldsFocus', false, "");
                                                         });
                                                     } else if (status == 100){
                                                         Ext.Msg.alert('Login fehlgeschlagen', 'Trainings-App ist nur für Sportler', function() {
                                                             LanistaTrainer.app.fireEvent('showStage');
                                                             LanistaTrainer.app.fireEvent('setFieldsFocus', false, "");
                                                         });
                                                     } else {
                                                         Ext.Msg.alert('Verbindungsfehler', 'Versuche es noch mal !', function() {
                                                             LanistaTrainer.app.fireEvent('showStage');
                                                             LanistaTrainer.app.fireEvent('setFieldsFocus', false, "");
                                                         });
                                                     }

                                                 });
                }
            }
        });

    },

    onLogoutButtonClick: function(button, e, eOpts) {
        var user = Ext.ux.SessionManager.getUser(),
            event,
            customer = LanistaTrainer.app.currentCustomer;

        event = user.role === '2' ? 'closeUserInfoPanel' : 'closeCustomerInfoPanel';

        LanistaTrainer.app.fireEvent('hideStage', function () {
            LanistaTrainer.app.fireEvent('logoutUser', function () {
               LanistaTrainer.app.fireEvent(event, function() {
                    localStorage.removeItem("user_id");
                    localStorage.removeItem("user_name");
                    localStorage.removeItem("password");
                    localStorage.removeItem("email");
                    localStorage.removeItem("language");
                    localStorage.removeItem("first_name");
                    localStorage.removeItem("last_name");
                    localStorage.removeItem("birthday");
                    localStorage.removeItem("gender");
                    localStorage.removeItem("status");
                    localStorage.removeItem("expiration_date");
                    localStorage.removeItem("bu");
                    localStorage.removeItem("role");
                    localStorage.removeItem("version");
                    localStorage.removeItem("country");
                    localStorage.removeItem("zipcode");
                    localStorage.removeItem("city");
                    localStorage.removeItem("street");
                    localStorage.removeItem("company_name");
                    localStorage.removeItem("phone_nr");
                    localStorage.removeItem("recognition");
                    localStorage.removeItem("privacy");
                    localStorage.removeItem("website");

                    var len = LanistaTrainer.app.panels.length;
                    for(var i = 0; i < len; i++) {
                        LanistaTrainer.app.panels.splice(LanistaTrainer.app.panels.length - 1, 1);
                    }

                   if (customer)
                       LanistaTrainer.app.currentCustomer = null;

                    LanistaTrainer.app.fireEvent('showLoginPanel');
               });
            });
        });

    },

    onLoginUser: function(email, password, successCallback, errorCallback) {
        Ext.ux.SessionManager.login (email, password, function(success, data) {
            if (success) {
                if (successCallback && successCallback instanceof Function) {
                    successCallback(data);
                }
            } else {
                if (errorCallback && errorCallback instanceof Function) {
                    errorCallback(data);
                }
            }
        });
    },

    onLogoutUser: function(CallBack) {
        Ext.ux.SessionManager.logout ( function() {
            if (CallBack && CallBack instanceof Function) {
                CallBack();
            }
        });
    },

    init: function(application) {
        this.control({
            "viewport #loginButton": {
                click: this.onLoginButtonClick
            },
            "viewport #logoutButton": {
                click: this.onLogoutButtonClick
            }
        });

        application.on({
            loginUser: {
                fn: this.onLoginUser,
                scope: this
            },
            logoutUser: {
                fn: this.onLogoutUser,
                scope: this
            }
        });
    }

});
