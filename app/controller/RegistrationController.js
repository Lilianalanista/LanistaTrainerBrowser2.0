/*
 * File: app/controller/RegistrationController.js
 *
 * This file was generated by Sencha Architect version 3.0.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('LanistaTrainer.controller.RegistrationController', {
    extend: 'Ext.app.Controller',
    alias: 'controller.registrationController',

    id: 'templatesController',

    refs: [
        {
            autoCreate: true,
            ref: 'registrationPanel',
            selector: 'registrationPanel',
            xtype: 'registrationPanel'
        },
        {
            ref: 'mainStage',
            selector: '#mainStage'
        },
        {
            ref: 'rightCommandPanel',
            selector: '#rightCommandPanel'
        },
        {
            ref: 'mainViewport',
            selector: 'mainViewport'
        },
        {
            ref: 'leftCommandPanel',
            selector: '#leftCommandPanel'
        }
    ],

    onShowRegistrationPanelButtonClick: function(button, e, eOpts) {
        LanistaTrainer.app.fireEvent('close' + LanistaTrainer.app.activePanel, function() {
            LanistaTrainer.app.fireEvent('showRegistrationPanel');
        });


    },

    onCloseRegistrationPanelButtonClick: function(button, e, eOpts) {
        LanistaTrainer.app.fireEvent('closeRegistrationPanel', function() {
            LanistaTrainer.app.fireEvent('show' + LanistaTrainer.app.previousPanel);
        });


    },

    onShowRegistrationPanel: function(callback) {
        var controller = this,
            registrationPanel	= controller.getRegistrationPanel(),
            mainStage	= controller.getMainStage();

        LanistaTrainer.app.previousPanel = LanistaTrainer.app.activePanel;
        LanistaTrainer.app.activePanel = "registrationPanel";

        mainStage.add( registrationPanel );

        registrationPanel.on('hide', function(component) {
            component.destroy();
        }, controller);


        // **** 1 create the commands
        LanistaTrainer.app.setStandardButtons('closeRegistrationPanelButton');
        this.showCommands();

        // *** 2 Show the panel
        registrationPanel.show();
        /*controller.getMainView().down("#header").setData({
            info: '',
            title: '-'+ Ext.ux.LanguageManager.TranslationArray.CUST_MENU_SETUP.toUpperCase()}
                                                          );
        */

        controller.getMainViewport().down("#header").update({
            info: '' }
        );

        //controller.fnChargeFilters(this);

        LanistaTrainer.app.fireEvent('showStage');

        // *** 4 Callback
        if (callback instanceof Function) callback();

        // *** 5 Load data
        controller.loadData();




    },

    onCloseRegistrationPanel: function(callback) {
        var controller = this;
        LanistaTrainer.app.fireEvent('hideStage', function () {
            controller.getRightCommandPanel().items.each(function (item) {
                item.hide();
            });
            controller.getLeftCommandPanel().items.each(function (item) {
                item.hide();
            });
            controller.getRegistrationPanel().hide();
            if (callback instanceof Function) callback();
        });
    },

    showCommands: function(callback) {

        var controller = this;

        controller.getRightCommandPanel().items.each(function (item) {
            item.hide();
        });


        /*
        var privacySettingsButton = Ext.create('LanistaTrainerTouch.view.LanistaButton', {
            iconCls: 'lanista-privacy',
            text:  Ext.ux.LanguageManager.TranslationArray.BUTTON_PRIVACY,
            itemId: 'privacySettingsButton'
        });
        var passwordResetButton = Ext.create('LanistaTrainerTouch.view.LanistaButton', {
            iconCls: 'lanista-question',
            text: Ext.ux.LanguageManager.TranslationArray.BUTTON_PASSWORD_RESET,
            itemId: 'forgotPasswordButton'
        });
        var licenceButton = Ext.create('LanistaTrainerTouch.view.LanistaButton', {
            iconCls: localStorage.getItem("status") == '1' ? 'lanista-checkmark' : 'lanista-cart',
            text: Ext.ux.LanguageManager.TranslationArray.LICENSE,
            itemId: 'licenseButton',
            cls: localStorage.getItem("status") == '1' ? ['lanista-command-buton'] : ['lanista-command-buton','lanista-command-buton-red']
        });

        controller.getRightCommandPanel().add(
            passwordResetButton
        );
        controller.getRightCommandPanel().add(
            privacySettingsButton
        );
        controller.getRightCommandPanel().add(
            licenceButton
        );

        */
    },

    loadData: function() {

    },

    init: function(application) {
        this.control({
            "viewport #showRegistrationPanelButton": {
                click: this.onShowRegistrationPanelButtonClick
            },
            "viewport #closeRegistrationPanelButton": {
                click: this.onCloseRegistrationPanelButtonClick
            }
        });

        application.on({
            ShowRegistrationPanel: {
                fn: this.onShowRegistrationPanel,
                scope: this
            },
            closeRegistrationPanel: {
                fn: this.onCloseRegistrationPanel,
                scope: this
            }
        });
    }

});
