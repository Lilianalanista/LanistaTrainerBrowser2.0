/*
 * File: app/view/CustomerExercisesPanel.js
 *
 * This file was generated by Sencha Architect version 3.0.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('LanistaTrainer.view.CustomerExercisesPanel', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.customerExercisesPanel',

    requires: [
        'Ext.view.View',
        'Ext.XTemplate',
        'Ext.container.Container'
    ],

    border: false,
    cls: 'lanista-customerexercises-panel',
    height: 580,
    id: 'customerExercisesPanel',
    width: 809,
    autoScroll: true,
    header: false,

    layout: {
        type: 'hbox',
        align: 'stretch'
    },

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'dataview',
                    flex: 1,
                    itemId: 'plans',
                    itemSelector: 'div',
                    itemTpl: [
                        '<div>Plan {name}</div>'
                    ]
                },
                {
                    xtype: 'dataview',
                    flex: 1,
                    itemId: 'warnings',
                    itemSelector: 'div',
                    itemTpl: [
                        '<div>{title} {creation_date}</div>'
                    ]
                },
                {
                    xtype: 'component',
                    flex: 1,
                    itemId: 'customerCurrentData'
                }
            ],
            dockedItems: [
                {
                    xtype: 'container',
                    flex: 1,
                    dock: 'bottom',
                    cls: 'protocolls-panel',
                    height: 450,
                    itemId: 'customerProtocolls',
                    overflowX: 'auto',
                    layout: {
                        type: 'hbox',
                        align: 'stretch'
                    }
                }
            ]
        });

        me.callParent(arguments);
    }

});