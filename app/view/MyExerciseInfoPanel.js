/*
 * File: app/view/MyExerciseInfoPanel.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('LanistaTrainer.view.MyExerciseInfoPanel', {
    extend: 'Ext.form.Panel',
    alias: 'widget.myExerciseInfoPanel',

    requires: [
        'Ext.form.FieldSet',
        'Ext.form.field.ComboBox',
        'Ext.XTemplate'
    ],

    cls: 'lanista-myexercise-panel',
    height: 694,
    id: 'myExerciseInfoPanel',
    width: 400,
    autoScroll: true,
    bodyPadding: 10,
    header: false,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'fieldset',
                    cls: 'lanista-myexercise-configuration',
                    id: 'myExercise_configuration',
                    defaultAlign: 'c-c',
                    items: [
                        me.processMyExercise_language({
                            xtype: 'combobox',
                            anchor: '100%',
                            id: 'myExercise_language',
                            name: 'myExercise_language',
                            enableKeyEvents: true,
                            editable: false,
                            listeners: {
                                change: {
                                    fn: me.onMyExercise_languageChange,
                                    scope: me
                                }
                            }
                        }),
                        {
                            xtype: 'textfield',
                            anchor: '100%',
                            cls: 'lanista-field-myexercise',
                            id: 'myExercise_name',
                            hideEmptyLabel: false,
                            labelCls: 'lanista-myexercise-item-label',
                            name: 'myExercise_name'
                        },
                        {
                            xtype: 'textfield',
                            anchor: '100%',
                            cls: 'lanista-field-myexercise',
                            id: 'myExercise_execution',
                            labelCls: 'lanista-myexercise-item-label',
                            name: 'myExercise_execution'
                        },
                        {
                            xtype: 'textfield',
                            anchor: '100%',
                            cls: 'lanista-field-myexercise lanista-field-myexercise-errors',
                            id: 'myExercise_errors',
                            labelCls: 'lanista-myexercise-item-label',
                            name: 'myExercise_errors'
                        }
                    ]
                },
                {
                    xtype: 'combobox',
                    anchor: '100%',
                    cls: 'lanista-field-myexercise',
                    id: 'myExercise_muscle',
                    labelCls: 'lanista-myexercise-item-label',
                    name: 'muscle'
                },
                {
                    xtype: 'combobox',
                    anchor: '100%',
                    cls: 'lanista-field-myexercise',
                    id: 'myExercise_exerciseType',
                    labelCls: 'lanista-myexercise-item-label',
                    name: 'type'
                },
                {
                    xtype: 'combobox',
                    anchor: '100%',
                    cls: 'lanista-field-myexercise lanista-field-myexercise-other',
                    id: 'myExercise_other',
                    labelCls: 'lanista-myexercise-item-label',
                    name: 'addition'
                },
                {
                    xtype: 'container',
                    cls: 'lanista-myExercise-images',
                    height: 200,
                    id: 'myExercise_images',
                    tpl: [
                        '<div class="lanista-customer-myexercise">',
                        '    <div class="lanista-customer-myexercise-image-title">',
                        '        <div class="lanista-customer-myexercise-image-title-left">{[Ext.ux.LanguageManager.TranslationArray.START_POSITION_MYEXERCISE]}</div>',
                        '        <div class="lanista-customer-myexercise-image-title-right">{[Ext.ux.LanguageManager.TranslationArray.END_POSITION_MYEXERCISE]}</div>',
                        '    </div>',
                        '    <div>',
                        '        <div id="lanista-customer-myexercise-image-2" class="lanista-customer-myexercise-img customer-exercise-img-right" style="background-image: url(/tpmanager/img/b/{ext_id}_1.jpg);"></div>',
                        '        <div id="lanista-customer-myexercise-image-1" class="lanista-customer-myexercise-img customer-exercise-img-left" style="background-image:  url(/tpmanager/img/b/{ext_id}_2.jpg);"></div>',
                        '    </div>',
                        '</div>'
                    ],
                    layout: {
                        type: 'hbox',
                        align: 'stretch',
                        pack: 'end'
                    },
                    listeners: {
                        afterrender: {
                            fn: me.onMyExercise_imagesAfterRender,
                            scope: me
                        }
                    }
                }
            ],
            listeners: {
                afterrender: {
                    fn: me.onMyExerciseInfoPanelAfterRender,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    processMyExercise_language: function(config) {
        var server =	'http://' + window.location.host,
            root =		Ext.ux.ConfigManager.getRoot() + '/LanistaTrainerBrowser2.0/';

        config.tpl = Ext.create("Ext.XTemplate",
                                '<tpl for="."><div class="x-boundlist-item"><img src=' + server + root + 'resources/images/flags/{image} /> {LanguageName}</div></tpl>');

        config.displayTpl = Ext.create("Ext.XTemplate",
                                       '<tpl for=".">{LanguageName}</tpl>');

        config.valueField = 'IdLanguage';

        return config;

    },

    onMyExercise_languageChange: function(field, newValue, oldValue, eOpts) {
        LanistaTrainer.app.getController ('MyExerciseInfoController').loadData();
    },

    onMyExercise_imagesAfterRender: function(component, eOpts) {
        var el = component.el,
            server = Ext.ux.ConfigManager.getServer(),
            root = Ext.ux.ConfigManager.getRoot();

        ////////////////////////////////////////////////////////////////////
        // Right Photo
        ////////////////////////////////////////////////////////////////////
        el.on('click',function(e,t) {
            idImage = localStorage.getItem("user_id");
            el.addCls('item-not-clicked');
            var image = Ext.create('Ext.Img', {
                src: server + root + '/tpmanager/img/b/CUST_'+ idImage + '_1.jpg',
                renderTo: Ext.getBody(),
                hidden: true,
                width: 0,
                height: 0
            });
            var lastPanel = LanistaTrainer.app.panels[LanistaTrainer.app.panels.length - 1];
            LanistaTrainer.app.panels[LanistaTrainer.app.panels.length] = 'ImagePanel';
            LanistaTrainer.app.fireEvent('showImagePanel', image, lastPanel, server + root + '/tpmanager/user/uploadphoto',
                                         {type: 'photo', customer_id: LanistaTrainer.app.currentCustomer ? LanistaTrainer.app.currentCustomer.data.id : localStorage.getItem("user_id")},
                                         function() {});
        },this,{delegate: '.customer-exercise-img-right'});

        el.on(
            'mouseover', function(e,t) {
                el.removeCls('item-not-clicked');
                el.addCls('item-clicked');

            },
            this,{ delegate: '.customer-exercise-img-right'});
        el.on(
            'mouseout', function(e,t) {
                el.removeCls('item-clicked');
                el.addCls('item-not-clicked');
            },
            this,{delegate: '.customer-exercise-img-right'});


        ////////////////////////////////////////////////////////////////////
        // Left Photo
        ////////////////////////////////////////////////////////////////////
        el.on('click',function(e,t) {
            idImage = localStorage.getItem("user_id");
            el.addCls('item-not-clicked');
            var image = Ext.create('Ext.Img', {
                src: server + root + '/tpmanager/img/b/CUST_'+ idImage + '_2.jpg',
                renderTo: Ext.getBody(),
                hidden: true,
                width: 0,
                height: 0
            });
            var lastPanel = LanistaTrainer.app.panels[LanistaTrainer.app.panels.length - 1];
            LanistaTrainer.app.panels[LanistaTrainer.app.panels.length] = 'ImagePanel';
            LanistaTrainer.app.fireEvent('showImagePanel', image, lastPanel, server + root + '/tpmanager/user/uploadphoto',
                                         {type: 'photo', customer_id: LanistaTrainer.app.currentCustomer ? LanistaTrainer.app.currentCustomer.data.id : localStorage.getItem("user_id")},
                                         function() {});
        },this,{delegate: '.customer-exercise-img-left'});

        el.on(
            'mouseover', function(e,t) {
                el.removeCls('item-not-clicked');
                el.addCls('item-clicked');
             },
            this,{ delegate: '.customer-exercise-img-left'});
        el.on(
            'mouseout', function(e,t) {
                el.removeCls('item-clicked');
                el.addCls('item-not-clicked');
            },
            this,{delegate: '.customer-exercise-img-left'});
    },

    onMyExerciseInfoPanelAfterRender: function(component, eOpts) {
        var languagesStore = Ext.create('Ext.data.Store', {
                                fields: ['image', 'LanguageName', 'IdLanguage'],
                                data : [
                                    {"image": "es.png", "LanguageName":"Español", "IdLanguage":"ES"},
                                    {"image": "de.png", "LanguageName":"Deutsch", "IdLanguage":"DE"},
                                    {"image": "gb.png", "LanguageName":"English", "IdLanguage":"EN"}
                                ]
                            }),
            fields = component.getForm().getFields(),
            record;

        fields.getByKey('myExercise_language').bindStore(languagesStore);
        languagesStore.load();

        fields.getByKey('myExercise_language').setValue(Ext.ux.LanguageManager.lang);
        fields.getByKey('myExercise_muscle').setFieldLabel(Ext.ux.LanguageManager.TranslationArray.FILTER_MUSCLES);
        fields.getByKey('myExercise_exerciseType').setFieldLabel(Ext.ux.LanguageManager.TranslationArray.FILTER_TYPE);
        fields.getByKey('myExercise_other').setFieldLabel(Ext.ux.LanguageManager.TranslationArray.FILTER_ADDITIVES);

        record = [{ext_id: 'a'}];
        component.getComponent('myExercise_images').update(record[0]);

        document.getElementsByName("myExercise_name")[0].placeholder = Ext.ux.LanguageManager.TranslationArray.FORM_CUSTOMER_DATA_EMAIL;

        fields.each(function(field)
                    {field.on('change',function(f,n,o)
                              {
                                  //f: field;  n: new value;  o: old value
                                  LanistaTrainer.app.fireEvent('showSavePanel', 'saveSettingsButton', 'cancelSettingsButton');
                              }
                             );
                     field.on('keypress',function(f,e,opts)
                              {
                                  //f: field;  e: key pressed;  o: options
                                  if(e.getKey() == e.ENTER){
                                      if ( !Ext.getCmp('rightCommandPanel').down('#saveSettingsButton').hidden )
                                          Ext.getCmp('rightCommandPanel').down('#saveSettingsButton').fireEvent('click', function() {
                                              f.focus();
                                          });
                                  }
                              }
                             );
                    }
                   );



    }

});