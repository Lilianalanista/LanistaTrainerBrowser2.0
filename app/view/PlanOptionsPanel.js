/*
 * File: app/view/PlanOptionsPanel.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('LanistaTrainer.view.PlanOptionsPanel', {
    extend: 'Ext.form.Panel',
    alias: 'widget.planOptionsPanel',

    requires: [
        'Ext.form.FieldSet',
        'Ext.form.field.TextArea'
    ],

    border: false,
    cls: 'lanista-user-info-panel',
    height: 250,
    id: 'planOptionsPanel',
    style: 'padding-top: 100px; height: 500px;',
    width: 400,
    defaultAlign: 'c-c',
    layout: 'auto',
    header: false,
    trackResetOnLoad: true,

    initComponent: function() {
        var me = this;

        me.initialConfig = Ext.apply({
            trackResetOnLoad: true
        }, me.initialConfig);

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'fieldset',
                    border: true,
                    cls: 'lanista-user-fieldset',
                    height: 384,
                    id: 'trainingPlanOptions',
                    defaultAlign: 'c-c',
                    items: [
                        {
                            xtype: 'textfield',
                            anchor: '100%',
                            cls: 'lanista-user-settings-field',
                            id: 'planName',
                            fieldLabel: 'Label',
                            name: 'name',
                            enableKeyEvents: true,
                            selectOnFocus: true
                        },
                        {
                            xtype: 'textfield',
                            anchor: '100%',
                            cls: 'lanista-user-settings-field',
                            id: 'planDuration',
                            fieldLabel: 'Label',
                            name: 'duration',
                            enableKeyEvents: true
                        },
                        {
                            xtype: 'textareafield',
                            anchor: '100%',
                            cls: 'lanista-user-settings-field',
                            id: 'planDescription',
                            fieldLabel: 'Label',
                            name: 'description',
                            enableKeyEvents: true
                        }
                    ]
                }
            ],
            listeners: {
                afterrender: {
                    fn: me.onPlanOptionsPanelAfterRender,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onPlanOptionsPanelAfterRender: function(component, eOpts) {
        var fields = component.getForm().getFields();

        fields.getByKey('planName').setFieldLabel(Ext.ux.LanguageManager.TranslationArray.FORM_PLAN_NAME);
        fields.getByKey('planDuration').setFieldLabel(Ext.ux.LanguageManager.TranslationArray.FORM_PLAN_TIME);
        fields.getByKey('planDescription').setFieldLabel(Ext.ux.LanguageManager.TranslationArray.FORM_PLAN_DESC);

        document.getElementsByName("name")[0].placeholder = Ext.ux.LanguageManager.TranslationArray.FORM_PLAN_NAME;
        document.getElementsByName("duration")[0].placeholder = Ext.ux.LanguageManager.TranslationArray.FORM_PLAN_TIME;
        document.getElementsByName("description")[0].placeholder = Ext.ux.LanguageManager.TranslationArray.FORM_PLAN_DESC;

        fields.each(function(field)
                    {field.on('change',function(f,n,o)
                              {
                                  //f: field;  n: new value;  o: old value
                                  LanistaTrainer.app.fireEvent('showSavePanel', 'savePlanOptionsButton', 'cancelPlanOptionsButton');
                              }
                             );
                     field.on('keypress',function(f,e,opts)
                              {
                                  //f: field;  e: key pressed;  o: options
                                  if(e.getKey() == e.ENTER){
                                      if ( !Ext.getCmp('rightCommandPanel').down('#savePlanOptionsButton').hidden )
                                          Ext.getCmp('rightCommandPanel').down('#savePlanOptionsButton').fireEvent('click', function() {
                                              f.focus();
                                          });
                                  }
                              }
                             );
                    }
                   );













    }

});