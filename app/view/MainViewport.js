/*
 * File: app/view/MainViewport.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('LanistaTrainer.view.MainViewport', {
    extend: 'Ext.container.Viewport',
    alias: 'widget.mainViewport',

    requires: [
        'LanistaTrainer.view.MainViewportViewModel',
        'Ext.XTemplate',
        'Ext.panel.Panel',
        'Ext.resizer.Splitter',
        'Ext.form.Label'
    ],

    viewModel: {
        type: 'mainViewport'
    },
    id: 'mainViewport',
    layout: 'fit',
    defaultListenerScope: true,

    items: [
        {
            xtype: 'component',
            height: 150,
            id: 'header',
            maxHeight: 100,
            style: 'z-index:1; background-color: rgba(227,227,227,0.7)',
            tpl: [
                '<div class="header-logo">',
                '	p',
                '</div>',
                '<div class="header-title">{title}</div>',
                '<div class="header-info">{info}</div>'
            ],
            listeners: {
                afterrender: 'onHeaderAfterRender'
            }
        },
        {
            xtype: 'container',
            id: 'lanistaStage',
            style: 'top:0!important;position: absolute;',
            width: 150,
            layout: {
                type: 'hbox',
                align: 'stretch',
                pack: 'center'
            },
            items: [
                {
                    xtype: 'panel',
                    flex: 1,
                    border: false,
                    cls: 'lanista-command-panel',
                    id: 'leftCommandPanel',
                    maxWidth: 88,
                    style: 'margin-top:100px;',
                    width: 88,
                    animCollapse: true,
                    collapseDirection: 'right',
                    collapsed: false,
                    collapsible: true,
                    header: false,
                    manageHeight: false,
                    titleCollapse: true,
                    layout: {
                        type: 'vbox',
                        align: 'center',
                        pack: 'center'
                    }
                },
                {
                    xtype: 'splitter',
                    id: 'splitterLeft',
                    shrinkWrap: 1,
                    collapseTarget: 'prev',
                    collapsible: true
                },
                {
                    xtype: 'panel',
                    flex: 1,
                    border: false,
                    id: 'mainStage',
                    layout: 'card'
                },
                {
                    xtype: 'splitter',
                    id: 'splitterRight',
                    collapsible: true
                },
                {
                    xtype: 'panel',
                    flex: 1,
                    border: false,
                    cls: 'lanista-command-panel',
                    id: 'rightCommandPanel',
                    maxWidth: 88,
                    style: 'margin-top:100px;',
                    width: 88,
                    animCollapse: true,
                    collapseDirection: 'left',
                    collapsed: false,
                    collapsible: true,
                    header: false,
                    manageHeight: false,
                    layout: {
                        type: 'vbox',
                        align: 'center',
                        pack: 'center'
                    }
                }
            ]
        },
        {
            xtype: 'container',
            cls: 'lanista-copyright',
            height: 20,
            id: 'lanistaCopyRights',
            items: [
                {
                    xtype: 'label',
                    cls: 'lanista-copyrights-text',
                    html: '<span>Lanista</span> Trainingssoftware &#169; 2012. All rights reserved.',
                    itemId: 'strCopyRights'
                }
            ]
        }
    ],
    listeners: {
        resize: 'onMainViewportResize',
        afterrender: 'onMainViewportAfterRender'
    },

    onHeaderAfterRender: function(component, eOpts) {
        var server = Ext.ux.ConfigManager.getServer(),
            root = Ext.ux.ConfigManager.getRoot(),
            el = component.el,
            records,
            exercisesPanel;

        //***************************************************************
        //Managing of Trainer's and Customer's Information
        //***************************************************************
        el.on(
            'click', function(e,t) {
                if ( t.id === 'showPersonalDataButton' ) //Trainer
                {
                    LanistaTrainer.app.fireEvent('close' + LanistaTrainer.app.panels[LanistaTrainer.app.panels.length - 1], function() {
                        el.addCls('item-not-clicked');
                        LanistaTrainer.app.panels[LanistaTrainer.app.panels.length] = 'UserInfoPanel';
                        LanistaTrainer.app.fireEvent('showUserInfoPanel');
                    });
                }
                if ( t.id === 'showCustomerDataButton' ) //Customer
                {
                    LanistaTrainer.app.fireEvent('close' + LanistaTrainer.app.panels[LanistaTrainer.app.panels.length - 1], function() {
                        el.addCls('item-not-clicked');
                        LanistaTrainer.app.panels[LanistaTrainer.app.panels.length] = 'CustomerInfoPanel';
                        LanistaTrainer.app.fireEvent('showCustomerInfoPanel');
                    });
                }
            },
            this, {delegate: '.show-info-customer'});
        el.on(
            'mouseover', function(e,t) {
                if ( t.id === 'showPersonalDataButton' || t.id === 'showCustomerDataButton' )
                {
                    el.removeCls('item-not-clicked');
                    el.addCls('item-clicked');
                }
            },
            this,{ delegate: '.show-info-customer'});
        el.on(
            'mouseout', function(e,t) {
                if ( t.id === 'showPersonalDataButton' || t.id === 'showCustomerDataButton' )
                {
                    el.removeCls('item-clicked');
                    el.addCls('item-not-clicked');
                }
            },
            this,{delegate: '.show-info-customer'});


        //***************************************************************
        //Managing of Trainer's and Customer's Photo
        //***************************************************************

        el.on('click',function(e,t) {
            var idImage;
            if ( t.id === 'changeUserPhoto' || t.id === 'changeCustomerPhoto' )
            {
                if ( t.id === 'changeCustomerPhoto')
                    idImage = LanistaTrainer.app.currentCustomer.data.id;
                if ( t.id === 'changeUserPhoto' )
                    idImage = localStorage.getItem("user_id");

                el.addCls('item-not-clicked');
                var image = Ext.create('Ext.Img', {
                    src: server + root + '/tpmanager/img/p/'+ idImage + '_photo.jpg',
                    renderTo: Ext.getBody(),
                    hidden: true,
                    width: 0,
                    height: 0
                });
                var lastPanel = LanistaTrainer.app.panels[LanistaTrainer.app.panels.length - 1];
                LanistaTrainer.app.panels[LanistaTrainer.app.panels.length] = 'ImagePanel';
                LanistaTrainer.app.fireEvent('showImagePanel', image, lastPanel, server + root + '/tpmanager/user/uploadphoto',
                                             {type: 'photo', customer_id: LanistaTrainer.app.currentCustomer ? LanistaTrainer.app.currentCustomer.data.id : localStorage.getItem("user_id")},
                                             function() {});
            }
        },this,{delegate: '.lansita-header-customer-photo'});
        el.on(
            'mouseover', function(e,t) {
                if ( t.id === 'changeUserPhoto' || t.id === 'changeCustomerPhoto')
                {
                    el.removeCls('item-not-clicked');
                    el.addCls('item-clicked');
                }
            },
            this,{ delegate: '.lansita-header-customer-photo'});
        el.on(
            'mouseout', function(e,t) {
                if ( t.id === 'changeUserPhoto' || t.id === 'changeCustomerPhoto')
                {
                    el.removeCls('item-clicked');
                    el.addCls('item-not-clicked');
                }
            },
            this,{delegate: '.lansita-header-customer-photo'});


        //***************************************************************
        //Managing of Trainer's Logo
        //***************************************************************

        el.on('click',function(e,t) {
            if ( t.id === 'changeUserLogo' )
            {
                el.addCls('item-not-clicked');
                var image = Ext.create('Ext.Img', {
                    src: server + root + '/tpmanager/img/p/'+ localStorage.getItem("user_id") + '_logo.jpg',
                    renderTo: Ext.getBody(),
                    hidden: true,
                    width: 0,
                    height: 0
                });
                lastPanel = LanistaTrainer.app.panels[LanistaTrainer.app.panels.length - 1];
                LanistaTrainer.app.panels[LanistaTrainer.app.panels.length] = 'ImagePanel';
                LanistaTrainer.app.fireEvent('showImagePanel', image, lastPanel, server + root + '/tpmanager/user/uploadphoto',  {type: 'logo'}, function() {});
            }
        },this,{delegate: '.lansita-header-customer-logo'});
        el.on(
            'mouseover', function(e,t) {
                if ( t.id === 'changeUserLogo' )
                {
                    el.removeCls('item-not-clicked');
                    el.addCls('item-clicked');
                }
            },
            this,{ delegate: '.lansita-header-customer-logo'});
        el.on(
            'mouseout', function(e,t) {
                if ( t.id === 'changeUserLogo' )
                {
                    el.removeCls('item-clicked');
                    el.addCls('item-not-clicked');
                }
            },
            this,{delegate: '.lansita-header-customer-logo'});


        //***************************************************************
        //Managing of Searching Filters
        //***************************************************************

        el.on('click',function(e,t) {
            //if ( t.id === 'deleteSearchFilter' )
            //{
                var exerciseStore = Ext.getStore('ExerciseStore');
                switch(Ext.get(t).dom.previousElementSibling.previousElementSibling.innerText.trim()) {
                    case 'Musclegruppe':
                        LanistaTrainer.app.getController ( 'ExercisesController' ).showFilteredExercises('', 1, this.text);
                        break;
                    case 'Übungstyp':
                        LanistaTrainer.app.getController ( 'ExercisesController' ).showFilteredExercises('', 2, this.text);
                        break;
                    case 'Zusätze':
                        LanistaTrainer.app.getController ( 'ExercisesController' ).showFilteredExercises('', 3, this.text);
                        break;
                }
                if ( Ext.get(t).dom.previousElementSibling.previousElementSibling.innerText.trim().toUpperCase().indexOf('TEXT') !== -1 )
                    exerciseStore.removeFilter('filterByWord');

                exerciseStore.loadPage(1);
                records = exerciseStore.data.items;
                exerciseStore.filterRecords = records.length;

                var user = Ext.ux.SessionManager.getUser();
                exercisesPanel = LanistaTrainer.app.getController('ExercisesController').getExercisesPanel();
                if ( (LanistaTrainer.app.panels[LanistaTrainer.app.panels.length - 2] !== 'DashboardPanel') &&
                    (LanistaTrainer.app.panels[LanistaTrainer.app.panels.length - 2] !== 'LoginPanel') &&
                    (user.role === '2')) {
                    if ( (LanistaTrainer.app.panels[LanistaTrainer.app.panels.length - 2] === 'FavoritesPanel')) {
                        favorites = LanistaTrainer.app.getController ('FavoritesController').favorites.data.objects;
                        favoritesArray = favorites !== "" ? favorites.split(',') : [];

                        if (favoritesArray.length > 0 ){
                            for (var i = 0; i < records.length ; i++) {
                                for (var j = 0; j < favoritesArray.length; j++) {
                                    if (Number(favoritesArray[j]) === Number(records[i].data.id)) {
                                        break;
                                    }
                                }

                                if (j !== favoritesArray.length){
                                    itemNode = exercisesPanel.down('#viewExercises').getNode(records[i]);
                                    Ext.get(itemNode).addCls ( 'lanista-list-item-selected' );
                                }
                            }
                        }
                    }
                    else{
                        for (var i = 0; i < records.length ; i++) {
                            for(var j = 0; j < exercisesPanel.selection.length; j++) {
                                if(exercisesPanel.selection[j][0] === records[i].data.id) {
                                    break;
                                }
                            }
                            if (j !== exercisesPanel.selection.length){
                                itemNode = exercisesPanel.down('#viewExercises').getNode(records[i]);
                                Ext.get(itemNode).addCls ( 'lanista-list-item-selected' );
                            }
                        }
                    }
                }
                LanistaTrainer.app.fireEvent('showSearchHeaderUpdate');
            //}
        },
              this,{delegate: '.lanista-delete-search'});
        el.on(
            'mouseover', function(e,t) {
                //if ( t.id === 'deleteSearchFilter' )
                //{


                //Ext.get(t).dom.className = Ext.get(t).dom.className.replace(/item-not-clicked/gi,'');
                //Ext.get(t).dom.className = Ext.get(t).dom.className + ' item-clicked';



                el.dom.className = el.dom.className.replace(/item-not-clicked/gi,'');
                el.dom.className = el.dom.className + ' item-clicked';
                Ext.get(t).dom.className = Ext.get(t).dom.className.replace(/lanista-color-no-delete/gi,'');
                Ext.get(t).dom.className = Ext.get(t).dom.className + ' lanista-color-delete';

                    //el.removeCls('item-not-clicked');
                    //el.addCls('item-clicked');
                    //Ext.get(t).removeCls('lanista-color-no-delete');
                    //Ext.get(t).addCls('lanista-color-delete');
                //}
            },
            this,{ delegate: '.lanista-delete-search'});
        el.on(
            'mouseout', function(e,t) {
                //if ( t.id === 'deleteSearchFilter' )
                //{




                //Ext.get(t).dom.className = Ext.get(t).dom.className.replace(/item-not-clicked/gi,'');
                //Ext.get(t).dom.className = Ext.get(t).dom.className + ' item-clicked';



                el.dom.className = el.dom.className.replace(/item-clicked/gi,'');
                el.dom.className = el.dom.className + ' item-not-clicked';
                Ext.get(t).dom.className = Ext.get(t).dom.className + ' lanista-color-no-delete';
                Ext.get(t).dom.className = Ext.get(t).dom.className.replace(/lanista-color-delete/gi,'');





                    //el.removeCls('item-clicked');
                    //el.addCls('item-not-clicked');
                    //Ext.get(t).addCls('lanista-color-no-delete');
                    //Ext.get(t).removeCls('lanista-color-delete');
                //}
            },
            this,{delegate: '.lanista-delete-search'});


    },

    onMainViewportResize: function(component, width, height, oldWidth, oldHeight, eOpts) {
        var customerExercisesPanel;

        component.down('#lanistaCopyRights').setY(component.el.dom.clientHeight - 40);

        if (LanistaTrainer.app.getController('PlanController').getPlanPanel().down ('tabpanel').getActiveTab().el)
            LanistaTrainer.app.getController('PlanController').getPlanPanel().down ('tabpanel').getActiveTab().getEl().setHeight(LanistaTrainer.app.getController('PlanController').getPlanPanel().down ('tabpanel').getActiveTab().el.dom.clientHeight - 45);

        customerExercisesPanel = LanistaTrainer.app.getController('CustomerExercisesController').getCustomerExercisesPanel();

        if (Ext.getCmp('customerExercisesPanel').down('#customerProtocolls').el)
            Ext.getCmp('customerExercisesPanel').down('#customerProtocolls').el.setHeight(Ext.getCmp('customerExercisesPanel').down('#customerProtocolls').el.dom.clientHeight - 20);
    },

    onMainViewportAfterRender: function(component, eOpts) {
        var el = component.el,
            viewPort,
            window;

        el.on('click',function(e,t) {
            viewPort = LanistaTrainer.app.getController('MainController').getLanistaStage().up('mainViewport').floatingItems;
            if (viewPort.keys[0] === 'notificationsWindow')
                viewPort.items[0].hide();

            if (component.down('#videoWindow'))
                component.down('#videoWindow').hide();

            if (component.down('#chartWindow'))
                component.down('#chartWindow').hide();
        },this,{delegate: '.x-mask'});
    }

});