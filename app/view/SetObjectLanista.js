/*
 * File: app/view/SetObjectLanista.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('LanistaTrainer.view.SetObjectLanista', {
    extend: 'Ext.container.Container',
    alias: 'widget.setObjectLanista',

    requires: [
        'LanistaTrainer.view.SetObjectLanistaViewModel',
        'Ext.slider.Single'
    ],

    viewModel: {
        type: 'setObjectLanista'
    },
    cls: 'lanista-setobject-lanista',
    id: 'setObjectLanista',
    width: 400,
    defaultListenerScope: true,

    listeners: {
        afterrender: 'onSetObjectLanistaRender',
        hide: 'onSetObjectLanistaHide'
    },
    items: [
        {
            xtype: 'slider',
            cls: 'lanista-setrounds',
            height: 20,
            id: 'setRounds',
            width: 400,
            value: 3,
            maxValue: 20,
            useTips: false,
            listeners: {
                change: 'onSetRoundsChange'
            }
        }
    ],

    onSetObjectLanistaRender: function(component, eOpts) {


    },

    onSetObjectLanistaHide: function(component, eOpts) {
        component.destroy ( );
    },

    onSetRoundsChange: function(slider, newValue, thumb, eOpts) {
        record =  [{rounds_min: newValue,
                    training: Ext.ComponentQuery.query("viewport")[0].down('#trainingPicker').getValue(),
                    training_unit: Ext.ComponentQuery.query("viewport")[0].down('#trainingPicker').unit}];
        LanistaTrainer.app.getController('PlanController').getDefaultPlanValuesPanel().update(record[0]);
    },

    setValue: function(value) {
        if (value)
            this.down ( '#setRounds' ).setValue(value);



    },

    getValue: function() {

        var value = this.down ( '#setRounds' ).getValue();
        return value;
    }

});