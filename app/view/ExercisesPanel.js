/*
 * File: app/view/ExercisesPanel.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('LanistaTrainer.view.ExercisesPanel', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.exercisesPanel',

    requires: [
        'Ext.view.View',
        'Ext.XTemplate',
        'Ext.panel.Tool'
    ],

    border: false,
    height: 250,
    style: 'padding-top: 120px;',
    width: 400,
    layout: 'fit',
    frameHeader: false,
    headerPosition: 'bottom',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            defaultDockWeights: {
                top: {
                    render: 1,
                    visual: 1
                },
                left: {
                    render: 3,
                    visual: 5
                },
                right: {
                    render: 5,
                    visual: 7
                },
                bottom: {
                    render: 7,
                    visual: 3
                }
            },
            items: [
                {
                    xtype: 'dataview',
                    cls: 'lanista-exercises-view',
                    height: 250,
                    id: 'viewExercises',
                    tpl: [
                        '<tpl for=".">',
                        '	<div class="exercise-item">',
                        '        <div class="exercise-list-img exercise-list-img-right" style="background-image: url(resources/images/previews/{ext_id}_1.jpg);"></div>',
                        '    	<div class="exercise-list-img exercise-list-img-left" style="background-image: url(resources/images/previews/{ext_id}_2.jpg);"></div>',
                        '        <div class="exercise-list-text"/>{[values["name_" + Ext.ux.LanguageManager.lang]]}</div>',
                        '    </div>',
                        '</tpl>'
                    ],
                    width: 400,
                    itemSelector: 'div.exercise-item',
                    store: 'ExerciseStore',
                    listeners: {
                        hide: {
                            fn: me.onDataviewHide,
                            scope: me
                        },
                        afterrender: {
                            fn: me.onViewExercisesAfterRender,
                            scope: me
                        },
                        viewready: {
                            fn: me.onViewExercisesViewReady,
                            scope: me
                        }
                    }
                }
            ],
            tools: [
                {
                    xtype: 'tool',
                    id: 'previousExercises',
                    type: 'left'
                },
                {
                    xtype: 'tool',
                    id: 'nextExercises',
                    type: 'right'
                }
            ]
        });

        me.callParent(arguments);
    },

    onDataviewHide: function(component, eOpts) {
        component.destroy();
    },

    onViewExercisesAfterRender: function(component, eOpts) {
        var itemRecord,
            el = component.el,
            itemId = [];

        el.on(
            'click', function(e,t) {
               if ( LanistaTrainer.app.panels[LanistaTrainer.app.panels.length - 2] !== 'DashboardPanel') {
                       itemId = [];
                       itemId[0] = component.getRecord(t).data.id;
                       itemId[1] = component.getRecord(t).data.ext_id;

                       for(var i = 0; i < this.selection.length; i++) {
                           if(this.selection[i][0] === itemId[0]) {
                             break;
                           }
                       }
                       if (i === this.selection.length)
                       {
                            this.selection.push( itemId );
                            Ext.get(t).addCls ( 'lanista-list-item-selected' );
                       }
                       else {
                           if (this.selection[i][2] === 1 && !(this.selection[i][3])) {
                               this.selection[i][3] = 'd';
                               Ext.get(t).removeCls ( 'lanista-list-item-selected' );
                           }
                           else {
                               if (this.selection[i][2] === 1 && this.selection[i][3] === 'd'){
                                   this.selection[i][3] = '';
                                   Ext.get(t).addCls ( 'lanista-list-item-selected' );
                               }
                               else{
                                   this.selection.splice(i, 1);
                                   Ext.get(t).removeCls ( 'lanista-list-item-selected' );
                               }
                           }

                       }
                }
                else {
                    itemRecord = component.getRecord(t);
                    LanistaTrainer.app.getController('ExercisesController').getExercisesPanel().addCls ('blured');
                    LanistaTrainer.app.fireEvent('showExercisePanel', itemRecord, '');
                }
            },
            this, {delegate: '.exercise-item'});
        el.on(
            'mouseover', function(e,t) {
                                            el.removeCls('item-not-clicked');
                                            el.addCls('item-clicked');
                                       },
            this,{ delegate: '.exercise-item'});
        el.on(
            'mouseout', function(e,t) {

                                            el.removeCls('item-clicked');
                                            el.addCls('item-not-clicked');
                                      },
            this,{delegate: '.exercise-item'});
    },

    onViewExercisesViewReady: function(dataview, eOpts) {
        var records = dataview.store.data.items,
            panel = LanistaTrainer.app.getController ('ExercisesController').getExercisesPanel();

        if ( LanistaTrainer.app.panels[LanistaTrainer.app.panels.length - 2] !== 'DashboardPanel') {
            for (var i = 0; i < records.length ; i++) {
                for(var j = 0; j < panel.selection.length; j++) {
                    if(panel.selection[j][0] === records[i].data.id) {
                        break;
                    }
                }
                if (j !== panel.selection.length){
                    itemNode = panel.down('#viewExercises').getNode(records[i]);
                    Ext.get(itemNode).addCls ( 'lanista-list-item-selected' );
                }
            }
        }

    }

});