/*
 * File: app/view/Temporal.js
 *
 * This file was generated by Sencha Architect version 3.0.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('LanistaTrainer.view.Temporal', {
    extend: 'Ext.panel.Panel',

    requires: [
        'Ext.grid.Panel',
        'Ext.grid.column.Template',
        'Ext.XTemplate',
        'Ext.grid.View',
        'Ext.grid.feature.Grouping'
    ],

    border: false,
    cls: 'lanista-customerexercises-panel',
    height: 580,
    id: 'customerExercisesPanel1',
    width: 809,
    autoScroll: true,
    header: false,

    layout: {
        type: 'hbox',
        align: 'stretch'
    },

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'gridpanel',
                    border: false,
                    cls: 'grid-customer-exercise',
                    id: 'grid2',
                    width: 300,
                    autoScroll: true,
                    store: 'ProtocollStore',
                    columns: [
                        {
                            xtype: 'templatecolumn',
                            border: false,
                            draggable: false,
                            tpl: [
                                '<div class="lansita-header-customer-name"> ',
                                '    <span class="weight"> {weight} Kgs. / {training} {[values.training_unit == 0 ? Ext.ux.LanguageManager.TranslationArray.REP : values.training_unit == 1 ? Ext.ux.LanguageManager.TranslationArray.MIN : Ext.ux.LanguageManager.TranslationArray.SEC]} </span> ',
                                '</div>',
                                ''
                            ],
                            width: 285,
                            resizable: false,
                            toFrontOnShow: false,
                            dataIndex: 'string',
                            menuDisabled: true,
                            text: 'Titulo'
                        },
                        {
                            xtype: 'gridcolumn',
                            text: 'MyColumn9'
                        }
                    ],
                    viewConfig: me.processGv1({
                        id: 'gv1',
                        width: 285,
                        stripeRows: false
                    }),
                    features: [
                        {
                            ftype: 'grouping',
                            groupHeaderTpl: [
                                '<tpl for=".">',
                                '    <input type="image" src="{[ Ext.ux.ConfigManager.getServer() + Ext.ux.ConfigManager.getRoot() + /LanistaTrainerBrowser2.0/]}resources/images/previews/{[Ext.getStore("ExerciseStore").getProxy().getRecord(values["name"]).ext_id]}_1.jpg" >',
                                '    <input type="image" src="{[ Ext.ux.ConfigManager.getServer() + Ext.ux.ConfigManager.getRoot() + /LanistaTrainerBrowser2.0/]}resources/images/previews/{[Ext.getStore("ExerciseStore").getProxy().getRecord(values["name"]).ext_id]}_2.jpg" ></div>',
                                '</tpl>',
                                ''
                            ]
                        }
                    ],
                    listeners: {
                        afterrender: {
                            fn: me.onGrid2AfterRender,
                            scope: me
                        }
                    }
                }
            ]
        });

        me.callParent(arguments);
    },

    processGv1: function(config) {

        config.plugins = [ Ext.create('Ext.ux.PreviewPlugin',
                               {
                                    ptype: 'preview',
                                    bodyField: 'coatchingnotes_' + Ext.ux.LanguageManager.lang,
                                    expanded: true,
                                    pluginId: 'preview'
                               })
                         ];

        return config;
    },

    onGrid2AfterRender: function(component, eOpts) {
        console.log('datos...');
    }

});