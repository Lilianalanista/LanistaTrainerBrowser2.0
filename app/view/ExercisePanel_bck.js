/*
 * File: app/view/ExercisePanel.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('LanistaTrainer.view.ExercisePanel', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.exercisePanel',

    requires: [
        'Ext.XTemplate',
        'Ext.tab.Panel',
        'Ext.tab.Tab'
    ],

    cls: 'lanista-exercise-panel',
    id: 'exercisePanel',

    layout: {
        type: 'vbox',
        align: 'stretch'
    },

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'panel',
                    flex: 1,
                    cls: 'lanista-exercise-panel-header',
                    id: 'exercisePanelHeader',
                    tpl: [
                        '<div class="exercise">',
                        '    <div class="exercise_name">{[values["name_"+Ext.ux.LanguageManager.lang]]}</div>',
                        '    <div class="exercise-images">',
                        '        <div id="image-start-position" class="exercise-image" style="-webkit-background-size: cover; background-image: url({[(values.ext_id && values.ext_id.indexOf("CUST") != -1) ? (Ext.ux.ConfigManager.getServer() + Ext.ux.ConfigManager.getRoot() + "/tpmanager/img/b/"+values.ext_id) : "resources/images/exercises/"+values.ext_id]}_2.png);"></div>',
                        '        <div id="image-start-position" class="exercise-image" style="-webkit-background-size: cover; background-image: url({[(values.ext_id && values.ext_id.indexOf("CUST") != -1) ? (Ext.ux.ConfigManager.getServer() + Ext.ux.ConfigManager.getRoot() + "/tpmanager/img/b/"+values.ext_id) : "resources/images/exercises/"+values.ext_id]}_1.png);"></div>',
                        '     </div>',
                        '</div>'
                    ]
                },
                me.processExercisePanelContent({
                    xtype: 'tabpanel',
                    flex: 1,
                    cls: 'lanista-exercise-panel-content',
                    id: 'exercisePanelContent',
                    activeTab: 0,
                    plain: true,
                    items: [
                        {
                            xtype: 'panel',
                            id: 'info',
                            tpl: Ext.create('Ext.XTemplate', 
                                '<div class="exercise-description">',
                                '    <div class="exercise-coaching-key"><span><b>{[Ext.ux.LanguageManager.TranslationArray.EXECUTION]}</b></span><br>{[Ext.ux.LanguageManager.lang === "EN" ? values.coatchingnotes_EN : Ext.ux.LanguageManager.lang === "ES" ? this.strLines(values.coatchingnotes_ES) :  values.coatchingnotes_DE]}</div>',
                                '    <div class="exercise-errors"><span><b>{[Ext.ux.LanguageManager.TranslationArray.POSSIBLE_ERRORS]}</b></span><br>{[this.strLines(values["mistakes_"+Ext.ux.LanguageManager.lang])]}</div>',
                                '</div>',
                                '',
                                {
                                    strLines: function(value) {
                                        var returnValue = '',
                                            strSplit = [];

                                        for (var i = 0; i < value.length; i++){
                                            strSplit = value[i].split(",");
                                            for (var j = 0; j < strSplit.length; j++) {
                                                returnValue = returnValue + strSplit[j].trim().substr(0,1).toUpperCase() + strSplit[j].trim().substr(1) + '<br>';
                                            }
                                            strSplit = [];
                                        }
                                        return returnValue;
                                    }
                                }
                            ),
                            title: 'Info'
                        },
                        {
                            xtype: 'panel',
                            id: 'alternatives',
                            title: 'Alternatives'
                        }
                    ]
                })
            ]
        });

        me.callParent(arguments);
    },

    processExercisePanelContent: function(config) {

        config.tabBar = {
                            cls:'lanista-tbar-exercise',
                            docked: 'top',
                            layout: {
                                type: 'hbox',
                                pack: 'end'
                            }
                        };


        return config;
    }

});