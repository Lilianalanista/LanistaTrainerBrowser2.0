/*
 * File: app/view/ExercisePanel.js
 *
 * This file was generated by Sencha Architect version 3.0.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('LanistaTrainer.view.ExercisePanel', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.exercisePanel',

    requires: [
        'Ext.XTemplate',
        'Ext.tab.Panel',
        'Ext.tab.Tab',
        'Ext.grid.Panel',
        'Ext.grid.column.Template',
        'Ext.form.field.TextArea'
    ],

    cls: 'exercise-panel',
    height: 250,
    id: 'exercisePanel',
    width: 400,

    layout: {
        type: 'vbox',
        align: 'stretch'
    },

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'panel',
                    flex: 1,
                    id: 'exercisePanelHeader',
                    tpl: [
                        '<div class="exercise">',
                        '    <div class="exercise_name">{[values["name_"+Ext.ux.LanguageManager.lang]]}</div>',
                        '    <div class="exercise-images">',
                        '        <div id="image-start-position" class="exercise-image" style="-webkit-background-size: cover; background-image: url({[(values.ext_id && values.ext_id.indexOf("CUST") != -1) ? (Ext.ux.ConfigManager.getServer() + Ext.ux.ConfigManager.getRoot() + "/tpmanager/img/b/"+values.ext_id) : "resources/images/exercises/"+values.ext_id]}_2.png);"/></div>',
                        '        <div id="image-end-position"   class="exercise-image" style="-webkit-background-size: cover; background-image: url({[(values.ext_id && values.ext_id.indexOf("CUST") != -1) ? (Ext.ux.ConfigManager.getServer() + Ext.ux.ConfigManager.getRoot() + "/tpmanager/img/b/"+values.ext_id) : "resources/images/exercises/"+values.ext_id]}_1.png);"/></div>',
                        '     </div>',
                        '</div>'
                    ]
                },
                {
                    xtype: 'tabpanel',
                    flex: 1,
                    id: 'exercisePanelContent',
                    activeTab: 0,
                    items: [
                        {
                            xtype: 'panel',
                            tpl: [
                                '<div class="exercise-description">',
                                '    <div class="exercise-coaching-key"><span>{[Ext.ux.LanguageManager.TranslationArray.EXECUTION]}</span><br>{[values["coatchingnotes_"+Ext.ux.LanguageManager.lang].replace(/,/g, \\'<br>\\')]}</div>',
                                '    <div class="exercise-errors"><span>{[Ext.ux.LanguageManager.TranslationArray.POSSIBLE_ERRORS]}</span><br>{[values["mistakes_"+Ext.ux.LanguageManager.lang].replace(/,/g, \\'<br>\\')]}</div>',
                                '</div>',
                                ''
                            ],
                            title: 'Info'
                        },
                        {
                            xtype: 'panel',
                            title: 'Alternatives'
                        },
                        {
                            xtype: 'panel',
                            hidden: true,
                            id: 'protocollsTabPanel',
                            layout: 'fit',
                            title: 'Protocolls',
                            dockedItems: [
                                {
                                    xtype: 'panel',
                                    dock: 'right',
                                    height: 300,
                                    id: 'protocollPanel',
                                    tpl: [
                                        '<div class="protocoll-configuration">{weight} Kg. x {training} {unit_text} {[values.training_unit == 0 ? Ext.ux.LanguageManager.TranslationArray.REP : values.training_unit == 1 ? Ext.ux.LanguageManager.TranslationArray.SEC : Ext.ux.LanguageManager.TranslationArray.MIN]}</div>'
                                    ],
                                    width: 350,
                                    title: 'My Panel'
                                }
                            ],
                            items: [
                                {
                                    xtype: 'gridpanel',
                                    id: 'exerciseProtocolls',
                                    width: 200,
                                    title: 'My Grid Panel',
                                    emptyText: 'This exercise is not protocolled',
                                    columns: [
                                        {
                                            xtype: 'templatecolumn',
                                            tpl: [
                                                '<div>{[Ext.ux.LanguageManager.TranslationArray.SET]} {#}: {weight} Kg x {training} {[values.training_unit == 0 ? Ext.ux.LanguageManager.TranslationArray.REP : values.training_unit == 1 ? Ext.ux.LanguageManager.TranslationArray.SEC : Ext.ux.LanguageManager.TranslationArray.MIN]}</div>'
                                            ],
                                            dataIndex: 'string'
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'panel',
                            hidden: true,
                            id: 'configurationTabPanel',
                            layout: 'fit',
                            title: 'Protocolls',
                            dockedItems: [
                                {
                                    xtype: 'panel',
                                    dock: 'right',
                                    height: 300,
                                    hidden: true,
                                    id: 'configurationPanel',
                                    tpl: [
                                        '<div class="protocoll-configuration">{weight} Kg. x {training} {unit_text} {[values.training_unit == 0 ? Ext.ux.LanguageManager.TranslationArray.REP : values.training_unit == 1 ? Ext.ux.LanguageManager.TranslationArray.SEC : Ext.ux.LanguageManager.TranslationArray.MIN]} {rounds_min} {[values.rounds_min > 1 ? Ext.ux.LanguageManager.TranslationArray.FORM_PLANEXRCISE_SETS : Ext.ux.LanguageManager.TranslationArray.SET]}</div>',
                                        '<div class="protocoll-description">{[values.description ? values.description : Ext.ux.LanguageManager.TranslationArray.NO_PLAN_EXERCISE_DESCRIPTION]}</div>',
                                        ''
                                    ],
                                    width: 500,
                                    items: [
                                        {
                                            xtype: 'textareafield',
                                            id: 'exerciseDescriptionInputPanel',
                                            fieldLabel: 'Label'
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    }

});