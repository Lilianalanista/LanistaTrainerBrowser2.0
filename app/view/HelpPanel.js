/*
 * File: app/view/HelpPanel.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('LanistaTrainer.view.HelpPanel', {
    extend: 'Ext.window.Window',
    alias: 'widget.helpPanel',

    requires: [
        'LanistaTrainer.view.HelpPanelViewModel',
        'Ext.panel.Panel'
    ],

    viewModel: {
        type: 'helpPanel'
    },
    cls: 'x-help-panel',
    height: 450,
    id: 'helpPanel',
    style: 'bottom:0',
    width: 1100,
    modal: true,
    defaultListenerScope: true,

    layout: {
        type: 'hbox',
        align: 'stretch'
    },
    listeners: {
        show: 'onHelpPanelShow',
        beforeclose: 'onHelpPanelBeforeClose'
    },
    items: [
        {
            xtype: 'panel',
            flex: 1,
            html: 'Loading...',
            id: 'sideHelpPanel',
            scrollable: true,
            header: false
        },
        {
            xtype: 'panel',
            flex: 1,
            html: 'Loading...',
            id: 'sideTutorialPanel',
            scrollable: true,
            header: false
        }
    ],

    onHelpPanelShow: function(component, eOpts) {
        var container = this,
            viewPort = Ext.ComponentQuery.query("viewport")[0];
            xPosotionIniX = (viewPort.width - component.width) / 2;
            xPosotionIniY = viewPort.height - component.height;

        component.animate({
            to: {
                x: xPosotionIniX,
                y: xPosotionIniY
            }
        });



    },

    onHelpPanelBeforeClose: function(panel, eOpts) {

        panel.el.ghost('b', {
            remove: true,
            callback: function(){
                panel.destroy(true);
            }
        });
        return false;
    }

});