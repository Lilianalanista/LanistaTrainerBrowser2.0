{
    "type": "Ext.view.View",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "autoScroll": true,
        "cls": "lanista-exercise-planpanel",
        "designer|userAlias": "planExercisesList",
        "designer|userClassName": "PlanExercisesList",
        "height": 250,
        "id": "planExercisesList",
        "itemCls": "lanista-plan-exercise",
        "itemSelector": "div",
        "selectedItemCls": "lanista-plan-exercise-selected",
        "store": "PlanExerciseStore",
        "width": 400
    },
    "designerId": "a0b0768f-a567-47c7-ae7b-4a38dd90a70b",
    "cn": [
        {
            "type": "Ext.XTemplate",
            "reference": {
                "name": "itemTpl",
                "type": "object"
            },
            "codeClass": null,
            "userConfig": {
                "designer|displayName": "itemTpl",
                "implHandler": [
                    "<div class=\"exercise-list-delete\"></div>",
                    "<div class=\"exercise-list-fields\">",
                    "    <div class=\"exercise-list-img exercise-list-img-right\" style=\"background-image: url({[(values['exercise_ext_id'] && values['exercise_ext_id'].indexOf ('CUST') == -1) ? ('resources/images/previews/'+values['exercise_ext_id']) : (Ext.ux.ConfigManager.getServer() + Ext.ux.ConfigManager.getRoot() + '/tpmanager/img/s/'+values['exercise_ext_id'])]}_2.jpg);\"></div>",
                    "    <div class=\"exercise-list-img exercise-list-img-left\" style=\"background-image: url({[(values['exercise_ext_id'] && values['exercise_ext_id'].indexOf ('CUST') == -1) ? ('resources/images/previews/'+values['exercise_ext_id']) : (Ext.ux.ConfigManager.getServer() + Ext.ux.ConfigManager.getRoot() + '/tpmanager/img/s/'+values['exercise_ext_id'])]}_1.jpg);\"></div>",
                    "    <div class=\"exercise-list-imges\"></div>",
                    "    <div class=\"lanista-exercices-title\">{[values[\"exercise_name_\" + Ext.ux.LanguageManager.lang]]}</div>",
                    "    <div class=\"lanista-exercices-foter\">",
                    "        <div class=\"lanista-exercices-weight\">{[values[\"weight_min\"] > 0 ? \"<span>Kg.</span>\"+values[\"weight_min\"] : '']}</div>",
                    "        <div class=\"lanista-exercices-training\"><span>{[Ext.ux.LanguageManager.TranslationArray.FORM_PLANEXRCISE_SETS]}</span> {rounds_min} </div>",
                    "        <div class=\"lanista-exercices-sets\"><span>{[values[\"training_unit\"] == 2 ? Ext.ux.LanguageManager.TranslationArray.MIN : values[\"training_unit\"] == 1 ? Ext.ux.LanguageManager.TranslationArray.SEC : Ext.ux.LanguageManager.TranslationArray.REP]} {training_min} </span></div>",
                    "    </div>",
                    "</div>",
                    ""
                ]
            },
            "designerId": "2d5dea2b-0af6-4089-b888-0c4bfcd45295"
        },
        {
            "type": "basiceventbinding",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onPlanExercisesListAfterRender",
                "implHandler": [
                    "var el = component.el,",
                    "    ini = 4000;",
                    "",
                    "el.on(",
                    "    'click', function(e,t) {",
                    "        var controller = LanistaTrainer.app.getController ('PlanController'),",
                    "            activeTab = controller.getPlanPanel().down('tabpanel').getActiveTab(),",
                    "            Exercise = Ext.ModelManager.getModel('LanistaTrainer.model.ExerciseModel');",
                    "",
                    "        for (var i = 0; i < activeTab.el.dom.childNodes.length; i++)",
                    "        {",
                    "            activeTab.el.dom.childNodes[i].internalId = i;",
                    "        }",
                    "",
                    "        var internalItemId = Ext.get(t).dom.parentNode.internalId,",
                    "            itemRecord = activeTab.recordsArray[internalItemId];",
                    "",
                    "        itemRecord.internalId = internalItemId;",
                    "        Exercise.load(itemRecord.exercise_id !== 0 ? itemRecord.exercise_id : parseInt(itemRecord.user_exercise_id) + ini, {",
                    "            success: function( exercise ) {",
                    "                LanistaTrainer.app.getController('PlanController').getPlanPanel().addCls ('blured');",
                    "                LanistaTrainer.app.panels[LanistaTrainer.app.panels.length] = 'ExercisePanel';",
                    "                LanistaTrainer.app.fireEvent('showExercisePanel', exercise, itemRecord);",
                    "            }",
                    "        });",
                    "    },",
                    "    this, {delegate: '.exercise-list-fields'});",
                    "",
                    "el.on(",
                    "    'click', function(e,t) {",
                    "        var controller = LanistaTrainer.app.getController ('PlanController'),",
                    "            activeTab = controller.getPlanPanel().down('tabpanel').getActiveTab();",
                    "",
                    "        for (var i = 0; i < activeTab.el.dom.childNodes.length; i++){",
                    "            activeTab.el.dom.childNodes[i].internalId = i;",
                    "        }",
                    "        if (!t.parentNode.classList.contains('lanista-list-itemrounded-deleting'))",
                    "            t.parentNode.className = t.parentNode.className + ' lanista-list-itemrounded-deleting';",
                    "",
                    "        var internalItemId = Ext.get(t).dom.parentNode.internalId;",
                    "        this.markDeleteExercises(t, internalItemId);",
                    "    },",
                    "    this, {delegate: '.exercise-list-delete'});",
                    "",
                    "el.on(",
                    "    'mouseover', function(e,t) {",
                    "        Ext.get(t).removeCls('item-not-clicked');",
                    "        Ext.get(t).addCls('item-clicked');",
                    "        Ext.get(t).down('.exercise-list-delete').setHTML('u');",
                    "        Ext.get(t).addCls('exercise-apply-delete');",
                    "    },",
                    "    this,{ delegate: '.lanista-plan-exercise'});",
                    "",
                    "el.on(",
                    "    'mouseout', function(e,t) {",
                    "        Ext.get(t).removeCls('item-clicked');",
                    "        Ext.get(t).addCls('item-not-clicked');",
                    "        Ext.get(t).down('.exercise-list-delete').setHTML('');",
                    "        Ext.get(t).removeCls('exercise-apply-delete');",
                    "    },",
                    "    this,{delegate: '.lanista-plan-exercise'});"
                ],
                "name": "afterrender",
                "scope": "me"
            },
            "designerId": "6815226b-cf34-44e7-8289-c2d47ff6746f"
        },
        {
            "type": "basiceventbinding",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onPlanExercisesListViewReady",
                "implHandler": [
                    "var el = dataview.el,",
                    "    controller = LanistaTrainer.app.getController ('PlanController'),",
                    "    activeTab = controller.getPlanPanel().down('tabpanel').getActiveTab(),",
                    "    selectionTab = controller.selectionsTab[controller.currentDay.id.substring(1)];",
                    "",
                    "if (activeTab.id === el.id){",
                    "    //Looking for items that must be deleted and they are deleted",
                    "    for (var j = 0; j < selectionTab.length; j++){",
                    "        if (selectionTab[j][3] === 'd'){",
                    "            for (var k = 0; k < dataview.recordsArray.length; k++){",
                    "                if (dataview.recordsArray[k].exercise_id === selectionTab[j][0] || dataview.recordsArray[k].user_exercise_id === selectionTab[j][0])",
                    "                    break;",
                    "            }",
                    "            controller.deleteItemView(dataview.recordsArray[k]);",
                    "            selectionTab.splice(j,1);",
                    "            activeTab.recordsArray.splice(j, 1);",
                    "            dataview.getStore().load(function(records, operation, success) {",
                    "                controller.populateTabsExercisesByDay(records);",
                    "            });",
                    "        }",
                    "    }",
                    "}",
                    "",
                    "for (var i = 0; i < el.dom.childNodes.length; i++)",
                    "{",
                    "    el.dom.childNodes[i].internalId = i;",
                    "}"
                ],
                "name": "viewready",
                "scope": "me"
            },
            "designerId": "804732bc-1eb1-483c-86ff-a7efe9d627e1"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "t",
                    "internalId"
                ],
                "fn": "markDeleteExercises",
                "implHandler": [
                    "var exercisesToDelete,",
                    "    exercisesToDeleteArray = [],",
                    "    pos;",
                    "",
                    "exercisesToDelete = LanistaTrainer.app.getController('PlanController').exercisesToDelete ? LanistaTrainer.app.getController('PlanController').exercisesToDelete : \"\";",
                    "exercisesToDelete = new String(exercisesToDelete);",
                    "",
                    "if (exercisesToDelete.valueOf()){",
                    "    if (exercisesToDelete.indexOf(\",\") > 0)",
                    "        exercisesToDeleteArray = exercisesToDelete.split(\",\");",
                    "    else",
                    "        exercisesToDeleteArray[0] = exercisesToDelete.valueOf();",
                    "}",
                    "",
                    "pos = exercisesToDeleteArray.indexOf(internalId.toString());",
                    "if (pos >= 0){",
                    "    classValue = t.parentNode.className;",
                    "    classValue = classValue.replace('lanista-list-itemrounded-selected-delete','', 'g');",
                    "    t.parentNode.className = classValue;",
                    "",
                    "    exercisesToDeleteArray.splice(pos,1);",
                    "    exercisesToDelete = \"\";",
                    "    if (exercisesToDeleteArray.length > 0){",
                    "        exercisesToDelete = exercisesToDeleteArray[0];",
                    "        for (var i = 1; i < exercisesToDeleteArray.length; i++){",
                    "            exercisesToDelete = exercisesToDelete + ',' + exercisesToDeleteArray[i];",
                    "        }",
                    "    }",
                    "    LanistaTrainer.app.getController('PlanController').exercisesToDelete = exercisesToDelete;",
                    "    if (exercisesToDeleteArray.length <= 0)",
                    "        LanistaTrainer.app.getController('PlanController').getRightCommandPanel().getComponent('removePlanExercisesButton').hide();",
                    "}",
                    "else{",
                    "    t.parentNode.className = t.parentNode.className + ' lanista-list-itemrounded-selected-delete';",
                    "    LanistaTrainer.app.getController('PlanController').exercisesToDelete = exercisesToDelete.valueOf() ? exercisesToDelete + ',' + internalId : internalId.toString();",
                    "    LanistaTrainer.app.getController('PlanController').showCommands();",
                    "    LanistaTrainer.app.getController('PlanController').getRightCommandPanel().getComponent('removePlanExercisesButton').show();",
                    "",
                    "}",
                    ""
                ]
            },
            "designerId": "cab5dafd-ba0e-40ca-ade9-cc51cf72177e"
        }
    ]
}