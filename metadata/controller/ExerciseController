{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userAlias": "exerciseController",
        "designer|userClassName": "ExerciseController",
        "id": "ExerciseController"
    },
    "designerId": "5276ac9b-8d40-4de3-b7e5-775fb50be203",
    "cn": [
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "mainStage",
                "selector": "#mainStage"
            },
            "designerId": "11515390-f4bd-4560-968c-88a0c48a9541"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "rightCommandPanel",
                "selector": "#rightCommandPanel"
            },
            "designerId": "d165ea93-537e-459c-a5e1-5f867d61bc9e"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "leftCommandPanel",
                "selector": "#leftCommandPanel"
            },
            "designerId": "26c5c282-c226-4946-9ebd-ce9bee93e67d"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "mainViewport",
                "selector": "mainViewport"
            },
            "designerId": "7e31afd4-0ae4-4378-b79f-d22e24e3e49c"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "autoCreate": true,
                "ref": "exercisePanel",
                "selector": "#exercisePanel",
                "xtype": "exercisePanel"
            },
            "designerId": "3766444b-ab43-4b2b-93e1-f9fb47bf0d8d"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "autoCreate": true,
                "ref": "videoPanel",
                "selector": "#videoPanel",
                "xtype": "videoPanel"
            },
            "designerId": "3db90b85-831c-4641-b219-8477074637a8"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #sendProtocollButton",
                "designer|targetType": "LanistaButton",
                "fn": "onsendProtocollButtonClick",
                "implHandler": [
                    "var controller = this;",
                    "var record = this.getExercisePanel ().down ( '#protocollPanel' ).protocollInformation;",
                    "",
                    "var dt = new Date();",
                    "",
                    "var newProtocoll = Ext.create('LanistaTrainer.model.Protocoll', {",
                    "    exercise_id : record.exercise_id,",
                    "    user_exercise_id : record.user_exercise_id,",
                    "    weight: record.weight,",
                    "    training: record.training,",
                    "    training_unit: record.training_unit,",
                    "    user_id: LanistaTrainer.app.currentCustomer.data.id,",
                    "    execution_date  : Ext.Date.format (dt, 'Y-m-d h:i:s'),",
                    "    creator_id: localStorage.getItem(\"user_id\")",
                    "});",
                    "",
                    "newProtocoll.setProxy(new Ext.data.proxy.Ajax({",
                    "        url: Ext.ux.ConfigManager.getRoot() + '/tpmanager/exerciseprotocoll/json',",
                    "        model: 'LanistaTrainer.model.Protocoll',",
                    "        noCache: false,",
                    "        reader: {",
                    "            type: 'json',",
                    "            root: 'entries'",
                    "        },",
                    "        writer: {",
                    "            type: 'json',",
                    "            root: 'records',",
                    "            allowSingle: false",
                    "        },",
                    "        headers: {",
                    "            user_id: localStorage.getItem(\"user_id\")",
                    "        }",
                    "    }));",
                    "",
                    "newProtocoll.save ({",
                    "    callback: function( protocoll ) {",
                    "        var storeProtocolls = controller.getExercisePanel ().down ('#exerciseProtocolls').getStore();",
                    "        storeProtocolls.load ();",
                    "    }",
                    "});",
                    "",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "359d115f-c79b-427e-a2bf-445071b38ca6"
        },
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "record",
                    "exerciseProtocoll",
                    "callback"
                ],
                "fn": "onShowExercisePanel",
                "implHandler": [
                    "var controller = this,",
                    "    exercisePanel\t= controller.getExercisePanel(),",
                    "    mainStage\t= controller.getMainStage();",
                    "",
                    "controller.currentPlanExercise = exerciseProtocoll;",
                    "controller.record = record;",
                    "",
                    "exercisePanel.down('#exercisePanelHeader').data = record.data;",
                    "exercisePanel.down('#exercisePanelContent').items.items[0].data = record.data;",
                    "controller.setActiveItemNew();",
                    "",
                    "var currentPlan = LanistaTrainer.app.getController ( 'PlanController' ).plan;",
                    "if ( currentPlan ) {",
                    "    controller.currentPlanExercise.training = controller.currentPlanExercise.training_min;",
                    "    controller.currentPlanExercise.weight = controller.currentPlanExercise.weight_min;",
                    "    exercisePanel.down('#exercisePanelContent').child('#configurationTabPanel').tab.show();",
                    "    exercisePanel.down('#configurationPanel').update ( controller.currentPlanExercise );",
                    "}",
                    "",
                    "if ( LanistaTrainer.app.currentCustomer ) {",
                    "    exercisePanel.down('#exercisePanelContent').child('#protocollsTabPanel').tab.show();",
                    "",
                    "    // get user protocolls",
                    "    var protocollsStore = Ext.getStore( \"ProtocollStore\" );",
                    "",
                    "    protocollsStore.clearGrouping();",
                    "    protocollsStore.clearFilter();",
                    "    if ( record.data.ext_id.indexOf ( 'CUST' ) == -1 )",
                    "        protocollsStore.filter ([ {property :'exercise_id', value:record.data.id } ,  {property: 'user_id',value: LanistaTrainer.app.currentCustomer.data.id} ]);",
                    "    else",
                    "        protocollsStore.filter ([ {property :'user_exercise_id', value: record.data.id} , {property:'user_id', value: LanistaTrainer.app.currentCustomer.data.id} ]);",
                    "",
                    "    protocollsStore.group( 'execution_date_day','DESC');",
                    "    protocollsStore.sort( {",
                    "        direction: 'DESC',",
                    "        //property: 'execution_date_day'",
                    "        property: 'id'",
                    "    });",
                    "",
                    "    protocollsStore.load (function (records) {",
                    "        exercisePanel.down('#exerciseProtocolls').reconfigure(protocollsStore);",
                    "        if ( protocollsStore.data && protocollsStore.data.items.length > 0 ) {",
                    "            exercisePanel.down('#protocollPanel').protocollInformation = protocollsStore.data.items[0].data;",
                    "            exercisePanel.down('#protocollPanel').update (protocollsStore.data.items[0].data);",
                    "        } else {",
                    "            // USE THE EXERCISE CONFIGURATION",
                    "            console.log ( \"USING EXERCISE CONFIGURATION\");",
                    "            exercisePanel.down('#protocollPanel').protocollInformation = controller.currentPlanExercise;",
                    "            exercisePanel.down('#protocollPanel').update ( controller.currentPlanExercise );",
                    "        }",
                    "   });",
                    "",
                    "}",
                    "exercisePanel.down('#exercisePanelContent').setActiveTab(0).show();",
                    "exercisePanel.addCls('md-show');",
                    "mainStage.add( exercisePanel );",
                    "mainStage.getLayout().setActiveItem(\"exercisePanel\",'1');",
                    "",
                    "exercisePanel.on('hide', function(component) {",
                    "    component.destroy();",
                    "}, controller);",
                    "",
                    "// **** 1 create the commands",
                    "LanistaTrainer.app.setStandardButtons('closeExercisePanelButton');",
                    "this.showCommands();",
                    "",
                    "// *** 2 Show the panel",
                    "exercisePanel.show();",
                    "",
                    "exercisePanel.down('#exercisePanelContent').fireEvent('tabchange', exercisePanel, exercisePanel.down('#exercisePanelContent').setActiveTab(0));",
                    "LanistaTrainer.app.fireEvent('showExerciseHeaderUpdate');",
                    "LanistaTrainer.app.fireEvent('showStage');",
                    "",
                    "// *** 4 Callback",
                    "if (callback instanceof Function) callback();",
                    "",
                    "// *** 5 Load data",
                    "controller.loadData();"
                ],
                "name": "showExercisePanel",
                "scope": "this"
            },
            "designerId": "b7e11416-822c-48c9-9af2-6e16a3113f7b"
        },
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "callback"
                ],
                "fn": "onCloseExercisePanel",
                "implHandler": [
                    "var controller = this;",
                    "",
                    "controller.getRightCommandPanel().items.each(function (item) {",
                    "    item.hide();",
                    "});",
                    "controller.getLeftCommandPanel().items.each(function (item) {",
                    "    item.hide();",
                    "});",
                    "controller.getExercisePanel().hide();",
                    "if (callback instanceof Function) callback();",
                    ""
                ],
                "name": "closeExercisePanel",
                "scope": "this"
            },
            "designerId": "7e059891-b0d1-42f2-94d5-77be9f459db6"
        },
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onShowExerciseHeaderUpdate",
                "implHandler": [
                    "var controller = this,",
                    "    record = LanistaTrainer.app.currentCustomer,",
                    "    divLogo = '',",
                    "    divInfoCustomer = '';",
                    "",
                    "if (record) {",
                    "    divLogo = '<div class=\"lansita-header-customer-image-not-found show-info-customer\" id=\"showCustomerDataButton\"><div class=\"lansita-header-customer-logo show-info-customer\" id=\"showCustomerDataButton\" style=\"background-image: url(' + Ext.ux.ConfigManager.getServer() + Ext.ux.ConfigManager.getRoot() + '/tpmanager/img/p/'+ record.data.id + '_photo.jpg);\"></div></div>';",
                    "    divInfoCustomer = '<div class=\"lansita-header-customer-name\"> <span class=\"last-name\">' + record.data.last_name + '</span><br> <span class=\"first-name\">' + record.data.first_name +'</span></div>';",
                    "}",
                    "controller.getMainViewport().down(\"#header\").update({",
                    "    info: divLogo + divInfoCustomer,",
                    "    title: Ext.ux.LanguageManager.TranslationArray.EXERCISE.toUpperCase()",
                    "});",
                    ""
                ],
                "name": "showExerciseHeaderUpdate",
                "scope": "this"
            },
            "designerId": "cdabd1c1-d1c0-4431-95d3-fc3c1eb85b61"
        },
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "weightTrainingValues",
                    "indications",
                    "sets"
                ],
                "fn": "onPlanExerciseRecordChanged",
                "implHandler": [
                    "var currentPanel = this.getExercisePanel ().down ( '#exercisePanelContent' ).getActiveTab (),",
                    "    userId = localStorage.getItem(\"user_id\"),",
                    "    controller = this,",
                    "    planController = LanistaTrainer.app.getController ('PlanController'),",
                    "    activeTabPlan = planController.getPlanPanel().down('tabpanel').getActiveTab(),",
                    "    planExercise;",
                    "",
                    "if ( currentPanel.id == 'protocollsTabPanel' ) {",
                    "    currentPanel.down('#protocollPanel').protocollInformation.weight = weightTrainingValues[0];",
                    "    currentPanel.down('#protocollPanel').protocollInformation.training = weightTrainingValues[1];",
                    "    currentPanel.down('#protocollPanel').protocollInformation.training_unit = weightTrainingValues[2];",
                    "    currentPanel.down('#protocollPanel').update(currentPanel.down('#protocollPanel').protocollInformation);",
                    "}",
                    "else if ( currentPanel.id == 'configurationTabPanel' ) {",
                    "    var currPlanExercise = controller.currentPlanExercise;",
                    "",
                    "    if (weightTrainingValues){",
                    "        currPlanExercise.weight_min = weightTrainingValues[0];",
                    "        currPlanExercise.training_min = weightTrainingValues[1];",
                    "        currPlanExercise.weight = currPlanExercise.weight_min;",
                    "        currPlanExercise.training = currPlanExercise.training_min;",
                    "        currPlanExercise.training_unit = weightTrainingValues[2];",
                    "    }",
                    "    if (indications){",
                    "        currPlanExercise.description = indications;",
                    "    }",
                    "    if (sets){",
                    "        currPlanExercise.rounds_min = sets;",
                    "    }",
                    "",
                    "    controller.currentPlanExercise = currPlanExercise;",
                    "    currentPanel.down('#configurationPanel').update ( currPlanExercise );",
                    "",
                    "    planExercise = Ext.create('LanistaTrainer.model.PlanExercise');",
                    "    planExercise.data = currPlanExercise;",
                    "    planExercise.setProxy(new Ext.data.proxy.Ajax({",
                    "        url: Ext.ux.ConfigManager.getRoot() + '/tpmanager/planexercises/json',",
                    "        model: 'PlanExercise',",
                    "        noCache: false,",
                    "        reader: {",
                    "            type: 'json',",
                    "            root: 'entries'",
                    "        },",
                    "        writer: {",
                    "            type: 'json',",
                    "            root: 'records',",
                    "            allowSingle: false",
                    "        },",
                    "        headers: {",
                    "            user_id: userId",
                    "        }",
                    "    }));",
                    "    planExercise.save ();",
                    "}"
                ],
                "name": "planExerciseRecordChanged",
                "scope": "this"
            },
            "designerId": "04b60a01-57a8-4246-81a1-b24750896683"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "exercisePanel #exercisePanelContent",
                "designer|targetType": "Ext.tab.Panel",
                "fn": "onTabpanelTabChange",
                "implHandler": [
                    "var controller = this;",
                    "if ( newCard.id == 'info' ) {",
                    "    controller.showInfoTabCommands();",
                    "}",
                    "else if ( newCard.id == 'protocollsTabPanel' ) {",
                    "    controller.showConfigTabCommands();",
                    "} else if ( newCard.id == 'configurationTabPanel' ) {",
                    "    console.log ( \"SHOW CONFIGURATION COMMANDS\" );",
                    "    controller.showExerciseConfigurationsCommands();",
                    "} else {",
                    "    console.log ( \"HIDE PROTOCOLL COMMANDS\" );",
                    "    controller.getRightCommandPanel().items.each(function (item) {",
                    "        item.hide();",
                    "    });",
                    "}"
                ],
                "name": "tabchange",
                "scope": "me"
            },
            "designerId": "480210a6-8122-49b7-963c-46b9d09b3be4"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "callback"
                ],
                "fn": "showCommands",
                "implHandler": [
                    "",
                    "var controller = this;",
                    "",
                    "controller.getRightCommandPanel().items.each(function (item) {",
                    "    item.hide();",
                    "});",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    ""
                ]
            },
            "designerId": "fd6c9d72-16de-45e3-a9d9-7a588fddf3f8"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "loadData",
                "implHandler": [
                    ""
                ]
            },
            "designerId": "4def836f-6d06-4af9-a71d-d885c66f98d2"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #closeExercisePanelButton",
                "designer|targetType": "LanistaButton",
                "fn": "onCloseExercisePanelButtonClick",
                "implHandler": [
                    "var controller = this;",
                    "",
                    "LanistaTrainer.app.fireEvent('closeExercisePanel'  , function() {",
                    "    if (controller.getMainStage().getLayout().getActiveItem().id === 'customerExercisesPanel')",
                    "    {",
                    "        controller.getMainStage().getLayout().getActiveItem().down('#customerProtocolls').removeAll(true);",
                    "        controller.getController(controller.getMainStage().getLayout().getActiveItem().controller.id).loadProtocolls();",
                    "    }",
                    "",
                    "    LanistaTrainer.app.setStandardButtons('close' + LanistaTrainer.app.panels[LanistaTrainer.app.panels.length - 1] + 'Button');",
                    "    controller.getController(controller.getMainStage().getLayout().getActiveItem().controller.id).showCommands();",
                    "    controller.getController(controller.getMainStage().getLayout().getActiveItem().controller.id).setHeader();",
                    "    controller.getMainStage().getLayout().getActiveItem().removeCls ('blured');",
                    "",
                    "",
                    "    if (controller.getMainStage().getLayout().getActiveItem().id === 'planPanel'){",
                    "        var planController = LanistaTrainer.app.getController ('PlanController'),",
                    "            activeTabPlan = planController.getPlanPanel().down('tabpanel').getActiveTab();",
                    "        ",
                    "        planController.currentDay = activeTabPlan;",
                    "        activeTabPlan.store.reload();",
                    "",
                    "    }",
                    "});",
                    "",
                    "",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "a63a4abb-23ad-4785-ba69-7f020d28f70c"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "newCard",
                    "maintain"
                ],
                "fn": "setActiveItemNew",
                "implHandler": [
                    "",
                    "Ext.override(Ext.layout.CardLayout, {",
                    "    setActiveItem: function(newCard, maintain) {",
                    "",
                    "    var me = this,",
                    "        owner = me.owner,",
                    "        oldCard = me.activeItem,",
                    "        rendered = owner.rendered,",
                    "        newIndex;",
                    "",
                    "    newCard = me.parseActiveItem(newCard);",
                    "    newIndex = owner.items.indexOf(newCard);",
                    "",
                    "    // If the card is not a child of the owner, then add it.",
                    "    // Without doing a layout!",
                    "    if (newIndex == -1) {",
                    "        newIndex = owner.items.items.length;",
                    "        Ext.suspendLayouts();",
                    "        newCard = owner.add(newCard);",
                    "        Ext.resumeLayouts();",
                    "    }",
                    "",
                    "    // Is this a valid, different card?",
                    "    if (newCard && oldCard != newCard) {",
                    "        // Fire the beforeactivate and beforedeactivate events on the cards",
                    "        if (newCard.fireEvent('beforeactivate', newCard, oldCard) === false) {",
                    "            return false;",
                    "        }",
                    "        if (oldCard && oldCard.fireEvent('beforedeactivate', oldCard, newCard) === false) {",
                    "            return false;",
                    "        }",
                    "",
                    "        if (rendered) {",
                    "            Ext.suspendLayouts();",
                    "",
                    "            // If the card has not been rendered yet, now is the time to do so.",
                    "            if (!newCard.rendered) {",
                    "                me.renderItem(newCard, me.getRenderTarget(), owner.items.length);",
                    "            }",
                    "",
                    "            if (oldCard) {",
                    "                if (!maintain) {",
                    "                    if (me.hideInactive) {",
                    "                        oldCard.hide();",
                    "                        oldCard.hiddenByLayout = true;",
                    "                    }",
                    "                }",
                    "",
                    "                oldCard.fireEvent('deactivate', oldCard, newCard);",
                    "            }",
                    "            // Make sure the new card is shown",
                    "            if (newCard.hidden) {",
                    "                newCard.show();",
                    "            }",
                    "",
                    "            // Layout needs activeItem to be correct, so set it if the show has not been vetoed",
                    "            if (!newCard.hidden) {",
                    "                me.activeItem = newCard;",
                    "            }",
                    "            Ext.resumeLayouts(true);",
                    "        } else {",
                    "            me.activeItem = newCard;",
                    "        }",
                    "",
                    "        newCard.fireEvent('activate', newCard, oldCard);",
                    "",
                    "        return me.activeItem;",
                    "    }",
                    "    return false;",
                    "    }",
                    "});"
                ]
            },
            "designerId": "b5b533c3-e5b1-4518-be66-32b9e514527f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #changeProtollConfigurationButton",
                "designer|targetType": "LanistaButton",
                "fn": "onchangeProtollConfigurationButtonClick",
                "implHandler": [
                    "",
                    "var weightPicker = Ext.create('LanistaTrainer.view.WeightPicker', {}),",
                    "    trainingPicker = Ext.create('LanistaTrainer.view.TrainingPicker', {}),",
                    "    controller = this,",
                    "    exercisePanel\t= controller.getExercisePanel(),",
                    "    activeTab = controller.getExercisePanel ().down ( '#exercisePanelContent' ).getActiveTab ();",
                    "",
                    "controller.getMainViewport().add(weightPicker);",
                    "controller.getMainViewport().add(trainingPicker);",
                    "",
                    "weightPicker.show ();",
                    "trainingPicker.show ();",
                    "",
                    "if (activeTab.id === 'protocollsTabPanel'){",
                    "    weightPicker.setRecord ( exercisePanel.down('#protocollPanel').protocollInformation);",
                    "    trainingPicker.setRecord ( exercisePanel.down('#protocollPanel').protocollInformation);",
                    "}",
                    "else if (activeTab.id === 'configurationTabPanel'){",
                    "    weightPicker.setRecord(controller.currentPlanExercise);",
                    "    trainingPicker.setRecord (controller.currentPlanExercise);",
                    "}",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "2f60565c-bffa-4360-ac56-d4e2285d8524"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "showExerciseConfigurationsCommands",
                "implHandler": [
                    "controller = this;",
                    "",
                    "controller.getRightCommandPanel().items.each(function (item) {",
                    "    item.hide();",
                    "});",
                    "",
                    "var changeButton = Ext.create('LanistaTrainer.view.LanistaButton', {",
                    "    text:  Ext.ux.LanguageManager.TranslationArray.CONFIGURE_PROTOCOLL,",
                    "    itemId: 'changeProtollConfigurationButton',",
                    "    glyph: '120@Lanista Icons' //x",
                    "});",
                    "var indicationsButton = Ext.create('LanistaTrainer.view.LanistaButton', {",
                    "    text:  Ext.ux.LanguageManager.TranslationArray.PLAN_EXERCISE_DESCRIPTION,",
                    "    itemId: 'indicationsButton',",
                    "    glyph: '73@Lanista Icons' //I",
                    "",
                    "});",
                    "var changeSetsButton = Ext.create('LanistaTrainer.view.LanistaButton', {",
                    "    text:  Ext.ux.LanguageManager.TranslationArray.FORM_PLANEXRCISE_SETS_CONFIG,",
                    "    itemId: 'changeSetsButton',",
                    "    glyph: '74@Lanista Icons' //J",
                    "",
                    "});",
                    "",
                    "controller.getRightCommandPanel().add(",
                    "    changeButton",
                    ");",
                    "",
                    "controller.getRightCommandPanel().add(",
                    "    indicationsButton",
                    ");",
                    "",
                    "controller.getRightCommandPanel().add(",
                    "    changeSetsButton",
                    ");",
                    ""
                ]
            },
            "designerId": "a58ed111-e1d3-4d87-8857-650fbca3a2b4"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "showConfigTabCommands",
                "implHandler": [
                    "controller = this;",
                    "",
                    "controller.getRightCommandPanel().items.each(function (item) {",
                    "    item.hide();",
                    "});",
                    "",
                    "var changeButton = Ext.create('LanistaTrainer.view.LanistaButton', {",
                    "    text:  Ext.ux.LanguageManager.TranslationArray.CONFIGURE_PROTOCOLL,",
                    "    itemId: 'changeProtollConfigurationButton',",
                    "    glyph: '120@Lanista Icons' //x",
                    "",
                    "});",
                    "var protocollButton = Ext.create('LanistaTrainer.view.LanistaButton', {",
                    "    text:  Ext.ux.LanguageManager.TranslationArray.CREATE_PROTOCOLL,",
                    "    itemId: 'sendProtocollButton',",
                    "    glyph: '100@Lanista Icons', //d",
                    "    cls: [",
                    "        'lanista-command-button',",
                    "        'lanista-command-button-green'",
                    "    ]",
                    "});",
                    "",
                    "controller.getRightCommandPanel().add(",
                    "    changeButton",
                    ");",
                    "",
                    "controller.getRightCommandPanel().add(",
                    "    protocollButton",
                    ");"
                ]
            },
            "designerId": "4c6cfb18-faec-4674-b9b6-ae9b7c3d00a2"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #indicationsButton",
                "designer|targetType": "LanistaButton",
                "fn": "onIndicationsButtonClick",
                "implHandler": [
                    "this.getExercisePanel().down('#exerciseDescriptionInputPanel').show();",
                    "LanistaTrainer.app.fireEvent('showSavePanel', 'saveIndicationsButton','cancelIndicationsButton');",
                    "this.getExercisePanel().down('#exerciseDescriptionInputPanel').focus();"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "27c3cfc1-51a3-40d7-98f5-5fedb69c768d"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #saveIndicationsButton",
                "designer|targetType": "LanistaButton",
                "fn": "onSaveIndicationsButtonClick",
                "implHandler": [
                    "var indications = this.getExercisePanel().down('#exerciseDescriptionInputPanel');",
                    "",
                    "indications.hide();",
                    "this.showExerciseConfigurationsCommands();",
                    "LanistaTrainer.app.fireEvent('planExerciseRecordChanged', '',indications.getValue(),'');"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "9ff6c697-f455-4a18-827f-750da9e91a80"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #saveSetInputButton",
                "designer|targetType": "LanistaButton",
                "fn": "onSaveSetInputButtonClick",
                "implHandler": [
                    "var setInput = this.getExercisePanel().down('#setInput');",
                    "",
                    "setInput.hide();",
                    "this.showExerciseConfigurationsCommands();",
                    "LanistaTrainer.app.fireEvent('planExerciseRecordChanged', '', '', setInput.getValue());"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "2cf52dcc-8aff-4bbb-bd91-93ee669d7771"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #cancelIndicationsButton",
                "designer|targetType": "LanistaButton",
                "fn": "onCancelIndicationsButtonClick",
                "implHandler": [
                    "var indications = this.getExercisePanel().down('#exerciseDescriptionInputPanel');",
                    "indications.hide();",
                    "this.showExerciseConfigurationsCommands();"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "bc137c7c-96e7-4892-883b-1e99ec96db06"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #cancelSetInputButton",
                "designer|targetType": "LanistaButton",
                "fn": "onCancelSetInputButton",
                "implHandler": [
                    "var setInput = this.getExercisePanel().down('#setInput');",
                    "setInput.hide();",
                    "this.showExerciseConfigurationsCommands();"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "ec8022b6-4afe-47ce-a0b3-02afefbdb128"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #videoButton",
                "designer|targetType": "LanistaButton",
                "fn": "onVideoButtonClick",
                "implHandler": [
                    "controller = this;",
                    "videoPanel = controller.getVideoPanel();",
                    "",
                    "",
                    "videoPanel.html = '<iframe class=\"lanista-video\" width=\"560\" height=\"315\" src=\"' + Ext.ux.ConfigManager.getServer() + Ext.ux.ConfigManager.getRoot() + '/tpmanager/video/video/' + this.record.data.ext_id + '.mp4\" frameborder=\"0\" allowfullscreen></iframe>';",
                    "",
                    "",
                    "",
                    "",
                    "LanistaTrainer.app.getController('MainController').getLanistaStage().up('mainViewport').add( videoPanel );",
                    "videoPanel.show ();",
                    "videoPanel.on ( 'hide', function ( component ) {",
                    "    component.destroy ();",
                    "});",
                    "//videoPanel.down ( '#video' ).play();"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "5639abae-b80b-4dd1-ad61-8d639784053c"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #changeSetsButton",
                "designer|targetType": "LanistaButton",
                "fn": "onChangeSetsButtonClick",
                "implHandler": [
                    "this.getExercisePanel().down('#setInput').show();",
                    "LanistaTrainer.app.fireEvent('showSavePanel', 'saveSetInputButton','cancelSetInputButton');",
                    "this.getExercisePanel().down('#setInput').focus();"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "bccc70a4-76d0-40a2-b4c3-6cb5b36b569a"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "showInfoTabCommands",
                "implHandler": [
                    "controller = this;",
                    "",
                    "controller.getRightCommandPanel().items.each(function (item) {",
                    "    item.hide();",
                    "});",
                    "",
                    "var videoButton = Ext.create('LanistaTrainer.view.LanistaButton', {",
                    "    text:  'VIDEO',",
                    "    itemId: 'videoButton',",
                    "    glyph: '89@Lanista Icons' //Y",
                    "",
                    "});",
                    "",
                    "controller.getRightCommandPanel().add(",
                    "    videoButton",
                    ");"
                ]
            },
            "designerId": "a2264994-03d9-4c87-b661-916b4c7a945b"
        }
    ]
}