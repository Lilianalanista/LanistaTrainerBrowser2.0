{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userAlias": "measuresController",
        "designer|userClassName": "MeasuresController",
        "id": "measuresController"
    },
    "designerId": "bfc39f89-dd40-4fa4-be5d-36466ecdedb9",
    "cn": [
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "callback"
                ],
                "fn": "onShowMeasuresPanel",
                "implHandler": [
                    "var controller = this,",
                    "    measuresPanel,",
                    "    mainStage\t= controller.getMainStage(),",
                    "    measuresPanel = controller.getMeasuresPanel(),",
                    "    measuresStore = Ext.getStore('MeasuresStore');",
                    "",
                    "measuresStore.setProxy(new Ext.data.proxy.Ajax({",
                    "    url: Ext.ux.ConfigManager.getRoot() + '/tpmanager/user/getcustomerweights',",
                    "    reader: {",
                    "        type: 'json',",
                    "        root: 'entries'",
                    "    },",
                    "    writer: {",
                    "        type: 'json',",
                    "        root: 'results'",
                    "    },",
                    "    headers: {",
                    "        user_id: localStorage.getItem(\"user_id\")",
                    "    }",
                    "}));",
                    "",
                    "measuresPanel.down('#measuresChat').show();",
                    "measuresPanel.down('#measuresTable').hide();",
                    "",
                    "measuresStore.removeFilter('caliperFilter');",
                    "filterFunction = new Ext.util.Filter({",
                    "    id:'measuresFilter',",
                    "    property: \"user_id\", value: LanistaTrainer.app.currentCustomer.data.id,",
                    "    filterFn: function(item){",
                    "        return (item.data.weight !== 0 || item.data.height !== 0 || item.data.futrex !== 0);",
                    "    }",
                    "});",
                    "measuresStore.filters.add (filterFunction);",
                    "//measuresStore.setSorters ( 'record_date' );",
                    "measuresStore.load(function(records, operation, success) {",
                    "    mainStage.add( measuresPanel );",
                    "    measuresPanel.on('hide', function(component) {",
                    "        component.destroy();",
                    "    }, controller);",
                    "",
                    "    // **** 1 create the commands",
                    "    LanistaTrainer.app.setStandardButtons('closeMeasuresPanelButton');",
                    "    controller.showCommands();",
                    "",
                    "    // *** 2 Show the panel",
                    "    measuresPanel.show();",
                    "",
                    "    LanistaTrainer.app.fireEvent('showMeasuresHeaderUpdate');",
                    "    LanistaTrainer.app.fireEvent('showStage');",
                    "",
                    "    // *** 4 Callback",
                    "    if (callback instanceof Function) callback();",
                    "",
                    "    // *** 5 Load data",
                    "    controller.loadData();",
                    "});",
                    ""
                ],
                "name": "showMeasuresPanel",
                "scope": "this"
            },
            "designerId": "f5b7b91f-753b-494d-9d8a-f29a97987ff7"
        },
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "callback"
                ],
                "fn": "onCloseMeasuresPanel",
                "implHandler": [
                    "var controller = this;",
                    "LanistaTrainer.app.fireEvent('hideStage', function () {",
                    "    controller.getRightCommandPanel().items.each(function (item) {",
                    "        item.hide();",
                    "    });",
                    "    controller.getLeftCommandPanel().items.each(function (item) {",
                    "        item.hide();",
                    "    });",
                    "    controller.getMeasuresPanel().hide();",
                    "    if (callback instanceof Function) callback();",
                    "});"
                ],
                "name": "closeMeasuresPanel",
                "scope": "this"
            },
            "designerId": "a0663461-a2da-429e-9792-15d9827b54f5"
        },
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onShowMeasuresHeaderUpdate",
                "implHandler": [
                    "var controller = this;",
                    "if (this.getMeasuresPanel() && !this.getMeasuresPanel().isHidden()) {",
                    "    controller.getMainViewport().down(\"#header\").update({",
                    "       info: '',",
                    "       title: ''",
                    "    });",
                    "}"
                ],
                "name": "showMeasuresHeaderUpdate",
                "scope": "this"
            },
            "designerId": "1a33481f-73df-471d-8b43-c4faa7c75f5e"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "callback"
                ],
                "fn": "showCommands",
                "implHandler": [
                    "",
                    "var controller = this;",
                    "",
                    "controller.getRightCommandPanel().items.each(function (item) {",
                    "    item.hide();",
                    "});",
                    "",
                    "this.getRightCommandPanel().add(",
                    "    Ext.create('LanistaTrainer.view.LanistaButton', {",
                    "        text: Ext.ux.LanguageManager.TranslationArray.BUTTON_ADD_EXERCISES,",
                    "        itemId: 'chartTableButton',",
                    "        glyph: '79@Lanista Icons' //O",
                    "    })",
                    ");"
                ]
            },
            "designerId": "048deebf-e2bc-43c1-9fb8-f9b84f4432d8"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #showMeasuresPanelButton",
                "designer|targetType": "LanistaButton",
                "fn": "onShowMeasuresPanelButtonClick",
                "implHandler": [
                    "var controller = this;",
                    "controller.currentPanel = new Ext.util.MixedCollection();",
                    "controller.currentPanel.add('measuresTab','chart');",
                    "controller.currentPanel.add('caliperTab','chart');",
                    "controller.currentPanel.add('circumferencesTab','chart');",
                    "",
                    "LanistaTrainer.app.fireEvent('close' + LanistaTrainer.app.panels[LanistaTrainer.app.panels.length - 1], function() {",
                    "    LanistaTrainer.app.panels[LanistaTrainer.app.panels.length] = 'MeasuresPanel';",
                    "    LanistaTrainer.app.fireEvent('showMeasuresPanel');",
                    "});",
                    "",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "d4819218-9cf1-4011-a1a8-10962ddc0765"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #closeMeasuresPanelButton",
                "designer|targetType": "LanistaButton",
                "fn": "onCloseMeasuresPanelButtonClick",
                "implHandler": [
                    "LanistaTrainer.app.panels.splice(LanistaTrainer.app.panels.length - 1, 1);",
                    "LanistaTrainer.app.fireEvent('closeMeasuresPanel', function() {",
                    "    LanistaTrainer.app.fireEvent('show' + LanistaTrainer.app.panels[LanistaTrainer.app.panels.length - 1]);",
                    "});",
                    "",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "812c3407-3455-4f67-b0b9-5aa87272c3c7"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "loadData",
                "implHandler": [
                    ""
                ]
            },
            "designerId": "ee867c14-dece-4d74-992c-a3e809f540ae"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "autoCreate": true,
                "ref": "measuresPanel",
                "selector": "measuresPanel",
                "xtype": "measuresPanel"
            },
            "designerId": "334937f3-d9c2-40cc-8cb6-84b7a361755f"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "mainStage",
                "selector": "#mainStage"
            },
            "designerId": "b6257adc-f755-4be7-9e89-6c4c136d8863"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "rightCommandPanel",
                "selector": "#rightCommandPanel"
            },
            "designerId": "1abd5f4d-5139-4862-9120-0cdb00e09877"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "mainViewport",
                "selector": "mainViewport"
            },
            "designerId": "b3241564-e142-4299-8836-0a5b6d89873c"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "leftCommandPanel",
                "selector": "#leftCommandPanel"
            },
            "designerId": "aee02bb4-beb6-42a7-b525-d5e044276dc4"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "measuresPanel #measureTabs",
                "designer|targetType": "Ext.tab.Panel",
                "fn": "onTabpanelTabChange",
                "implHandler": [
                    "var controller = this,",
                    "    store = Ext.getStore('MeasuresStore');",
                    "",
                    "if ( newCard.id == 'measuresTab' ) {",
                    "    store.removeFilter('measuresFilter');",
                    "    store.removeFilter('caliperFilter');",
                    "    filterFunction = new Ext.util.Filter({",
                    "        id:'measuresFilter',",
                    "        property: \"user_id\", value: LanistaTrainer.app.currentCustomer.data.id,",
                    "        filterFn: function(item){",
                    "            return (item.data.weight !== 0 || item.data.height !== 0 || item.data.futrex !== 0);",
                    "        }",
                    "    });",
                    "    store.filters.add (filterFunction);",
                    "    store.loadPage(1);",
                    "}else if ( newCard.id == 'caliperTab' ) {",
                    "    store.removeFilter('measuresFilter');",
                    "    store.removeFilter('caliperFilter');",
                    "    filterFunction = new Ext.util.Filter({",
                    "        id:'caliperFilter',",
                    "        property: \"user_id\", value: LanistaTrainer.app.currentCustomer.data.id,",
                    "        filterFn: function(item){",
                    "            return (item.data.trizeps   !== 0 ||",
                    "                    item.data.scapula   !== 0 ||",
                    "                    item.data.auxiliar  !== 0 ||",
                    "                    item.data.chest     !== 0 ||",
                    "                    item.data.sprailium !== 0 ||",
                    "                    item.data.abs       !== 0 ||",
                    "                    item.data.quads     !== 0 );",
                    "        }",
                    "    });",
                    "    store.filters.add (filterFunction);",
                    "    store.loadPage(1);",
                    "}",
                    "",
                    ""
                ],
                "name": "tabchange",
                "scope": "me"
            },
            "designerId": "da3763c6-daba-4c3d-ac62-f7eba20ea367"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport  #chartTableButton",
                "designer|targetType": "LanistaButton",
                "fn": "onchartTableButtonClick",
                "implHandler": [
                    "var controller = this,",
                    "    measuresPanel = controller.getMeasuresPanel(),",
                    "    activeTab;",
                    "",
                    "    activeTab = measuresPanel.down('#measureTabs').getActiveTab();",
                    "",
                    "if (!controller.currentPanel.get(activeTab.id) || controller.currentPanel.get(activeTab.id) === 'table'){   ",
                    "    activeTab.down('#measuresChat').show();",
                    "    activeTab.down('#measuresTable').hide();",
                    "}",
                    "else{",
                    "    activeTab.down('#measuresChat').hide();",
                    "    activeTab.down('#measuresTable').show();",
                    "}",
                    "controller.currentPanel.replace(activeTab.id, (!controller.currentPanel.get(activeTab.id) || controller.currentPanel.get(activeTab.id) === 'table') ? 'chart' : 'table');"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "8361af0c-858c-4ff7-bb42-a43f8410ebfe"
        }
    ]
}