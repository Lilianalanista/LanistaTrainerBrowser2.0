{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userAlias": "templatesController",
        "designer|userClassName": "TemplatesController",
        "id": "templatesController"
    },
    "designerId": "23bd7433-e1b9-436a-94f9-f5c4f49e13cc",
    "cn": [
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "callback"
                ],
                "fn": "onShowTemplatesPanel",
                "implHandler": [
                    "var controller = this,",
                    "    templatesPanel\t= controller.getTemplatesPanel(),",
                    "    mainStage\t= controller.getMainStage(),",
                    "    planStore = Ext.getStore('PlanStore'),",
                    "    userId = localStorage.getItem(\"user_id\"),",
                    "    dateToday = new Date();",
                    "",
                    "planStore.clearGrouping();",
                    "planStore.clearFilter();",
                    "planStore.getProxy().headers = {};",
                    "",
                    "if (!Ext.ux.SessionManager.getIsLoggedIn())",
                    "    planStore.setProxy(new Ext.data.proxy.Ajax({",
                    "        url: Ext.ux.ConfigManager.getRoot() + '/tpmanager/plan/json',",
                    "        model: 'Plan',",
                    "        noCache: false,",
                    "        reader: {",
                    "            type: 'json',",
                    "            root: 'entries'",
                    "        },",
                    "        writer: {",
                    "            type: 'json',",
                    "            root: 'results'",
                    "        }/*,",
                    "        extraParams: {",
                    "            last_update: dateToday.getFullYear() + '-' + (dateToday.getMonth() +1) + '-' + dateToday.getDate()",
                    "        }*/",
                    "    }));",
                    "else{",
                    "    planStore.setProxy(new Ext.data.proxy.Ajax({",
                    "        url: Ext.ux.ConfigManager.getRoot() + '/tpmanager/plan/json',",
                    "        model: 'Plan',",
                    "        noCache: false,",
                    "        reader: {",
                    "            type: 'json',",
                    "            root: 'entries'",
                    "        },",
                    "        writer: {",
                    "            type: 'json',",
                    "            root: 'results'",
                    "        },",
                    "        headers: {",
                    "            user_id: userId",
                    "            }",
                    "    }));",
                    "}",
                    "",
                    "",
                    "//planStore.filter ({property: 'customer_id', value: '75'});",
                    "",
                    "templatesPanel.down('#templatesView').bindStore(planStore);",
                    "planStore.load();",
                    "",
                    "planStore.sort( {",
                    "    direction: 'DESC',",
                    "    property: 'creation_date'",
                    "});",
                    "",
                    "/*planStore.load({",
                    "    callback: function(records, operation, success) {",
                    "        templatesPanel.down('#templatesView').refresh();",
                    "    }",
                    "});*/",
                    "",
                    "//planStore.load();",
                    "mainStage.add( templatesPanel );",
                    "",
                    "templatesPanel.on('hide', function(component) {",
                    "    component.destroy();",
                    "}, controller);",
                    "",
                    "// **** 1 create the commands",
                    "LanistaTrainer.app.setStandardButtons('closeTemplatesPanelButton');",
                    "this.showCommands();",
                    "",
                    "// *** 2 Show the panel",
                    "templatesPanel.show();",
                    "",
                    "LanistaTrainer.app.fireEvent('showTemplatesHeaderUpdate');",
                    "LanistaTrainer.app.fireEvent('showStage');",
                    "",
                    "// *** 4 Callback",
                    "if (callback instanceof Function) callback();",
                    "",
                    "// *** 5 Load data",
                    "controller.loadData();",
                    "",
                    "",
                    "",
                    ""
                ],
                "name": "showTemplatesPanel",
                "scope": "this"
            },
            "designerId": "d015d8bd-2ae9-4d3e-ac98-7743a3486d35"
        },
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "callback"
                ],
                "fn": "onCloseTemplatesPanel",
                "implHandler": [
                    "var controller = this;",
                    "LanistaTrainer.app.fireEvent('hideStage', function () {",
                    "    controller.getRightCommandPanel().items.each(function (item) {",
                    "        item.hide();",
                    "    });",
                    "    controller.getLeftCommandPanel().items.each(function (item) {",
                    "        item.hide();",
                    "    });",
                    "    controller.getTemplatesPanel().hide();",
                    "    if (callback instanceof Function) callback();",
                    "});"
                ],
                "name": "closeTemplatesPanel",
                "scope": "this"
            },
            "designerId": "43a10d19-b274-4888-b6ab-5e179eae762f"
        },
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onShowTemplatesHeaderUpdate",
                "implHandler": [
                    "var controller = this;",
                    "if (this.getTemplatesPanel() && !this.getTemplatesPanel().isHidden()) {",
                    "    controller.getMainViewport().down(\"#header\").update({",
                    "       info: '',",
                    "       title: Ext.ux.LanguageManager.TranslationArray.MENU_TEMPLATES.toUpperCase()",
                    "    });",
                    "}"
                ],
                "name": "showTemplatesHeaderUpdate",
                "scope": "this"
            },
            "designerId": "8ec6ce60-049e-4492-84f9-57f308317479"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "callback"
                ],
                "fn": "showCommands",
                "implHandler": [
                    "",
                    "var controller = this,",
                    "    user;",
                    "",
                    "controller.getRightCommandPanel().items.each(function (item) {",
                    "    item.hide();",
                    "});",
                    "",
                    "if (Ext.ux.SessionManager.getIsLoggedIn()){",
                    "    controller.getRightCommandPanel().add(",
                    "        Ext.create('LanistaTrainer.view.LanistaButton', {",
                    "            text: Ext.ux.LanguageManager.TranslationArray.NEW_TEMPLATE_TITLE,",
                    "            itemId: 'newTemplateButton',",
                    "            glyph: '108@Lanista Icons' //l",
                    "        })",
                    "    );",
                    "",
                    "    controller.getRightCommandPanel().add(",
                    "        Ext.create('LanistaTrainer.view.LanistaButton', {",
                    "            text: Ext.ux.LanguageManager.TranslationArray.MY_TEMPLATES,",
                    "            itemId: 'myTemplatesButton',",
                    "            glyph: '122@Lanista Icons' //z",
                    "        })",
                    "    );",
                    "}",
                    "controller.getRightCommandPanel().add(",
                    "    Ext.create('LanistaTrainer.view.LanistaButton', {",
                    "        text: Ext.ux.LanguageManager.TranslationArray.SEARCH,",
                    "        itemId: 'searchTemplatesButton',",
                    "        glyph: '90@Lanista Icons' //Z",
                    "    })",
                    ");"
                ]
            },
            "designerId": "246ba341-ffe9-4c19-a768-c2a384e2a376"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #showTemplatesPanelButton",
                "designer|targetType": "LanistaButton",
                "fn": "onShowTemplatesPanelButtonClick",
                "implHandler": [
                    "LanistaTrainer.app.fireEvent('close' + LanistaTrainer.app.panels[LanistaTrainer.app.panels.length - 1], function() {",
                    "    LanistaTrainer.app.panels[LanistaTrainer.app.panels.length] = 'TemplatesPanel';",
                    "    LanistaTrainer.app.fireEvent('showTemplatesPanel');",
                    "});",
                    "",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "0746b288-c25f-43b2-8962-b6ddc63df002"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #closeTemplatesPanelButton",
                "designer|targetType": "LanistaButton",
                "fn": "onCloseTemplatesPanelButtonClick",
                "implHandler": [
                    "LanistaTrainer.app.panels.splice(LanistaTrainer.app.panels.length - 1, 1);",
                    "LanistaTrainer.app.fireEvent('closeTemplatesPanel', function() {",
                    "    LanistaTrainer.app.fireEvent('show' + LanistaTrainer.app.panels[LanistaTrainer.app.panels.length - 1]);",
                    "});",
                    "",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "51adcc79-593e-4222-bc01-9044b09ea9d0"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "loadData",
                "implHandler": [
                    ""
                ]
            },
            "designerId": "16959bf4-591e-4a79-9b38-9fb9e6008d69"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "autoCreate": true,
                "ref": "templatesPanel",
                "selector": "templatesPanel",
                "xtype": "templatesPanel"
            },
            "designerId": "8152a411-e066-4aed-a1dd-f4887bd5e54f"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "mainStage",
                "selector": "#mainStage"
            },
            "designerId": "0a07f2ad-9d9b-474c-85ba-9b8a1e4a054f"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "rightCommandPanel",
                "selector": "#rightCommandPanel"
            },
            "designerId": "02151c19-3114-4d2a-9e81-1f4fbbc19233"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "mainViewport",
                "selector": "mainViewport"
            },
            "designerId": "d7ee0cc0-412b-4a54-8dba-296feb6766ad"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "leftCommandPanel",
                "selector": "#leftCommandPanel"
            },
            "designerId": "1da13181-97b7-4a8d-bce3-6665e994badb"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #nextTemplates",
                "designer|targetType": "Ext.panel.Tool",
                "fn": "onNextTemplatesClick",
                "implHandler": [
                    "var store = Ext.getStore(\"TemplatesStore\");",
                    "",
                    "if (store.getTotalCount() >= store.pageSize){",
                    "    store.nextPage();",
                    "    LanistaTrainer.app.fireEvent('showTemplatesHeaderUpdate');",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "eee1c94d-96a9-4694-859e-84c1a7574d64"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #previousTemplates",
                "designer|targetType": "Ext.panel.Tool",
                "fn": "onPreviousTemplatesClick",
                "implHandler": [
                    "if (Ext.getStore(\"TemplatesStore\").currentPage > 1)",
                    "{",
                    "    var store = Ext.getStore(\"TemplatesStore\");",
                    "    store.previousPage();",
                    "    LanistaTrainer.app.fireEvent('showTemplatesHeaderUpdate');",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "eb3fcd84-8267-4b77-a602-d70ed892b6f8"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #newTemplateButton",
                "designer|targetType": "LanistaButton",
                "fn": "onNewTemplateButtonClick",
                "implHandler": [
                    "var controller = this;",
                    "LanistaTrainer.app.fireEvent('closeTemplatesPanel', function() {",
                    "    LanistaTrainer.app.getController('CustomerExercisesController').prompPlanNameRequest ( Ext.ux.LanguageManager.TranslationArray.NEW_TEMPLATE_TITLE, Ext.ux.LanguageManager.TranslationArray.NEW_TEMPLATE_MESSAGE );",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "0aa49870-ef8b-421f-8919-23d26b68c1ac"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #searchTemplatesButton",
                "designer|targetType": "LanistaButton",
                "fn": "onSearchTemplatesButtonClick",
                "implHandler": [
                    "Ext.Msg.alert (",
                    "    '',",
                    "    Ext.ux.LanguageManager.TranslationArray.FUNCTIONALITY_NOT_AVAILABLE,",
                    "    null,",
                    "    null",
                    ");"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "da551d21-d586-4465-a54b-d95fac0c7fc2"
        }
    ]
}