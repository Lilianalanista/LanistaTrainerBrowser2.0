{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userAlias": "customerscontroller",
        "designer|userClassName": "CustomersController",
        "id": "customersController"
    },
    "designerId": "260d0b7c-3d84-46d4-908d-3196335a55ba",
    "cn": [
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "mainStage",
                "selector": "#mainStage"
            },
            "name": "mainStage",
            "designerId": "89eae8ae-890a-4a28-8565-43f06c5c37f0"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "rightCommandPanel",
                "selector": "#rightCommandPanel"
            },
            "name": "rightCommandPanel",
            "designerId": "82a1380c-d440-4306-8bc1-83023c29a372"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "leftCommandPanel",
                "selector": "#leftCommandPanel"
            },
            "name": "leftCommandPanel",
            "designerId": "6cac3958-4c99-4f56-af2c-e1339d3aa235"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "mainViewport",
                "selector": "mainViewport"
            },
            "name": "mainViewport",
            "designerId": "ec9114ec-acd1-432a-b179-ecc9904365d2"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "autoCreate": true,
                "ref": "CustomersPanel",
                "selector": "#customersPanel",
                "xtype": "customersPanel"
            },
            "name": "CustomersPanel",
            "designerId": "939e5abd-5a4c-4f7f-aeda-58c9d25dba2e"
        },
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "callback"
                ],
                "fn": "onShowCustomersPanel",
                "implHandler": [
                    "var controller = this,",
                    "    customerPanel\t= controller.getCustomersPanel(),",
                    "    mainStage\t= controller.getMainStage(),",
                    "    storeCustomers = Ext.getStore('CustomerStore'),",
                    "    viewportXCapacity\t= Math.round(mainStage.getEl().getWidth(true)/207),",
                    "    viewportCapacity\t= Math.floor((mainStage.getEl().getHeight(true)-47)/190) * viewportXCapacity;",
                    "",
                    "",
                    "",
                    "/*",
                    "var userId = localStorage.getItem(\"user_id\");",
                    "Ext.Ajax.request({",
                    "    url: Ext.ux.ConfigManager.getRoot() +'/tpmanager/user/getusers',",
                    "    method: 'get',",
                    "    headers: {",
                    "        user_id: userId",
                    "    },",
                    "    failure : function(result, request){",
                    "        console.log( \"There were problems in looking for user exercises\" );",
                    "    },",
                    "    success: function(response, opts) {",
                    "        var data = Ext.decode(response.responseText);",
                    "",
                    "",
                    "        console.log('CLIENTES......');",
                    "        console.log(data);",
                    "",
                    "",
                    "    }",
                    "});",
                    "*/",
                    "",
                    "",
                    "",
                    "storeCustomers.pageSize = viewportCapacity;",
                    "storeCustomers.clearFilter();",
                    "storeCustomers.loadPage(1, {",
                    "    callback: function(records, operation, success) {",
                    "        mainStage.add( customerPanel );",
                    "",
                    "        customerPanel.on('hide', function(component) {",
                    "            component.destroy();",
                    "        }, controller);",
                    "",
                    "        // **** 1 create the commands",
                    "        LanistaTrainer.app.setStandardButtons('closeCustomersPanelButton');",
                    "        controller.showCommands();",
                    "",
                    "        // *** 2 Show the panel",
                    "        customerPanel.show();",
                    "",
                    "        if (Object.getOwnPropertyNames(storeCustomers.getProxy().extraParams)[0])",
                    "            controller.getRightCommandPanel().down('#recentCustomersButton').addCls('lanista-active');",
                    "",
                    "        LanistaTrainer.app.fireEvent('showCustomersHeaderUpdate');",
                    "        LanistaTrainer.app.fireEvent('showStage');",
                    "",
                    "        // *** 4 Callback",
                    "        if (callback instanceof Function) callback();",
                    "",
                    "        // *** 5 Load data",
                    "        controller.loadData();",
                    "    }",
                    "});",
                    "",
                    ""
                ],
                "name": "showCustomersPanel",
                "scope": "this"
            },
            "name": "onShowCustomersPanel",
            "designerId": "89b316fc-0076-4148-b595-50fa81575e90"
        },
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "callback"
                ],
                "fn": "onCloseCustomersPanel",
                "implHandler": [
                    "var controller = this;",
                    "LanistaTrainer.app.fireEvent('hideStage', function () {",
                    "    controller.getRightCommandPanel().items.each(function (item) {",
                    "        item.hide();",
                    "    });",
                    "    controller.getLeftCommandPanel().items.each(function (item) {",
                    "        item.hide();",
                    "    });",
                    "    controller.getCustomersPanel().hide();",
                    "    if (callback instanceof Function) callback();",
                    "});"
                ],
                "name": "closeCustomersPanel",
                "scope": "this"
            },
            "name": "onCloseCustomersPanel",
            "designerId": "3384dfc6-f806-45fb-a506-ef140a59272a"
        },
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onShowCustomersHeaderUpdate",
                "implHandler": [
                    "var controller = this,",
                    "    info,",
                    "    customersStore,",
                    "    numOfCustomers,",
                    "    page,",
                    "    totalPages;",
                    "",
                    "if (this.getCustomersPanel() && !this.getCustomersPanel().isHidden()) {",
                    "    setTimeout(function()",
                    "    {",
                    "        customersStore= Ext.getStore('CustomerStore');",
                    "        page = customersStore.currentPage;",
                    "        numOfCustomers = customersStore.totalCount;",
                    "        totalPages = Math.ceil(numOfCustomers/customersStore.pageSize);",
                    "",
                    "        info = '<div class=\"customer-header\">' + numOfCustomers + ' ' + Ext.ux.LanguageManager.TranslationArray.CUSTOMER_LIST.toUpperCase() + '<br><span class=\"header-subtitle\">' + Ext.ux.LanguageManager.TranslationArray.PAGE + ' '+ page +' ' + Ext.ux.LanguageManager.TranslationArray.VON + ' '+totalPages+'</span></div>';",
                    "        controller.getMainViewport().down(\"#header\").update({",
                    "           info: info,",
                    "           title: Ext.ux.LanguageManager.TranslationArray.CUSTOMER_LIST.toUpperCase()",
                    "        });",
                    "    }, 200);",
                    "}"
                ],
                "name": "showCustomersHeaderUpdate",
                "scope": "this"
            },
            "name": "onShowCustomersHeaderUpdate",
            "designerId": "37f0a97a-7311-4c44-b31b-a10f82506dfd"
        },
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "title",
                    "message"
                ],
                "fn": "onPromtEmailRequest",
                "implHandler": [
                    "var controller = this;",
                    "Ext.Msg.prompt (title, message, function (response, email) {",
                    "    if ( response == 'ok' ) {",
                    "        var reg = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;",
                    "        if (reg.test(email) === false) {",
                    "            LanistaTrainer.app.fireEvent(\"promtEmailRequest\", Ext.ux.LanguageManager.TranslationArray.MSG_EMAIL_INVALID_1, Ext.ux.LanguageManager.TranslationArray.MSG_EMAIL_INVALID_2 );",
                    "        } else {",
                    "                var userId = localStorage.getItem(\"user_id\"),",
                    "                    customerModel = Ext.create('LanistaTrainer.model.Customer', {",
                    "                        email   : email,",
                    "                        language: 'EN',",
                    "                        birthday: '01/01/1980'",
                    "                    });",
                    "                customerModel.proxy = new Ext.data.proxy.Ajax({",
                    "                    url: Ext.ux.ConfigManager.getRoot() + '/tpmanager/user/json',",
                    "                    noCache: false,",
                    "                    reader: {",
                    "                        type: 'json',",
                    "                        rootProperty: 'entries'",
                    "                    },",
                    "                    writer: {",
                    "                        type: 'json',",
                    "                        rootProperty: 'records',",
                    "                        allowSingle: false",
                    "                    },",
                    "                    headers: {",
                    "                        user_id: userId",
                    "                    }",
                    "                });",
                    "                LanistaTrainer.app.getController('MainController').saveModel(customerModel, {",
                    "                    callback: function(record,event,success) {",
                    "                        if (success)",
                    "                        {",
                    "                            LanistaTrainer.app.currentCustomer = record;",
                    "                            LanistaTrainer.app.panels[LanistaTrainer.app.panels.length] = 'CustomerInfoPanel';",
                    "                            LanistaTrainer.app.fireEvent('showCustomerInfoPanel');",
                    "                        }",
                    "                        else",
                    "                        {",
                    "                            console.log( \"There were problems saving new customer, Err number: \" + event.error.status);",
                    "                            if (event.error.status === 401)",
                    "                                LanistaTrainer.app.fireEvent('reconect');",
                    "                            else{",
                    "                                Ext.Msg.alert(Ext.ux.LanguageManager.TranslationArray.MSG_DATA_NOT_SAVED_1, \"Possible problem:  \" + Ext.ux.LanguageManager.TranslationArray.MSG_CUST_EXISTS_1, function () {",
                    "                                    LanistaTrainer.app.fireEvent('showCustomersPanel');",
                    "                                });",
                    "                            }",
                    "                        }",
                    "                    }",
                    "                });",
                    "        }",
                    "    } else",
                    "        LanistaTrainer.app.fireEvent('showCustomersPanel');",
                    "});",
                    "",
                    ""
                ],
                "name": "promtEmailRequest",
                "scope": "this"
            },
            "name": "onPromtEmailRequest",
            "designerId": "7d7d9690-c073-498d-b35e-763de2142bcc"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "callback"
                ],
                "fn": "showCommands",
                "implHandler": [
                    "",
                    "var controller = this;",
                    "",
                    "controller.tpl = controller.getCustomersPanel().down('#viewCustomers').tpl;",
                    "controller.itemSelector = controller.getCustomersPanel().down('#viewCustomers').itemSelector;",
                    "",
                    "controller.getRightCommandPanel().items.each(function (item) {",
                    "    item.hide();",
                    "});",
                    "",
                    "//Adding bottoms into RightPanel",
                    "this.getRightCommandPanel().add(",
                    "    Ext.create('LanistaTrainer.view.LanistaButton', {",
                    "        text: Ext.ux.LanguageManager.TranslationArray.SEARCH,",
                    "        itemId: 'searchButton',",
                    "        menu: controller.showCustomerSearchMenu(),",
                    "        menuButtonAlign: 'right',",
                    "        glyph: '90@Lanista Icons' //Z",
                    "    })",
                    ");",
                    "",
                    "if ( LanistaTrainer.app.panels[LanistaTrainer.app.panels.length - 2] !== 'FavoritesPanel'){",
                    "    this.getRightCommandPanel().add(",
                    "        Ext.create('LanistaTrainer.view.LanistaButton', {",
                    "            text: Ext.ux.LanguageManager.TranslationArray.NEW,",
                    "            itemId: 'newCustomerButton',",
                    "            userAlias: 'newCustomerButton',",
                    "            glyph: '107@Lanista Icons' //k",
                    "        })",
                    "    );",
                    "",
                    "    this.getRightCommandPanel().add(",
                    "        Ext.create('LanistaTrainer.view.LanistaButton', {",
                    "            text: Ext.ux.LanguageManager.TranslationArray.FOLDER_CREATE,",
                    "            itemId: 'favoritesCustomersButton',",
                    "            userAlias: 'favoritesCustomersButton',",
                    "            menu: LanistaTrainer.app.getController('FavoritesController').showFavorites(1, 'CustomersPanel', 'CustomerStore', 'CustomersController', 'viewCustomers'),",
                    "            menuButtonAlign: 'right',",
                    "            glyph: '122@Lanista Icons' //z",
                    "        })",
                    "    );",
                    "",
                    "    this.getRightCommandPanel().add(",
                    "        Ext.create('LanistaTrainer.view.LanistaButton', {",
                    "            text: Ext.ux.LanguageManager.TranslationArray.BUTTON_RECENTLY,",
                    "            itemId: 'recentCustomersButton',",
                    "            userAlias: 'recentCustomersButton',",
                    "            glyph: '121@Lanista Icons' //y",
                    "        })",
                    "    );",
                    "}",
                    ""
                ]
            },
            "name": "showCommands",
            "designerId": "0dd2bad3-97aa-40cc-85f5-7f500c5cbf72"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #showCustomersPanelButton",
                "designer|targetType": "LanistaButton",
                "fn": "onShowCustomersPanelButtonClick",
                "implHandler": [
                    "LanistaTrainer.app.fireEvent('close' + LanistaTrainer.app.panels[LanistaTrainer.app.panels.length - 1], function() {",
                    "    LanistaTrainer.app.panels[LanistaTrainer.app.panels.length] = 'CustomersPanel';",
                    "    LanistaTrainer.app.fireEvent('showCustomersPanel');",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onShowCustomersPanelButtonClick",
            "designerId": "d61452d4-c844-4761-aaac-ca9cda7682dc"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #closeCustomersPanelButton",
                "designer|targetType": "LanistaButton",
                "fn": "onCloseCustomersPanelButtonClick",
                "implHandler": [
                    "var controller = this,",
                    "    customersStore;",
                    "",
                    "LanistaTrainer.app.panels.splice(LanistaTrainer.app.panels.length - 1, 1);",
                    "LanistaTrainer.app.fireEvent('closeCustomersPanel', function() {",
                    "    if (LanistaTrainer.app.panels[LanistaTrainer.app.panels.length - 1] === 'DashboardPanel')",
                    "        LanistaTrainer.app.fireEvent('show' + LanistaTrainer.app.panels[LanistaTrainer.app.panels.length - 1]);",
                    "    else {",
                    "        if (LanistaTrainer.app.panels[LanistaTrainer.app.panels.length - 1] === 'FavoritesPanel'){",
                    "            LanistaTrainer.app.getController('FavoritesController').saveFavorite(function(){",
                    "                LanistaTrainer.app.fireEvent('showFavoritesPanel', LanistaTrainer.app.getController('FavoritesController').favorites, 'CustomersPanel', 'CustomerStore', 'CustomersController');",
                    "            });",
                    "        }",
                    "        else{",
                    "            LanistaTrainer.app.panels[LanistaTrainer.app.panels.length] = 'PlanPanel';",
                    "            LanistaTrainer.app.fireEvent('showPlanPanel', LanistaTrainer.app.getController('PlanController').planname);",
                    "        }",
                    "    }",
                    "});",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onCloseCustomersPanelButtonClick",
            "designerId": "8db57166-4451-4df8-83e2-a228e469ea48"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "loadData",
                "implHandler": [
                    ""
                ]
            },
            "name": "loadData",
            "designerId": "5dbfa6ec-d069-43b6-9b15-04acc30bd576"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #nextCustomers",
                "designer|targetType": "Ext.panel.Tool",
                "fn": "onNextCustomers",
                "implHandler": [
                    "var store = Ext.getStore(\"CustomerStore\");",
                    "",
                    "if (store.getTotalCount() >= store.pageSize){",
                    "    store.nextPage();",
                    "    LanistaTrainer.app.fireEvent('showCustomersHeaderUpdate');",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onNextCustomers",
            "designerId": "05834b88-df7d-4b4b-97a5-ccba0e0a5a2b"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #previousCustomers",
                "designer|targetType": "Ext.panel.Tool",
                "fn": "onPreviousCustomers",
                "implHandler": [
                    "if (Ext.getStore(\"CustomerStore\").currentPage > 1)",
                    "{",
                    "    var store = Ext.getStore(\"CustomerStore\");",
                    "    store.previousPage();",
                    "    LanistaTrainer.app.fireEvent('showCustomersHeaderUpdate');",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onPreviousCustomers",
            "designerId": "fa8ca7fd-dc26-4c44-9a13-058bc4b9928f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #newCustomerButton",
                "designer|targetType": "LanistaButton",
                "fn": "onNewCustomerButtonClick",
                "implHandler": [
                    "LanistaTrainer.app.fireEvent('close' + LanistaTrainer.app.panels[LanistaTrainer.app.panels.length - 1], function() {",
                    "    LanistaTrainer.app.fireEvent(\"promtEmailRequest\", \"New customer\", \"Enter the email of your new customer\" );",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onNewCustomerButtonClick",
            "designerId": "17e281df-3088-4d00-a334-23dbe579efa1"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "searchRecently",
                "implHandler": [
                    "var controller = this,",
                    "    proxy,",
                    "    customersStore= Ext.getStore('CustomerStore'),",
                    "    mainStage\t= controller.getMainStage(),",
                    "    viewportXCapacity\t= Math.round(mainStage.getEl().getWidth(true)/207),",
                    "    viewportCapacity\t= Math.floor((mainStage.getEl().getHeight(true)-47)/190) * viewportXCapacity;",
                    "",
                    "customersStore.pageSize = viewportCapacity;",
                    "proxy = customersStore.getProxy();",
                    "if (this.getRightCommandPanel().down('#recentCustomersButton').el.dom.classList.contains('lanista-active')){",
                    "    this.getRightCommandPanel().down('#recentCustomersButton').removeCls('lanista-active');",
                    "    proxy.extraParams = {};",
                    "}",
                    "else{",
                    "    this.getRightCommandPanel().down('#recentCustomersButton').addCls('lanista-active');",
                    "    proxy.extraParams = {'recently': 'true'};",
                    "}",
                    "",
                    "customersStore.loadPage(1);",
                    "LanistaTrainer.app.fireEvent('showCustomersHeaderUpdate');",
                    ""
                ]
            },
            "name": "searchRecently",
            "designerId": "7ae9c014-ceb8-4087-8081-bcaf9dede8b6"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #recentCustomersButton",
                "designer|targetType": "LanistaButton",
                "fn": "onRecentCustomersButtonClick",
                "implHandler": [
                    "this.searchRecently();"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onRecentCustomersButtonClick",
            "designerId": "b33fd409-d69a-40a4-a866-36d275cee18d"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "showCustomerSearchMenu",
                "implHandler": [
                    "container = this;",
                    "tools = new Ext.menu.Menu(",
                    "    {",
                    "        Itemid:'exercisesMenu',",
                    "        cls:'lanista-button-menu',",
                    "        defaults: {",
                    "            height: '50px',",
                    "            width: '220px'",
                    "        },",
                    "        items:",
                    "        [",
                    "            {xtype: 'textfield',",
                    "             itemId: 'searchText',",
                    "             hideLabel: true,",
                    "             hideEmptyLabel: false,",
                    "             name: 'searchText',",
                    "             validateOnChange: false,",
                    "             validateOnBlur: false,",
                    "             enableKeyEvents: true,",
                    "             emptyText: Ext.ux.LanguageManager.TranslationArray.TEXT_SEARCH_UC + '...',",
                    "             listeners: {",
                    "                        keydown: {",
                    "                            element: 'el',",
                    "                            fn: function(e, textfield, eOpts){",
                    "                                if (e.keyCode === 27){",
                    "                                    if (Ext.ComponentManager.get('recommendatiosContextMenu')){",
                    "                                        Ext.ComponentManager.get('recommendatiosContextMenu').removeAll();",
                    "                                        Ext.ComponentManager.get('recommendatiosContextMenu').hide();",
                    "                                    }",
                    "                                    textfield.value = '';",
                    "                                    container.getRightCommandPanel().getComponent('searchButton').menu.getComponent('searchText').focus();",
                    "                                    //textfield.hide();",
                    "                                }",
                    "                                if (textfield.value.length > 0)",
                    "                                    container.searchCustomerByText(textfield.value);",
                    "                                else{",
                    "                                        if (Ext.ComponentManager.get('recommendatiosContextMenu')){",
                    "                                            Ext.ComponentManager.get('recommendatiosContextMenu').removeAll();",
                    "                                            Ext.ComponentManager.get('recommendatiosContextMenu').hide();",
                    "                                        }",
                    "                                        container.getRightCommandPanel().getComponent('searchButton').menu.getComponent('searchText').focus();",
                    "                                    }",
                    "                            },",
                    "                            delay:100",
                    "                         },",
                    "                         afterrender: {",
                    "                            element: 'el',",
                    "                            fn: function(textfield, eOpts){",
                    "                                textfield.on('hide', function(component) {",
                    "                                    component.destroy();",
                    "                                }, container);",
                    "                            }",
                    "                         }",
                    "                     }",
                    "            }",
                    "         ]",
                    "    });",
                    "",
                    "tools.on('beforehide', function(component) {",
                    "    return (!Ext.ComponentManager.get('recommendatiosContextMenu'));",
                    "}, container);",
                    "",
                    "tools.on('hide', function(component) {",
                    "    component.getComponent('searchText').setValue('');",
                    "}, container);",
                    "",
                    "return tools;"
                ]
            },
            "name": "showCustomerSearchMenu",
            "designerId": "ecc5bb84-2378-4413-b69a-0ab6207aad78"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value"
                ],
                "fn": "searchCustomerByText",
                "implHandler": [
                    "var controller = this,",
                    "    searchList = [],",
                    "    searchListId = [],",
                    "    infoCustomer = [],",
                    "    textToSearch = value,",
                    "    customersMenu,",
                    "    contextMenu,",
                    "    user;",
                    "",
                    "if (!(textToSearch && textToSearch.length)) return;",
                    "",
                    "user = Ext.ux.SessionManager.getUser();",
                    "Ext.Ajax.request({",
                    "    url: Ext.ux.ConfigManager.getServer() + Ext.ux.ConfigManager.getRoot() + \"/tpmanager/user/getusersbyname\",",
                    "    headers: {user_id: user.id},",
                    "    params: {name: value},",
                    "    method: 'post',",
                    "    failure : function(result, request){",
                    "        console.log( \"There were problems in looking for user information, Err number: \" + result.status);",
                    "        if (result.status === 401)",
                    "            LanistaTrainer.app.fireEvent('reconect');",
                    "        else{",
                    "            console.log( \"Information could not be processed from server\" );",
                    "            LanistaTrainer.app.fireEvent( 'showPlanPanel', plan.data.name );",
                    "        }",
                    "    },",
                    "    success: function(response, opts) {",
                    "        try {",
                    "            var data = Ext.decode(response.responseText),",
                    "                customerRecord = Ext.ModelManager.getModel('LanistaTrainer.model.Customer');",
                    "",
                    "            customerRecord.setProxy(new Ext.data.proxy.Ajax({",
                    "                url: Ext.ux.ConfigManager.getRoot() +'/tpmanager/user/getuser',",
                    "                model: 'Customer',",
                    "                noCache: false,",
                    "                reader: {",
                    "                    type: 'json',",
                    "                    root: 'user'",
                    "                },",
                    "                headers: {",
                    "                    user_id: user.id",
                    "                }",
                    "            }));",
                    "",
                    "            for (var i = 0; i < data.entries.length; i++){",
                    "                searchList.push('<div class=\"menu-customers-search\"><div class=\"menu-customer-first_name\">' +data.entries[i].first_name + '</div>' +",
                    "                                '<div class=\"menu-customer-last_name\">&nbsp;' + data.entries[i].last_name + '</div>' +",
                    "                                '<div class=\"menu-customer-email\">' + data.entries[i].email + '</div></div>');",
                    "                searchList.push('-');",
                    "                searchListId.push(data.entries[i].id);",
                    "                searchListId.push('');",
                    "            }",
                    "            controller.searchList = searchList;",
                    "            controller.searchListId = searchListId;",
                    "            if (searchList.length > 0){",
                    "                customersMenu = controller.getRightCommandPanel().getComponent('searchButton').menu;",
                    "",
                    "                if (!Ext.ComponentManager.get('recommendatiosContextMenu')){",
                    "                    contextMenu = Ext.create('Ext.menu.Menu', {",
                    "                        items: searchList,",
                    "                        shadow: true,",
                    "                        width: 300,",
                    "                        //height: (searchList.length * 20) < 200 ? searchList.length * 20 : 200,",
                    "                        height: 300,",
                    "                        autoscroll: true,",
                    "                        cls: 'menu-lanista-button',",
                    "                        id: 'recommendatiosContextMenu',",
                    "                        tpl: new Ext.Template([",
                    "                            '<tpl for=\".\">',",
                    "                            '<div >{first_name} </div >',",
                    "                            '<div >{last_name} </div >',",
                    "                            '<div >{email} </div >',",
                    "                            '</tpl>'",
                    "                        ])",
                    "                    });",
                    "",
                    "                    contextMenu.on('hide', function(component) {",
                    "                        //controller.getRightCommandPanel().getComponent('searchButton').menu.getComponent('searchText').setValue('');",
                    "                        component.destroy();",
                    "                    }, controller);",
                    "                    contextMenu.on('click', function(menu, item, e, eOpts) {",
                    "                        if (item){",
                    "                            //customerRecord.load(controller.dataCustomers[(controller.searchList.indexOf(item.text)) - 1].id, {",
                    "                            customerRecord.load(controller.searchListId[(controller.searchList.indexOf(item.text))], {",
                    "                                success: function(customer) {",
                    "                                    LanistaTrainer.app.fireEvent('close' + LanistaTrainer.app.panels[LanistaTrainer.app.panels.length - 1], function() {",
                    "                                        LanistaTrainer.app.currentCustomer = customer;",
                    "                                        LanistaTrainer.app.panels[LanistaTrainer.app.panels.length] = 'CustomerExercisesPanel';",
                    "                                        LanistaTrainer.app.fireEvent('showCustomerExercisesPanel');",
                    "                                    });",
                    "                                }",
                    "                            });",
                    "",
                    "                            contextMenu.hide();",
                    "                            }",
                    "                        }, controller);",
                    "                        contextMenu.showAt(customersMenu.getX() - contextMenu.width, customersMenu.getY() - (contextMenu.height / 2));",
                    "                    }",
                    "                    else{",
                    "                        contextMenu = Ext.ComponentManager.get('recommendatiosContextMenu');",
                    "                        contextMenu.removeAll();",
                    "                        contextMenu.add(searchList);",
                    "                    }",
                    "                        controller.getRightCommandPanel().getComponent('searchButton').menu.getComponent('searchText').focus();",
                    "",
                    "                }",
                    "                else{  //searchList.length === 0",
                    "                    if(Ext.ComponentManager.get('recommendatiosContextMenu'))",
                    "                        Ext.ComponentManager.get('recommendatiosContextMenu').hide();",
                    "                    controller.getRightCommandPanel().getComponent('searchButton').menu.getComponent('searchText').focus();",
                    "                }",
                    "        } catch( err ) {",
                    "            Ext.Msg.alert('Problem', 'Information could not be processed', Ext.emptyFn);",
                    "        }",
                    "    }",
                    "});",
                    "",
                    "",
                    "",
                    "",
                    ""
                ]
            },
            "name": "searchCustomerByText",
            "designerId": "bebe78a3-0590-407f-ae1b-d120dc787bb6"
        }
    ]
}