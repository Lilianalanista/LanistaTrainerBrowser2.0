{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userAlias": "planController",
        "designer|userClassName": "PlanController",
        "id": "PlanController"
    },
    "designerId": "3cebb1f9-1e3f-4ce1-a430-d2db18adcf91",
    "cn": [
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "mainStage",
                "selector": "#mainStage"
            },
            "designerId": "8b37e158-2337-4267-b002-8cba77818e63"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "autoCreate": true,
                "ref": "exercisesPanel",
                "selector": "exercisesPanel",
                "xtype": "exercisesPanel"
            },
            "designerId": "b6d28ef6-c59e-46f0-a692-edcf1c4dc27e"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "rightCommandPanel",
                "selector": "#rightCommandPanel"
            },
            "designerId": "a37712e7-d056-4d73-8ec7-2a9fff12675d"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "leftCommandPanel",
                "selector": "#leftCommandPanel"
            },
            "designerId": "2d90f5a6-a52b-448f-9912-37fe80dfbeba"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "mainViewport",
                "selector": "mainViewport"
            },
            "designerId": "0c02d580-9306-41f1-8a3d-385438c461c3"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "autoCreate": true,
                "ref": "planPanel",
                "selector": "#planPanel",
                "xtype": "planPanel"
            },
            "designerId": "083c8fad-bfb1-4f3e-bc8e-673e562572dc"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "autoCreate": true,
                "ref": "planOptionsPanel",
                "selector": "#planOptionsPanel",
                "xtype": "planOptionsPanel"
            },
            "designerId": "eb64cc1c-5404-45b6-ad78-2fff325a352c"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "trainingPlanOptions",
                "selector": "#trainingPlanOptions"
            },
            "designerId": "c83ef194-2bea-44e7-9722-613f6bf3ff19"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "autoCreate": true,
                "ref": "defaultPlanValuesPanel",
                "selector": "#defaultPlanValuesPanel",
                "xtype": "defaultPlanValuesPanel"
            },
            "designerId": "528a27e1-98f8-4b1e-92e0-7c265b7c58e3"
        },
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "callback"
                ],
                "fn": "onClosePlanPanel",
                "implHandler": [
                    "var controller = this;",
                    "",
                    "LanistaTrainer.app.fireEvent('hideStage', function () {",
                    "    controller.getRightCommandPanel().items.each(function (item) {",
                    "        item.hide();",
                    "    });",
                    "    controller.getLeftCommandPanel().items.each(function (item) {",
                    "        item.hide();",
                    "    });",
                    "    controller.getPlanPanel().hide();",
                    "    if (callback instanceof Function) callback();",
                    "});"
                ],
                "name": "closePlanPanel",
                "scope": "this"
            },
            "designerId": "7492bbfd-0def-48f0-a5bd-db7e812eda7c"
        },
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "planname",
                    "callback"
                ],
                "fn": "onShowPlanPanel",
                "implHandler": [
                    "var controller = this,",
                    "    planExercisesStore = controller.plan.planexercises(),",
                    "    exerciseController = LanistaTrainer.app.getController ( 'ExerciseController' );",
                    "",
                    "controller.planname = planname;",
                    "controller.getPlanPanel().down('planExercisesList').store = planExercisesStore;",
                    "planExercisesStore.setProxy(new Ext.data.proxy.Ajax({",
                    "        url: Ext.ux.ConfigManager.getRoot() + '/tpmanager/planexercises/json',",
                    "        model: 'PlanExercise',",
                    "        noCache: false,",
                    "        reader: {",
                    "            type: 'json',",
                    "            root: 'entries'",
                    "        },",
                    "        writer: {",
                    "            type: 'json',",
                    "            root: 'records'",
                    "        },",
                    "        headers: {",
                    "            user_id: localStorage.getItem(\"user_id\")",
                    "        }",
                    "    }));",
                    "",
                    "for (var i = 0; i < planExercisesStore.filters.length; i++)",
                    "{",
                    "    if (planExercisesStore.filters.items[i].property  == 'day')",
                    "        planExercisesStore.filters.removeAt(i);",
                    "}",
                    "",
                    "planExercisesStore.sort({",
                    "                                property : 'position',",
                    "                                direction: 'ASC'",
                    "                       });",
                    "",
                    "planExercisesStore.load(function(records, operation, success) {",
                    "    var planPanel\t= controller.getPlanPanel(),",
                    "        mainStage\t= controller.getMainStage(),",
                    "        recordsArray = [],",
                    "        tabActiveId = controller.currentDay || controller.getPlanPanel ().down ('tabpanel').child('#d1');",
                    "",
                    "    planPanel.controller = controller;",
                    "    controller.createDayPanels ( controller.plan.data.days );",
                    "",
                    "    mainStage.add( planPanel );",
                    "    planPanel.on('hide', function(component) {",
                    "        component.destroy();",
                    "    }, controller",
                    "                );",
                    "    // **** 1 create the commands",
                    "    controller.showCommands();",
                    "    LanistaTrainer.app.setStandardButtons('closePlanPanelButton');",
                    "",
                    "    // *** 2 Show the panel",
                    "    planPanel.show();",
                    "",
                    "    LanistaTrainer.app.fireEvent('showPlanHeaderUpdate');",
                    "    controller.populateTabsExercisesByDay(records);",
                    "    planPanel.down ('tabpanel').setActiveTab(tabActiveId);",
                    "    LanistaTrainer.app.fireEvent('showStage');",
                    "",
                    "    // *** 4 Callback",
                    "    if (callback instanceof Function) callback();",
                    "",
                    " });",
                    ""
                ],
                "name": "showPlanPanel",
                "scope": "this"
            },
            "designerId": "b9fd5ec6-f156-4497-a8e3-81997946d79f"
        },
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onShowPlanHeaderUpdate",
                "implHandler": [
                    "var controller = this,",
                    "    record = LanistaTrainer.app.currentCustomer,",
                    "    divLogo = '',",
                    "    divInfoCustomer = '',",
                    "    planPanel\t= controller.getPlanPanel(),",
                    "    title;",
                    "",
                    "title = \"<div class='lanista-header-plan-name'>\" + controller.planname + ",
                    "        \"</div> <div class='lanista-header-plan-duration'>\"  + Ext.ux.LanguageManager.TranslationArray.FORM_PLAN_TIME  + ': &nbsp;' + ",
                    "                                                               controller.plan.data.duration + ' ' + ",
                    "                                                               Ext.ux.LanguageManager.TranslationArray.WEEKS + \"</div>\";",
                    "",
                    "if (record){",
                    "    divLogo = '<div class=\"lansita-header-customer-image-not-found\"><div class=\"lansita-header-customer-logo\" style=\"background-image: url(' + Ext.ux.ConfigManager.getServer() + Ext.ux.ConfigManager.getRoot() + '/tpmanager/img/p/'+ record.data.id + '_photo.jpg);\"></div></div>';",
                    "    divInfoCustomer = '<div class=\"lansita-header-customer-name\"> <span class=\"last-name\">' + record.data.last_name + '</span><br> <span class=\"first-name\">' + record.data.first_name +'</span></div>';",
                    "}",
                    "",
                    "planPanel.down ('#planHeader').update(controller.plan.data);",
                    "if (!controller.plan.data.description)",
                    "    Ext.get('planHeaderDescription').setHTML('No description available');",
                    "",
                    "controller.getMainViewport().down(\"#header\").update({",
                    "    info: divLogo + divInfoCustomer,",
                    "    title: title",
                    "});"
                ],
                "name": "showPlanHeaderUpdate",
                "scope": "this"
            },
            "designerId": "a4e3ea5e-37d9-455d-a8af-afdd412f7fb0"
        },
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "callback",
                    "userExercises"
                ],
                "fn": "onShowExerciseSelectionView",
                "implHandler": [
                    "var store = Ext.getStore( 'ExerciseStore' ),",
                    "    self = this,",
                    "    mainStage\t\t\t= self.getMainStage(),",
                    "    viewportXCapacity\t= Math.floor(mainStage.getEl().getWidth(true)/187);",
                    "    viewportCapacity\t= Math.floor((mainStage.getEl().getHeight(true)-47)/177) * viewportXCapacity;",
                    "    exercisesPanel\t\t= self.getExercisesPanel();",
                    "",
                    "store.clearFilter();",
                    "if ( userExercises === true )",
                    "{",
                    "    store.filter (new Ext.util.Filter(",
                    "        {",
                    "            property : 'ext_id',",
                    "            value : 'CUST',",
                    "            anyMatch: true",
                    "        }));",
                    "}",
                    "",
                    "store.pageSize = viewportCapacity;",
                    "store.clearFilter(true);",
                    "if ( this.favorite )",
                    "{",
                    "    store.filter( 'ext_id', '\"' + this.favorite.data.objects.replace(/,/g,'\",\"') + '\"' );",
                    "}",
                    "store.sort('name_' + Ext.ux.LanguageManager.lang, 'ASC');",
                    "",
                    "var menuFilters = LanistaTrainer.app.getController('ExercisesController').showExercisesMenu();",
                    "",
                    "this.getRightCommandPanel().add(",
                    "    Ext.create('LanistaTrainer.view.LanistaButton', {",
                    "        text: Ext.ux.LanguageManager.TranslationArray.SEARCH,",
                    "        //itemId: 'showExerciseFilterButton',",
                    "        itemId: 'searchButton',",
                    "        menu: menuFilters,",
                    "        menuButtonAlign: 'right',",
                    "        glyph: '90@Lanista Icons' //Z",
                    "    })",
                    ");",
                    "",
                    "this.getRightCommandPanel().add(",
                    "    Ext.create('LanistaTrainer.view.LanistaButton', {",
                    "        text: Ext.ux.LanguageManager.TranslationArray.BUTTON_OWN_EXERCISES,",
                    "        itemId: 'showSelectionUserExercisesButton',",
                    "        glyph: '97@Lanista Icons' //a",
                    "    })",
                    ");",
                    "this.getRightCommandPanel().add(",
                    "    Ext.create('LanistaTrainer.view.LanistaButton', {",
                    "        text: Ext.ux.LanguageManager.TranslationArray.BUTTON_FAVORITES,",
                    "        itemId: 'showExercisesFavoritesToSelectButton',",
                    "        glyph: '122@Lanista Icons' //z",
                    "    })",
                    ");",
                    "",
                    "exercisesPanel.selection = this.selectionsTab[this.currentDay.id.substring(1)];",
                    "mainStage.add(exercisesPanel);",
                    "LanistaTrainer.app.setStandardButtons('closeExercisesSelectionView');",
                    "exercisesPanel.on('hide', function(component) {",
                    "    component.destroy();",
                    "}, self);",
                    "",
                    "exercisesPanel.headerInfo = '<div class=\"exercises-header\">' + Ext.ux.LanguageManager.TranslationArray.TRAINING_PLAN + ': ' + this.plan.data.name + '</div>';",
                    "exercisesPanel.headerTitle = Ext.ux.LanguageManager.TranslationArray.BUTTON_ADD_EXERCISES;",
                    "exercisesPanel.show();",
                    "",
                    "LanistaTrainer.app.fireEvent('showSearchHeaderUpdate');",
                    "LanistaTrainer.app.fireEvent('showStage');",
                    "",
                    "if ( callback instanceof Function ) callback();"
                ],
                "name": "showExerciseSelectionView",
                "scope": "this"
            },
            "designerId": "6ce49db2-f8bf-4dd3-a81e-28076da631e0"
        },
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "callback"
                ],
                "fn": "onShowPlanOptionsPanel",
                "implHandler": [
                    "var controller = this,",
                    "    mainStage\t\t\t= controller.getMainStage(),",
                    "    planOptionsPanel\t= controller.getPlanOptionsPanel(),",
                    "    plan\t\t\t\t= controller.plan,",
                    "    record\t\t\t\t= LanistaTrainer.app.currentCustomer,",
                    "    fieldset\t\t\t= controller.getTrainingPlanOptions();",
                    "",
                    "mainStage.add(planOptionsPanel);",
                    "LanistaTrainer.app.setStandardButtons('closePlanOptionsPanel');",
                    "planOptionsPanel.on('hide', function(component) {",
                    "    component.destroy();",
                    "}, self);",
                    "",
                    "if (record)",
                    "    planOptionsPanel.headerInfo = '<div class=\"lansita-header-customer-image-not-found\"><div class=\"lansita-header-customer-photo\" id=\"changeCustomerPhoto\" style=\"background-image: url(' + Ext.ux.ConfigManager.getServer() + Ext.ux.ConfigManager.getRoot() + '/tpmanager/img/p/'+ record.data.id + '_photo.jpg);\"></div></div>';",
                    "",
                    "planOptionsPanel.headerTitle = plan.data.name;",
                    "",
                    "fieldset.setTitle (Ext.ux.LanguageManager.TranslationArray.TRAINING_PLAN);",
                    "planOptionsPanel.getForm().setValues(",
                    "    {",
                    "        name:\t\t\t\t\tplan.data.name,",
                    "        duration:\t\t\t\tplan.data.duration,",
                    "        description:\t\t\tplan.data.description",
                    "    }",
                    ");",
                    "",
                    "planOptionsPanel.show();",
                    "",
                    "LanistaTrainer.app.fireEvent('showStage');",
                    "",
                    "if ( callback instanceof Function ) callback();",
                    "",
                    "",
                    "controller.getRightCommandPanel().items.each(function (item) {",
                    "    item.hide();",
                    "});",
                    "planOptionsPanel.getForm().findField('planName').focus();"
                ],
                "name": "showPlanOptionsPanel",
                "scope": "this"
            },
            "designerId": "deea0c7d-9e85-40a2-9ad8-fa1baaa829a9"
        },
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "callback"
                ],
                "fn": "onShowDefaultPlanValuesPanel",
                "implHandler": [
                    "var controller = this,",
                    "    mainStage\t\t\t\t= controller.getMainStage(),",
                    "    defaultPlanValuesPanel\t= controller.getDefaultPlanValuesPanel(),",
                    "    plan\t\t\t\t\t= controller.plan,",
                    "    record,",
                    "    values = [];",
                    "",
                    "mainStage.add(defaultPlanValuesPanel);",
                    "LanistaTrainer.app.setStandardButtons('closeDefaultPlanValuesPanel');",
                    "defaultPlanValuesPanel.on('hide', function(component) {",
                    "    component.destroy();",
                    "}, self);",
                    "",
                    "record = controller.currentDay.data[0];",
                    "if (record)",
                    "    defaultPlanValuesPanel.update(record);",
                    "else{",
                    "    values = [{rounds_min: 3, training_min: 12, training_unit: 0}];",
                    "} ",
                    "",
                    "defaultPlanValuesPanel.show();",
                    "LanistaTrainer.app.fireEvent('showStage');",
                    "if ( callback instanceof Function ) callback();",
                    "",
                    "controller.getRightCommandPanel().items.each(function (item) {",
                    "    item.hide();",
                    "});",
                    ""
                ],
                "name": "showDefaultPlanValuesPanel",
                "scope": "this"
            },
            "designerId": "a64c2aef-6263-4b80-8362-de817b5da02d"
        },
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "planname"
                ],
                "fn": "onCreatePlan",
                "implHandler": [
                    "var userId = localStorage.getItem(\"user_id\"),",
                    "    newPlan = Ext.create('LanistaTrainer.model.Plan', {",
                    "    name : ( planname && planname.length > 1 )? planname : Ext.ux.LanguageManager.TranslationArray.PLAN_NAME_DEFAULT,",
                    "    template: 0,",
                    "    customer_id: LanistaTrainer.app.currentCustomer.data.id,",
                    "    trainer_id: userId",
                    "});",
                    "",
                    "newPlan.setProxy(new Ext.data.proxy.Ajax({",
                    "    url: Ext.ux.ConfigManager.getRoot() + '/tpmanager/plan/json',",
                    "    model: 'Plan',",
                    "    noCache: false,",
                    "    reader: {",
                    "        type: 'json',",
                    "        root: 'entries'",
                    "    },",
                    "    writer: {",
                    "        type: 'json',",
                    "        root: 'records',",
                    "        allowSingle: false",
                    "    },",
                    "    headers: {",
                    "        user_id: userId",
                    "    }",
                    "}));",
                    "",
                    "newPlan.save (",
                    "    {",
                    "        callback: function ( record ){",
                    "            LanistaTrainer.app.getController ( 'PlanController' ).plan = record;",
                    "            LanistaTrainer.app.panels[LanistaTrainer.app.panels.length] = 'PlanPanel';",
                    "            LanistaTrainer.app.fireEvent( 'showPlanPanel', planname);",
                    "        }",
                    "    });"
                ],
                "name": "createPlan",
                "scope": "this"
            },
            "designerId": "469caf1e-1bde-4b35-b062-cddeaa970e4b"
        },
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "callback"
                ],
                "fn": "onCloseExercisesSelectionView",
                "implHandler": [
                    "var controller = this,",
                    "    exercisesPanel = controller.getExercisesPanel();",
                    "",
                    "LanistaTrainer.app.fireEvent('hideStage', function () {",
                    "    controller.getRightCommandPanel().items.each(function (item) {",
                    "        item.hide();",
                    "    });",
                    "    controller.getLeftCommandPanel().items.each(function (item) {",
                    "        item.hide();",
                    "    });",
                    "    exercisesPanel.hide();",
                    "    if (callback instanceof Function) callback();",
                    "});"
                ],
                "name": "closeExercisesSelectionView",
                "scope": "this"
            },
            "designerId": "8e91b87d-c320-44a6-9cda-2d3caa3ee88b"
        },
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "panel",
                    "callback"
                ],
                "fn": "onCloseGenericPanel",
                "implHandler": [
                    "var controller = this;",
                    "",
                    "LanistaTrainer.app.fireEvent('hideStage', function () {",
                    "    controller.getRightCommandPanel().items.each(function (item) {",
                    "        item.hide();",
                    "    });",
                    "    controller.getLeftCommandPanel().items.each(function (item) {",
                    "        item.hide();",
                    "    });",
                    "    panel.hide();",
                    "    if (callback instanceof Function) callback();",
                    "});"
                ],
                "name": "closeGenericPanel",
                "scope": "this"
            },
            "designerId": "e3e5084a-0664-4318-bb53-0c9b1bf798ca"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "callback"
                ],
                "fn": "showCommands",
                "implHandler": [
                    "var controller = this;",
                    "    ",
                    "controller.getRightCommandPanel().items.each(function (item) {",
                    "    item.hide();",
                    "});",
                    "",
                    "this.getRightCommandPanel().add(",
                    "    Ext.create('LanistaTrainer.view.LanistaButton', {",
                    "        text: Ext.ux.LanguageManager.TranslationArray.BUTTON_ADD_EXERCISES,",
                    "        itemId: 'addExerciseButton',",
                    "        glyph: '108@Lanista Icons' //l",
                    "    })",
                    ");",
                    "",
                    "this.getRightCommandPanel().add(",
                    "    Ext.create('LanistaTrainer.view.LanistaButton', {",
                    "        text: Ext.ux.LanguageManager.TranslationArray.BUTTON_DEFAULT_EXER_CONF,",
                    "        itemId: 'defaultValuesButton',",
                    "        glyph: '74@Lanista Icons' //J",
                    "    })",
                    ");",
                    "",
                    "this.getRightCommandPanel().add(",
                    "    Ext.create('LanistaTrainer.view.LanistaButton', {",
                    "        text: Ext.ux.LanguageManager.TranslationArray.SHARE_PLAN,",
                    "        itemId: 'sharePlanButton',",
                    "        menu: controller.setPlanOptions(),",
                    "        menuButtonAlign: 'right',",
                    "        style: 'float: left;',",
                    "        glyph: '67@Lanista Icons' //C",
                    "    })",
                    ");",
                    "",
                    "this.getRightCommandPanel().add(",
                    "    Ext.create('LanistaTrainer.view.LanistaButton', {",
                    "        text: Ext.ux.LanguageManager.TranslationArray.CHANGE_VALUE + ' / ' + Ext.ux.LanguageManager.TranslationArray.DELETE,",
                    "        itemId: 'changeDeleteButton',",
                    "        menu: controller.changeDeletePlan(),",
                    "        menuButtonAlign: 'right',",
                    "        style: 'float: left;',",
                    "        glyph: '73@Lanista Icons' //I",
                    "    })",
                    ");",
                    "",
                    "",
                    ""
                ]
            },
            "designerId": "1d82cff0-19ac-4c98-be3b-f6eaadb80802"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "days"
                ],
                "fn": "createDayPanels",
                "implHandler": [
                    "var tabPanel = this.getPlanPanel ().down ( 'tabpanel' ),",
                    "    controller = this;",
                    "",
                    "var from = 2,",
                    "    to = days,",
                    "    newList = null;",
                    "",
                    "for (from=2; from<=to; from++)",
                    "{",
                    "    if (tabPanel.items.getByKey('d'+from))",
                    "        continue;",
                    "    tabPanel.insert(tabPanel.items.getCount() -1 , {",
                    "                    xtype: 'planExercisesList',",
                    "                    id: 'd'+from,",
                    "                    title: Ext.ux.LanguageManager.TranslationArray.DAY + ' ' + from,",
                    "                    store: controller.plan.planexercises()",
                    "});",
                    "}"
                ]
            },
            "designerId": "f637c063-cfcc-421e-a0fb-8dc8919d8397"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "records",
                    "callback"
                ],
                "fn": "populateTabsExercisesByDay",
                "implHandler": [
                    "var controller = this,",
                    "    tabPanel = controller.getPlanPanel().down('tabpanel'),",
                    "    recordsArray = [],",
                    "    results,",
                    "    tab;",
                    "",
                    "for ( var i = 1; i < tabPanel.items.length; i++ ) {",
                    "    results = Ext.Array.filter(records, function(item) {",
                    "        return item.data.day === i;",
                    "    });",
                    "    tab = tabPanel.child('#d' + i);",
                    "    for ( var j = 0; j < results.length; j++ ) {",
                    "        recordsArray.push(results[j].data);",
                    "    }",
                    "    if (recordsArray) {",
                    "        if (tab){",
                    "            tab.update(recordsArray);",
                    "            tab.recordsArray = recordsArray;",
                    "        }",
                    "    }",
                    "    recordsArray = [];",
                    "}",
                    "",
                    "//This is for plans records that has been charged from a previously plan saved",
                    "if (records.length > 0 && ( (!LanistaTrainer.app.getController ( 'PlanController' ).selectionsTab) || (LanistaTrainer.app.getController ( 'PlanController' ).selectionsTab.length === 0))) {",
                    "    var selectionsTab = [],",
                    "        itemTab = [];",
                    "",
                    "        selectionsTab[0] = [];",
                    "        for ( i = 1; i < tabPanel.items.length; i++ ) {",
                    "            //selectionsTab[i] = [];",
                    "            tab = tabPanel.child('#d' + i);",
                    "            if (tab.recordsArray){",
                    "                selection = [];",
                    "                for ( j = 0; j < tab.recordsArray.length; j++ ) {",
                    "                    itemTab = [];",
                    "                    itemTab[0] = tab.recordsArray[j].exercise_id !== 0 ? tab.recordsArray[j].exercise_id : tab.recordsArray[j].user_exercise_id;",
                    "                    itemTab[1] = tab.recordsArray[j].exercise_ext_id;",
                    "                    itemTab[2] = 1;",
                    "                    selection.push(itemTab);",
                    "                }",
                    "                selectionsTab.push(selection);",
                    "            }",
                    "        }",
                    "    controller.selectionsTab = selectionsTab;",
                    "    controller.currentDay = controller.getPlanPanel ().down ('tabpanel').getActiveTab();",
                    "}",
                    ""
                ]
            },
            "designerId": "ccb9ac2e-7eb8-48c2-b193-e790406c863a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #closePlanPanelButton",
                "designer|targetType": "LanistaButton",
                "fn": "onClosePlanPanelButtonClick",
                "implHandler": [
                    "this.currentDay = null;",
                    "this.currentExercisePosition = 0;",
                    "this.selectionsTab = [];",
                    "this.plan = null;",
                    "this.planname = '';",
                    "",
                    "LanistaTrainer.app.panels.splice(LanistaTrainer.app.panels.length - 1, 1);",
                    "LanistaTrainer.app.fireEvent('closePlanPanel', function() {",
                    "    LanistaTrainer.app.fireEvent('show' + LanistaTrainer.app.panels[LanistaTrainer.app.panels.length - 1]);",
                    "});",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "7c76e167-c921-4951-8404-6c37f3952934"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #addExerciseButton",
                "designer|targetType": "LanistaButton",
                "fn": "onAddExerciseButtonClick",
                "implHandler": [
                    "var planDayPanel = this.getPlanPanel ().down ('tabpanel').getActiveTab();",
                    "",
                    "this.currentDay = planDayPanel;",
                    "this.currentExercisePosition = planDayPanel.getStore ().getCount();",
                    "",
                    "if (!this.selectionsTab){",
                    "    this.selectionsTab = [];",
                    "    this.selectionsTab[1] = [];",
                    "}",
                    "if (!this.selectionsTab[planDayPanel.id.substring(1)])",
                    "    this.selectionsTab[planDayPanel.id.substring(1)] = [];",
                    "",
                    "LanistaTrainer.app.panels.splice(LanistaTrainer.app.panels.length - 1, 1);",
                    "LanistaTrainer.app.fireEvent( 'closePlanPanel', function() {",
                    "    LanistaTrainer.app.panels[LanistaTrainer.app.panels.length] = 'ExerciseSelectionView';",
                    "    LanistaTrainer.app.fireEvent( 'showExerciseSelectionView' );",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "fd00ea2f-ebc6-4c20-9c46-336b8d01efb3"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #closeExercisesSelectionView",
                "designer|targetType": "LanistaButton",
                "fn": "onCloseExercisesSelectionViewButtonClick",
                "implHandler": [
                    "",
                    "var controller = this,",
                    "    userId = localStorage.getItem(\"user_id\"),",
                    "    currentExercisePosition = controller.currentExercisePosition,",
                    "    currentDay = controller.currentDay.id.substring (1),",
                    "    idExercisePlan,",
                    "    planExercisesItems,",
                    "    exercisesPanel = controller.getExercisesPanel(),",
                    "    userId = localStorage.getItem(\"user_id\");",
                    "",
                    "this.selectionsTab[this.currentDay.id.substring(1)] = exercisesPanel.selection;",
                    "var selection = this.selectionsTab[this.currentDay.id.substring(1)],",
                    "    isCustom = false;",
                    "    storeExercises = Ext.getStore('ExerciseStore');",
                    "",
                    "for ( var i = 0; i < selection.length; i++ ) {",
                    "    if (selection[i][2] === 1) //Record has just saved in previous added",
                    "        continue;",
                    "",
                    "    isCustom = isNaN (selection[i][1].substring (0,1));",
                    "    var newPlanExercise = Ext.create('LanistaTrainer.model.PlanExercise', {",
                    "        exercise_id : isCustom ? 0 : selection [i][0],",
                    "        user_exercise_id : isCustom ? selection [i][0] : 0,",
                    "        plan_id: controller.plan.data.id,",
                    "        day: currentDay,",
                    "        position: (currentExercisePosition + i + 1)",
                    "    });",
                    "",
                    "    newPlanExercise.setProxy(new Ext.data.proxy.Ajax({",
                    "        url: Ext.ux.ConfigManager.getRoot() + '/tpmanager/planexercises/json',",
                    "        model: 'PlanExercise',",
                    "        noCache: false,",
                    "        reader: {",
                    "            type: 'json',",
                    "            root: 'entries'",
                    "        },",
                    "        writer: {",
                    "            type: 'json',",
                    "            root: 'records',",
                    "            allowSingle: false",
                    "        },",
                    "        api: {",
                    "            create: undefined,",
                    "            read: undefined,",
                    "            update: undefined,",
                    "            destroy: Ext.ux.ConfigManager.getServer() + Ext.ux.ConfigManager.getRoot() + '/tpmanager/planexercises/deleteexercise'",
                    "        },",
                    "        headers: {",
                    "            user_id: userId",
                    "        }",
                    "    }));",
                    "",
                    "    if (selection[i][3] !== 'd'){ //'d' indicates that the record must be deleted",
                    "        newPlanExercise.save ();",
                    "        selection[i][2] = 1; // To mark record as saved on server",
                    "    }",
                    "}",
                    "",
                    "setTimeout(function() {",
                    "        if ( currentDay > controller.plan.data.days ) {",
                    "            controller.plan.set ( 'days', currentDay );",
                    "",
                    "            controller.plan.setProxy(new Ext.data.proxy.Ajax({",
                    "                url: Ext.ux.ConfigManager.getRoot() + '/tpmanager/plan/json',",
                    "                model: 'Plan',",
                    "                noCache: false,",
                    "                reader: {",
                    "                    type: 'json',",
                    "                    root: 'entries'",
                    "                },",
                    "                writer: {",
                    "                    type: 'json',",
                    "                    root: 'records',",
                    "                    allowSingle: false",
                    "                },",
                    "                headers: {",
                    "                    user_id: userId",
                    "                }",
                    "            }));",
                    "",
                    "",
                    "            controller.plan.save ({",
                    "                callback: function( changedPlan, operation, success ) {",
                    "                    console.log ( changedPlan );",
                    "                    LanistaTrainer.app.panels.splice(LanistaTrainer.app.panels.length - 1, 1);",
                    "                    LanistaTrainer.app.fireEvent( 'closeExercisesSelectionView', function() {",
                    "                        LanistaTrainer.app.panels[LanistaTrainer.app.panels.length] = 'PlanPanel';",
                    "                        LanistaTrainer.app.fireEvent( 'showPlanPanel', controller.planname);",
                    "                    });",
                    "                },",
                    "                scope: this",
                    "            });",
                    "        } else {",
                    "            LanistaTrainer.app.panels.splice(LanistaTrainer.app.panels.length - 1, 1);",
                    "            LanistaTrainer.app.fireEvent( 'closeExercisesSelectionView', function() {",
                    "                LanistaTrainer.app.panels[LanistaTrainer.app.panels.length] = 'PlanPanel';",
                    "                LanistaTrainer.app.fireEvent( 'showPlanPanel', controller.planname);",
                    "            });",
                    "        }",
                    "        controller.favorite = undefined;",
                    "},2500);",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "8df30e8b-e969-46ce-b4c0-8efcbecc07b2"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "setHeader",
                "implHandler": [
                    "LanistaTrainer.app.fireEvent('showPlanHeaderUpdate');"
                ]
            },
            "designerId": "0eabe6d6-cb36-4886-bf2a-290cd77e0000"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "setPlanOptions",
                "implHandler": [
                    "var controller = this;",
                    "",
                    "planOptions = new Ext.menu.Menu(",
                    "    {",
                    "        defaults: {",
                    "            height: '50px',",
                    "            width: '220px'",
                    "        },",
                    "        items:",
                    "        [",
                    "            {text:\tExt.ux.LanguageManager.TranslationArray.BUTTON_ASSIGN_PLAN.toUpperCase(),",
                    "                    handler: function () {",
                    "",
                    "                                LanistaTrainer.app.panels.splice(LanistaTrainer.app.panels.length - 1, 1);",
                    "                                LanistaTrainer.app.fireEvent( 'closePlanPanel', function() {",
                    "                                    LanistaTrainer.app.panels[LanistaTrainer.app.panels.length] = 'CustomersPanel';",
                    "                                    LanistaTrainer.app.fireEvent( 'showCustomersPanel' );",
                    "                                });",
                    "                    }",
                    "            },",
                    "            {text:  Ext.ux.LanguageManager.TranslationArray.SEND_EMAIL.toUpperCase(),",
                    "                    handler: function () {",
                    "",
                    "                                Ext.Ajax.request({",
                    "                                    url: Ext.ux.ConfigManager.getServer() + Ext.ux.ConfigManager.getRoot() + \"/tpmanager/plan/sendmail\",",
                    "                                    method: 'post',",
                    "                                    params: { plan_id: controller.plan.data.id },",
                    "                                    headers: { user_id: localStorage.getItem(\"user_id\") },",
                    "                                    failure : function(response){",
                    "                                        data = Ext.decode(response.responseText);",
                    "                                        console.log ( data );",
                    "                                        Ext.Msg.alert( Ext.ux.LanguageManager.TranslationArray.MSG_EMAIL_PROBLEM, '', Ext.emptyFn );",
                    "                                    },",
                    "                                    success: function(response, opts) {",
                    "                                        data = Ext.decode ( response.responseText);",
                    "                                        if (data.success !== true)",
                    "                                        {",
                    "                                            Ext.Msg.alert( Ext.ux.LanguageManager.TranslationArray.MSG_EMAIL_PROBLEM, data.message, Ext.emptyFn);",
                    "                                        } else {",
                    "                                            Ext.Msg.alert( Ext.ux.LanguageManager.TranslationArray.MSG_EMAIL_PROBLEM, data.message, Ext.emptyFn);",
                    "                                            Ext.Msg.alert( Ext.ux.LanguageManager.TranslationArray.MSG_EMAIL_SENT, '', Ext.emptyFn );",
                    "                                        }",
                    "                                    }",
                    "                                });",
                    "                    }",
                    "            },",
                    "            {text:  Ext.ux.LanguageManager.TranslationArray.GENERATE_PDF.toUpperCase(),",
                    "                    handler: function () {",
                    "                                window.open( Ext.ux.ConfigManager.getServer() + Ext.ux.ConfigManager.getRoot() +\"/tpmanager/plan/getpdf?plan_id=\" + controller.plan.data.id );",
                    "                    }",
                    "            }",
                    "        ]",
                    "    }",
                    ");",
                    "",
                    "",
                    "return planOptions;",
                    "",
                    "",
                    ""
                ]
            },
            "designerId": "a872ee23-5dc8-46ec-9f8f-2e4fbf02d5ef"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #savePlanOptionsButton",
                "designer|targetType": "LanistaButton",
                "fn": "onSavePlanOptionsButtonClick",
                "implHandler": [
                    "var controller = this,",
                    "    planOptionsPanel = controller.getPlanOptionsPanel(),",
                    "    fields = planOptionsPanel.getForm().getFields(),",
                    "    userId = localStorage.getItem(\"user_id\");",
                    "",
                    "controller.plan.set ( 'name', fields.getByKey('planName').getValue() );",
                    "controller.plan.set ( 'duration', fields.getByKey('planDuration').getValue() );",
                    "controller.plan.set ( 'description', fields.getByKey('planDescription').getValue() );",
                    "",
                    "controller.planname = fields.getByKey('planName').getValue();",
                    "",
                    "controller.plan.setProxy(new Ext.data.proxy.Ajax({",
                    "    url: Ext.ux.ConfigManager.getRoot() + '/tpmanager/plan/json',",
                    "    model: 'Plan',",
                    "    noCache: false,",
                    "    reader: {",
                    "        type: 'json',",
                    "        root: 'entries'",
                    "    },",
                    "    writer: {",
                    "        type: 'json',",
                    "        root: 'records',",
                    "        allowSingle: false",
                    "    },",
                    "    headers: {",
                    "        user_id: userId",
                    "    }",
                    "}));",
                    "",
                    "controller.plan.save ({",
                    "    callback: function( changedPlan, operation, success ) {",
                    "        if (success){",
                    "            Ext.Msg.alert(Ext.ux.LanguageManager.TranslationArray.MSG_DATA_SAVE, Ext.ux.LanguageManager.TranslationArray.TRAINING_PLAN + \": \" + changedPlan.data.name, function() {planOptionsPanel.getForm().findField('planName').focus();});",
                    "            controller.getRightCommandPanel().items.each(function (item) {",
                    "                item.hide();",
                    "            });",
                    "",
                    "        }",
                    "        else {",
                    "            Ext.Msg.alert(Ext.ux.LanguageManager.TranslationArray.MSG_DATA_NOT_SAVED_1, Ext.ux.LanguageManager.TranslationArray.MSG_DATA_NOT_SAVED_1, Ext.emptyFn);",
                    "            controller.showCommands();",
                    "        }",
                    "",
                    "    },",
                    "    scope: this",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "76e25979-dd16-4798-9720-7b91e18e1500"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #cancelPlanOptionsButton",
                "designer|targetType": "LanistaButton",
                "fn": "onCancelPlanOptionsButtonClick",
                "implHandler": [
                    "var controller = this;",
                    "",
                    "controller.getRightCommandPanel().items.each(function (item) {",
                    "    item.hide();",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "9b06db18-d196-4888-8fd2-d1b89758ac5a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #closePlanOptionsPanel",
                "designer|targetType": "LanistaButton",
                "fn": "onClosePlanOptionsPanelButton",
                "implHandler": [
                    "var controller = this;",
                    "",
                    "LanistaTrainer.app.panels.splice(LanistaTrainer.app.panels.length - 1, 1);",
                    "LanistaTrainer.app.fireEvent('closeGenericPanel', controller.getPlanOptionsPanel(), function() {",
                    "    LanistaTrainer.app.fireEvent('showPlanPanel', LanistaTrainer.app.getController ( 'PlanController' ).planname);",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "b90bdbd6-0c6c-47d5-8000-20d6f9ec246f"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "changeDeletePlan",
                "implHandler": [
                    "var controller = this;",
                    "",
                    "planOptions = new Ext.menu.Menu(",
                    "    {",
                    "        defaults: {",
                    "            height: '50px',",
                    "            width: '220px'",
                    "        },",
                    "        items:",
                    "        [",
                    "            {text:\tExt.ux.LanguageManager.TranslationArray.CHANGE_PLAN.toUpperCase(),",
                    "                    handler: function () {",
                    "                        LanistaTrainer.app.fireEvent( 'closePlanPanel', function() {",
                    "                            LanistaTrainer.app.panels[LanistaTrainer.app.panels.length] = 'PlanOptionsPanel';",
                    "                            LanistaTrainer.app.fireEvent( 'showPlanOptionsPanel' );",
                    "                        });",
                    "                    }},",
                    "            {text:\tExt.ux.LanguageManager.TranslationArray.DELETE_PLAN.toUpperCase(),",
                    "                    handler: function () {",
                    "                        record = LanistaTrainer.app.getController ( 'PlanController' ).plan;",
                    "                        Ext.Msg.confirm(Ext.ux.LanguageManager.TranslationArray.MSG_DELETE_USER, record.data.name, function(button) {",
                    "                            if (button == 'yes') {",
                    "                                customerExerPanel = LanistaTrainer.app.getController ('CustomerExercisesController').getCustomerExercisesPanel();",
                    "                                customerExerPanel.deletePlan(record.data);",
                    "                                controller.getLeftCommandPanel().down('#closePlanPanelButton').fireEvent('click');",
                    "                            }",
                    "                        });",
                    "                    }",
                    "            }",
                    "        ]",
                    "    }",
                    ");",
                    "",
                    "",
                    "return planOptions;",
                    ""
                ]
            },
            "designerId": "da853362-9ddc-4c71-82fc-adc6b44f2a52"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "loadData",
                "implHandler": [
                    ""
                ]
            },
            "designerId": "b3691cac-ccdb-4fbd-8c98-0fd0fb5bb158"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #defaultValuesButton",
                "designer|targetType": "LanistaButton",
                "fn": "onDefaultValuesButtonClick",
                "implHandler": [
                    "LanistaTrainer.app.fireEvent( 'closePlanPanel', function() {",
                    "    LanistaTrainer.app.panels[LanistaTrainer.app.panels.length] = 'DefaultPlanValuesPanel';",
                    "    LanistaTrainer.app.fireEvent( 'showDefaultPlanValuesPanel' );",
                    "});",
                    "",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "38babf04-e3cf-4102-aa8f-3a59e734b29b"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #closeDefaultPlanValuesPanel",
                "designer|targetType": "LanistaButton",
                "fn": "onCloseDefaultPlanValuesPanelClick",
                "implHandler": [
                    "var controller = this;",
                    "",
                    "LanistaTrainer.app.panels.splice(LanistaTrainer.app.panels.length - 1, 1);",
                    "LanistaTrainer.app.fireEvent('closeGenericPanel', controller.getDefaultPlanValuesPanel(), function() {",
                    "    LanistaTrainer.app.fireEvent('showPlanPanel', LanistaTrainer.app.getController ( 'PlanController' ).planname);",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "3f2a6cc9-849e-453b-b863-e03caaa8a26b"
        }
    ]
}