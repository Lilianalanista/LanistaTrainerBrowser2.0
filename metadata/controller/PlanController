{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userAlias": "planController",
        "designer|userClassName": "PlanController",
        "id": "PlanController"
    },
    "designerId": "3cebb1f9-1e3f-4ce1-a430-d2db18adcf91",
    "cn": [
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "mainStage",
                "selector": "#mainStage"
            },
            "name": "mainStage",
            "designerId": "8b37e158-2337-4267-b002-8cba77818e63"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "autoCreate": true,
                "ref": "exercisesPanel",
                "selector": "exercisesPanel",
                "xtype": "exercisesPanel"
            },
            "name": "exercisesPanel",
            "designerId": "b6d28ef6-c59e-46f0-a692-edcf1c4dc27e"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "rightCommandPanel",
                "selector": "#rightCommandPanel"
            },
            "name": "rightCommandPanel",
            "designerId": "a37712e7-d056-4d73-8ec7-2a9fff12675d"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "leftCommandPanel",
                "selector": "#leftCommandPanel"
            },
            "name": "leftCommandPanel",
            "designerId": "2d90f5a6-a52b-448f-9912-37fe80dfbeba"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "mainViewport",
                "selector": "mainViewport"
            },
            "name": "mainViewport",
            "designerId": "0c02d580-9306-41f1-8a3d-385438c461c3"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "autoCreate": true,
                "ref": "planPanel",
                "selector": "#planPanel",
                "xtype": "planPanel"
            },
            "name": "planPanel",
            "designerId": "083c8fad-bfb1-4f3e-bc8e-673e562572dc"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "autoCreate": true,
                "ref": "planOptionsPanel",
                "selector": "#planOptionsPanel",
                "xtype": "planOptionsPanel"
            },
            "name": "planOptionsPanel",
            "designerId": "eb64cc1c-5404-45b6-ad78-2fff325a352c"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "trainingPlanOptions",
                "selector": "#trainingPlanOptions"
            },
            "name": "trainingPlanOptions",
            "designerId": "c83ef194-2bea-44e7-9722-613f6bf3ff19"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "autoCreate": true,
                "ref": "defaultPlanValuesPanel",
                "selector": "#defaultPlanValuesPanel",
                "xtype": "defaultPlanValuesPanel"
            },
            "name": "defaultPlanValuesPanel",
            "designerId": "528a27e1-98f8-4b1e-92e0-7c265b7c58e3"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "autoCreate": true,
                "ref": "weightsWindow",
                "selector": "#weightsWindow",
                "xtype": "weightsWindow"
            },
            "name": "weightsWindow",
            "designerId": "741b95dc-ed49-46a5-a691-45358cf64eab"
        },
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "callback"
                ],
                "fn": "onClosePlanPanel",
                "implHandler": [
                    "var controller = this;",
                    "",
                    "LanistaTrainer.app.fireEvent('hideStage', function () {",
                    "    controller.getRightCommandPanel().items.each(function (item) {",
                    "        item.hide();",
                    "    });",
                    "    controller.getLeftCommandPanel().items.each(function (item) {",
                    "        item.hide();",
                    "    });",
                    "    controller.getPlanPanel().hide();",
                    "    if (callback instanceof Function) callback();",
                    "});"
                ],
                "name": "closePlanPanel",
                "scope": "this"
            },
            "name": "onClosePlanPanel",
            "designerId": "7492bbfd-0def-48f0-a5bd-db7e812eda7c"
        },
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "planname",
                    "callback"
                ],
                "fn": "onShowPlanPanel",
                "implHandler": [
                    "var controller = this,",
                    "    planExercisesStore = controller.plan.planexercises(),",
                    "    exerciseController = LanistaTrainer.app.getController ( 'ExerciseController' ),",
                    "    values,",
                    "    record,",
                    "    userId = localStorage.getItem(\"user_id\");",
                    "",
                    "controller.planname = planname;",
                    "controller.getPlanPanel().down('planExercisesList').store = planExercisesStore;",
                    "",
                    "if (controller.plan.id)",
                    "    planExercisesStore.filter([{property : 'plan_id',value: controller.plan.id}]);",
                    "",
                    "planExercisesStore.setProxy(new Ext.data.proxy.Ajax({",
                    "        url: Ext.ux.ConfigManager.getRoot() + '/tpmanager/planexercises/json',",
                    "        model: 'LanistaTrainer.model.PlanExercise',",
                    "        noCache: false,",
                    "        reader: {",
                    "            type: 'json',",
                    "            rootProperty: 'entries'",
                    "        },",
                    "        writer: {",
                    "            type: 'json',",
                    "            rootProperty: 'records'",
                    "        },",
                    "        headers: {",
                    "            user_id: userId ? userId : \"\"",
                    "        }",
                    "    }));",
                    "",
                    "planExercisesStore.setRemoteFilter( true );",
                    "for (var i = 0; i < planExercisesStore.filters.length; i++)",
                    "{",
                    "    if (planExercisesStore.filters.items[i].getProperty() === 'day')",
                    "        planExercisesStore.filters.removeAt(i);",
                    "}",
                    "",
                    "planExercisesStore.sort({",
                    "                                property : 'position',",
                    "                                direction: 'ASC'",
                    "                       });",
                    "",
                    "planExercisesStore.load(function(records, operation, success) {",
                    "    var planPanel\t= controller.getPlanPanel(),",
                    "        mainStage\t= controller.getMainStage(),",
                    "        recordsArray = [],",
                    "        tabActiveId = controller.currentDay || controller.getPlanPanel ().down ('tabpanel').child('#d1'),",
                    "        user = Ext.ux.SessionManager.getUser(),",
                    "        storeD1;",
                    "",
                    "    if (!success){",
                    "        console.log( \"There were problems in looking for planExercises, Err number: \" + operation.error.status);",
                    "        if (operation.error.status === 401 || operation.error.status === 403)",
                    "            LanistaTrainer.app.fireEvent('reconect');",
                    "        return;",
                    "    }",
                    "",
                    "    if ( tabActiveId.id === 'd1' ){",
                    "        tabActiveId.store = controller.plan.planexercises();",
                    "        tabActiveId.store.setRemoteFilter( false );",
                    "",
                    "        for (var i = 0; i < tabActiveId.store.filters.length; i++)",
                    "        {",
                    "            if (tabActiveId.store.filters.items[i].getProperty()  === 'day')",
                    "                tabActiveId.store.filters.removeAt(i);",
                    "        }",
                    "        tabActiveId.store.filter([",
                    "            {",
                    "                property : 'day',",
                    "                value    : 1",
                    "            }",
                    "        ]);",
                    "    }",
                    "",
                    "    planPanel.workController = controller.getModuleClassName();",
                    "    controller.createDayPanels ( controller.plan.data.days );",
                    "",
                    "    mainStage.add( planPanel );",
                    "    planPanel.on('hide', function(component) {",
                    "        component.destroy();",
                    "    }, controller",
                    "                );",
                    "    // **** 1 create the commands",
                    "    controller.showCommands();",
                    "    LanistaTrainer.app.setStandardButtons('closePlanPanelButton');",
                    "",
                    "    // *** 2 Show the panel",
                    "    planPanel.show();",
                    "",
                    "    LanistaTrainer.app.fireEvent('showPlanHeaderUpdate');",
                    "    controller.populateTabsExercisesByDay(records);",
                    "",
                    "    if (!controller.rounds_min && !controller.training_min){",
                    "        values = [{rounds_min: 3, training_min: 12, training_unit: 0}];",
                    "        record = tabActiveId.recordsArray && tabActiveId.recordsArray[0] ? tabActiveId.recordsArray[0] : values[0];",
                    "        controller.rounds_min = record.rounds_min;",
                    "        controller.training_min = record.training_min;",
                    "        controller.training_unit = record.training_unit;",
                    "    }",
                    "",
                    "    planPanel.down ('tabbar').items.items[0].setText(Ext.ux.LanguageManager.TranslationArray.DAY + ' 1');",
                    "    planPanel.down ('tabpanel').setActiveTab(tabActiveId);",
                    "    planPanel.down ('tabpanel').getActiveTab().getEl().setHeight(planPanel.down ('tabpanel').getActiveTab().el.dom.clientHeight - 45);",
                    "",
                    "    LanistaTrainer.app.fireEvent('showStage');",
                    "",
                    "    // *** 4 Callback",
                    "    if (callback instanceof Function) callback();",
                    "",
                    "",
                    " });",
                    ""
                ],
                "name": "showPlanPanel",
                "scope": "this"
            },
            "name": "onShowPlanPanel",
            "designerId": "b9fd5ec6-f156-4497-a8e3-81997946d79f"
        },
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onShowPlanHeaderUpdate",
                "implHandler": [
                    "var controller = this,",
                    "    record = LanistaTrainer.app.currentCustomer,",
                    "    divLogo = '',",
                    "    divInfoCustomer = '',",
                    "    planPanel\t= controller.getPlanPanel(),",
                    "    title = '';",
                    "",
                    "if (!record){",
                    "    //title = \"<div class='lanista-header-template-name'>\" + Ext.ux.LanguageManager.TranslationArray.TEMPLATE_NAME + \"</div>\";",
                    "    title = \"\";",
                    "    divLogo = \"<div class='lanista-header-template'><div class='lanista-header-plan-name'>\" + controller.planname +",
                    "        \"</div> <div class='lanista-header-plan-duration'>\"  + Ext.ux.LanguageManager.TranslationArray.FORM_PLAN_TIME  + ': &nbsp;' +",
                    "        controller.plan.data.duration + ' ' +",
                    "        Ext.ux.LanguageManager.TranslationArray.WEEKS + \"</div></div>\";",
                    "}",
                    "else{",
                    "    title = \"<div class='lanista-header-plan-name'>\" + controller.planname +",
                    "        \"</div> <div class='lanista-header-plan-duration'>\"  + Ext.ux.LanguageManager.TranslationArray.FORM_PLAN_TIME  + ': &nbsp;' +",
                    "        controller.plan.data.duration + ' ' +",
                    "        Ext.ux.LanguageManager.TranslationArray.WEEKS + \"</div>\";",
                    "    divLogo = '<div class=\"lansita-header-customer-image-not-found\"><div class=\"lansita-header-customer-logo\" style=\"background-image: url(' + Ext.ux.ConfigManager.getServer() + Ext.ux.ConfigManager.getRoot() + '/tpmanager/img/p/'+ record.data.id + '_photo.jpg);\"></div></div>';",
                    "    divInfoCustomer = '<div class=\"lansita-header-customer-name\"> <span class=\"last-name\">' + record.data.last_name + '</span><br> <span class=\"first-name\">' + record.data.first_name +'</span></div>';",
                    "}",
                    "",
                    "planPanel.down ('#planHeader').update(controller.plan.data);",
                    "if (!controller.plan.data.description)",
                    "    Ext.get('planHeaderDescription').setHtml(Ext.ux.LanguageManager.TranslationArray.NO_DESCRIPTION);",
                    "",
                    "controller.getMainViewport().down(\"#header\").update({",
                    "    info: divLogo + divInfoCustomer,",
                    "    title: title",
                    "});"
                ],
                "name": "showPlanHeaderUpdate",
                "scope": "this"
            },
            "name": "onShowPlanHeaderUpdate",
            "designerId": "a4e3ea5e-37d9-455d-a8af-afdd412f7fb0"
        },
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "callback",
                    "userExercises"
                ],
                "fn": "onShowExerciseSelectionView",
                "implHandler": [
                    "var store = Ext.getStore( 'ExerciseStore' ),",
                    "    self = this,",
                    "    mainStage\t\t\t= self.getMainStage(),",
                    "    viewportXCapacity\t= Math.floor(mainStage.getEl().getWidth(true)/187);",
                    "    viewportCapacity\t= Math.floor((mainStage.getEl().getHeight(true)-47)/177) * viewportXCapacity;",
                    "    exercisesPanel\t\t= self.getExercisesPanel();",
                    "",
                    "store.clearFilter();",
                    "if ( userExercises === true )",
                    "{",
                    "    filterFunction = new Ext.util.Filter({",
                    "        id:'myExercises',",
                    "        filterFn: function(item){",
                    "            value = item.data.ext_id;",
                    "            result = value.match(\"\\\\w*CUST\\\\w*\", \"gi\");",
                    "            return (result && result.length > 0);",
                    "        }",
                    "    });",
                    "    store.filters.add (filterFunction);",
                    "}",
                    "",
                    "store.pageSize = viewportCapacity;",
                    "store.clearFilter(true);",
                    "if ( this.favorite )",
                    "{",
                    "    store.filter( 'ext_id', '\"' + this.favorite.data.objects.replace(/,/g,'\",\"') + '\"' );",
                    "}",
                    "store.sort('name_' + Ext.ux.LanguageManager.lang, 'ASC');",
                    "",
                    "exercisesPanel.down('#viewExercises').bindStore(store);",
                    "store.load(function(records, operation, success) {",
                    "    if (!success){",
                    "        console.log( \"There were problems in showing exerciseSelectionView, Err number: \" + operation.error.status);",
                    "        if (operation.error.status === 401 || operation.error.status === 403)",
                    "            LanistaTrainer.app.fireEvent('reconect');",
                    "        return;",
                    "    }",
                    "    exercisesPanel.selection = self.selectionsTab[self.currentDay.id.substring(1)];",
                    "    mainStage.add(exercisesPanel);",
                    "",
                    "    self.showCommandsExercises();",
                    "    exercisesPanel.on('hide', function(component) {",
                    "        component.destroy();",
                    "    }, self);",
                    "",
                    "    //exercisesPanel.down('#viewExercises').bindStore(store);",
                    "    exercisesPanel.headerInfo = '<div class=\"exercises-header\">' + Ext.ux.LanguageManager.TranslationArray.TRAINING_PLAN + ': ' + self.plan.data.name + '</div>';",
                    "    exercisesPanel.headerTitle = Ext.ux.LanguageManager.TranslationArray.BUTTON_ADD_EXERCISES;",
                    "    exercisesPanel.show();",
                    "",
                    "    LanistaTrainer.app.fireEvent('showSearchHeaderUpdate');",
                    "    LanistaTrainer.app.fireEvent('showStage');",
                    "",
                    "    if ( callback instanceof Function ) callback();",
                    "});",
                    ""
                ],
                "name": "showExerciseSelectionView",
                "scope": "this"
            },
            "name": "onShowExerciseSelectionView",
            "designerId": "6ce49db2-f8bf-4dd3-a81e-28076da631e0"
        },
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "callback"
                ],
                "fn": "onShowPlanOptionsPanel",
                "implHandler": [
                    "var controller = this,",
                    "    mainStage\t\t\t= controller.getMainStage(),",
                    "    planOptionsPanel\t= controller.getPlanOptionsPanel(),",
                    "    plan\t\t\t\t= controller.plan,",
                    "    record\t\t\t\t= LanistaTrainer.app.currentCustomer,",
                    "    fieldset\t\t\t= controller.getTrainingPlanOptions();",
                    "",
                    "mainStage.add(planOptionsPanel);",
                    "",
                    "LanistaTrainer.app.setStandardButtons('closePlanOptionsPanel');",
                    "",
                    "planOptionsPanel.on('hide', function(component) {",
                    "    component.destroy();",
                    "}, self);",
                    "",
                    "if (record)",
                    "    planOptionsPanel.headerInfo = '<div class=\"lansita-header-customer-image-not-found\"><div class=\"lansita-header-customer-photo\" id=\"changeCustomerPhoto\" style=\"background-image: url(' + Ext.ux.ConfigManager.getServer() + Ext.ux.ConfigManager.getRoot() + '/tpmanager/img/p/'+ record.data.id + '_photo.jpg);\"></div></div>';",
                    "",
                    "planOptionsPanel.headerTitle = plan.data.name;",
                    "",
                    "fieldset.setTitle (Ext.ux.LanguageManager.TranslationArray.TRAINING_PLAN);",
                    "planOptionsPanel.getForm().setValues(",
                    "    {",
                    "        name:\t\t\t\t\tplan.data.name,",
                    "        duration:\t\t\t\tplan.data.duration,",
                    "        description:\t\t\tplan.data.description",
                    "    }",
                    ");",
                    "",
                    "planOptionsPanel.show();",
                    "",
                    "LanistaTrainer.app.fireEvent('showStage');",
                    "",
                    "if ( callback instanceof Function ) callback();",
                    "",
                    "controller.getRightCommandPanel().items.each(function (item) {",
                    "    item.hide();",
                    "});",
                    "planOptionsPanel.getForm().findField('planName').focus();"
                ],
                "name": "showPlanOptionsPanel",
                "scope": "this"
            },
            "name": "onShowPlanOptionsPanel",
            "designerId": "deea0c7d-9e85-40a2-9ad8-fa1baaa829a9"
        },
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "callback"
                ],
                "fn": "onShowDefaultPlanValuesPanel",
                "implHandler": [
                    "var controller = this,",
                    "    mainStage\t\t\t\t= controller.getMainStage(),",
                    "    defaultPlanValuesPanel\t= controller.getDefaultPlanValuesPanel(),",
                    "    plan\t\t\t\t\t= controller.getPlanPanel(),",
                    "    record,",
                    "    values = [],",
                    "    trainingPicker = Ext.create('LanistaTrainer.view.TrainingPicker', {}),",
                    "    SetObjectLanista = Ext.create('LanistaTrainer.view.SetObjectLanista', {}),",
                    "    tabActive,",
                    "    LeftPanel = Ext.ComponentQuery.query(\"viewport\")[0].down(\"#leftCommandPanel\");",
                    "",
                    "mainStage.add(defaultPlanValuesPanel);",
                    "",
                    "LeftPanel.items.each(function (item) {",
                    "    item.hide();",
                    "});",
                    "LeftPanel.add(",
                    "    Ext.create('LanistaTrainer.view.LanistaButton', {",
                    "        text: Ext.ux.LanguageManager.TranslationArray.BUTTON_CANCEL,",
                    "        itemId: 'closeDefaultValuesButton',",
                    "        glyph: '117@Lanista Icons', //u",
                    "        cls: [",
                    "            'lanista-command-button',",
                    "            'lanista-command-button-red',",
                    "            'lanista-command-button-cancel-defaultvalues'",
                    "        ]",
                    "    })",
                    ");",
                    "",
                    "defaultPlanValuesPanel.on('hide', function(component) {",
                    "    component.destroy();",
                    "}, self);",
                    "",
                    "record = [{rounds_min: controller.rounds_min, training: controller.training_min, training_unit: controller.training_unit}];",
                    "defaultPlanValuesPanel.update(record[0]);",
                    "",
                    "defaultPlanValuesPanel.show();",
                    "LanistaTrainer.app.fireEvent('showStage');",
                    "",
                    "controller.getMainViewport().down(\"#header\").update({",
                    "    info: '',",
                    "    title: Ext.ux.LanguageManager.TranslationArray.EXERCISE",
                    "});",
                    "",
                    "controller.getMainViewport().add(trainingPicker);",
                    "controller.getMainViewport().add(SetObjectLanista);",
                    "",
                    "trainingPicker.show ();",
                    "",
                    "SetObjectLanista.setValue(record[0].rounds_min);",
                    "trainingPicker.setRecord(record[0]);",
                    "",
                    "if ( callback instanceof Function ) callback();",
                    "",
                    "",
                    "",
                    "",
                    ""
                ],
                "name": "showDefaultPlanValuesPanel",
                "scope": "this"
            },
            "name": "onShowDefaultPlanValuesPanel",
            "designerId": "a64c2aef-6263-4b80-8362-de817b5da02d"
        },
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "planname"
                ],
                "fn": "onCreatePlan",
                "implHandler": [
                    "var userId = localStorage.getItem(\"user_id\"),",
                    "    user = Ext.ux.SessionManager.getUser(),",
                    "    currentClient = LanistaTrainer.app.currentCustomer,",
                    "    newPlan;",
                    "",
                    "newPlan = Ext.create('LanistaTrainer.model.Plan', {",
                    "    name : ( planname && planname.length > 1 ) ? planname : Ext.ux.LanguageManager.TranslationArray.PLAN_NAME_DEFAULT,",
                    "    template: currentClient ? 0 : 1,",
                    "    customer_id: currentClient ? currentClient.data.id : 0,",
                    "    person_id: currentClient ? currentClient.data.id : 0,",
                    "    trainer_id: userId,",
                    "    creator_last_name: user.last_name,",
                    "    creator_first_name: user.first_name,",
                    "    duration: 12,",
                    "    creation_date: Ext.Date.format(new Date(), 'Y-m-d H:i:s').toString(),",
                    "    creator_name: user.first_name + ' ' + user.last_name",
                    "});",
                    "",
                    "newPlan.proxy = new Ext.data.proxy.Ajax({",
                    "    url: Ext.ux.ConfigManager.getRoot() + '/tpmanager/plan/json',",
                    "    model: 'LanistaTrainer.model.Plan',",
                    "    noCache: false,",
                    "    reader: {",
                    "        type: 'json',",
                    "        rootProperty: 'entries'",
                    "    },",
                    "    writer: {",
                    "        type: 'json',",
                    "        rootProperty: 'records',",
                    "        allowSingle: false",
                    "    },",
                    "    headers: {",
                    "        user_id: userId",
                    "    }",
                    "});",
                    "",
                    "LanistaTrainer.app.getController('MainController').saveModel(newPlan,",
                    "            {",
                    "                callback: function ( record, operation, success ){",
                    "                    if (!success){",
                    "                        console.log( \"There were problems in creating plan, Err number: \" + operation.error.status);",
                    "                        if (operation.error.status === 401 || operation.error.status === 403)",
                    "                            LanistaTrainer.app.fireEvent('reconect');",
                    "                        return;",
                    "                    }",
                    "                    LanistaTrainer.app.getController ( 'PlanController' ).plan = record;",
                    "                    LanistaTrainer.app.panels[LanistaTrainer.app.panels.length] = 'PlanPanel';",
                    "                    LanistaTrainer.app.fireEvent( 'showPlanPanel', planname);",
                    "                }",
                    "            });"
                ],
                "name": "createPlan",
                "scope": "this"
            },
            "name": "onCreatePlan",
            "designerId": "469caf1e-1bde-4b35-b062-cddeaa970e4b"
        },
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "callback"
                ],
                "fn": "onCloseExercisesSelectionView",
                "implHandler": [
                    "var controller = this,",
                    "    exercisesPanel = controller.getExercisesPanel();",
                    "",
                    "LanistaTrainer.app.fireEvent('hideStage', function () {",
                    "    controller.getRightCommandPanel().items.each(function (item) {",
                    "        item.hide();",
                    "    });",
                    "    controller.getLeftCommandPanel().items.each(function (item) {",
                    "        item.hide();",
                    "    });",
                    "    exercisesPanel.hide();",
                    "    if (callback instanceof Function) callback();",
                    "});"
                ],
                "name": "closeExercisesSelectionView",
                "scope": "this"
            },
            "name": "onCloseExercisesSelectionView",
            "designerId": "8e91b87d-c320-44a6-9cda-2d3caa3ee88b"
        },
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "panel",
                    "callback"
                ],
                "fn": "onCloseGenericPanel",
                "implHandler": [
                    "var controller = this;",
                    "",
                    "LanistaTrainer.app.fireEvent('hideStage', function () {",
                    "    controller.getRightCommandPanel().items.each(function (item) {",
                    "        item.hide();",
                    "    });",
                    "    controller.getLeftCommandPanel().items.each(function (item) {",
                    "        item.hide();",
                    "    });",
                    "    panel.hide();",
                    "    if (callback instanceof Function) callback();",
                    "});"
                ],
                "name": "closeGenericPanel",
                "scope": "this"
            },
            "name": "onCloseGenericPanel",
            "designerId": "e3e5084a-0664-4318-bb53-0c9b1bf798ca"
        },
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "defaultValues"
                ],
                "fn": "onDefaultValuesChanged",
                "implHandler": [
                    "var controller = this,",
                    "    planPanel = controller.getPlanPanel();",
                    "",
                    "if (defaultValues){",
                    "    controller.rounds_min = defaultValues[0];",
                    "    controller.training_min = defaultValues[1];",
                    "    controller.training_unit = defaultValues[2];",
                    "}",
                    "/*",
                    "LanistaTrainer.app.panels.splice(LanistaTrainer.app.panels.length - 1, 1);",
                    "LanistaTrainer.app.fireEvent('closeGenericPanel', controller.getDefaultPlanValuesPanel(), function() {",
                    "    LanistaTrainer.app.fireEvent('showPlanPanel', LanistaTrainer.app.getController ( 'PlanController' ).planname);",
                    "});",
                    "*/"
                ],
                "name": "defaultValuesChanged",
                "scope": "this"
            },
            "name": "onDefaultValuesChanged",
            "designerId": "27384b00-36d9-4533-af8b-22404478a9fc"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "callback"
                ],
                "fn": "showCommands",
                "implHandler": [
                    "var controller = this;",
                    "",
                    "controller.getRightCommandPanel().items.each(function (item) {",
                    "    item.hide();",
                    "});",
                    "",
                    "if (parseInt(controller.plan.data.creator_id) === controller.plan.data.person_id ||",
                    "    controller.plan.data.trainer_id === controller.plan.data.person_id){",
                    "    if (Ext.ux.SessionManager.getIsLoggedIn()){",
                    "        this.getRightCommandPanel().add(",
                    "            Ext.create('LanistaTrainer.view.LanistaButton', {",
                    "                text: Ext.ux.LanguageManager.TranslationArray.BUTTON_ADD_EXERCISES,",
                    "                itemId: 'addExerciseButton',",
                    "                glyph: '108@Lanista Icons' //l",
                    "            })",
                    "        );",
                    "",
                    "        this.getRightCommandPanel().add(",
                    "            Ext.create('LanistaTrainer.view.LanistaButton', {",
                    "                text: Ext.ux.LanguageManager.TranslationArray.BUTTON_DEFAULT_EXER_CONF,",
                    "                itemId: 'defaultValuesButton',",
                    "                glyph: '74@Lanista Icons' //J",
                    "            })",
                    "        );",
                    "    }",
                    "}",
                    "this.getRightCommandPanel().add(",
                    "    Ext.create('LanistaTrainer.view.LanistaButton', {",
                    "        text: Ext.ux.LanguageManager.TranslationArray.BUTTON_PLAN_OPTIONS,",
                    "        itemId: 'sharePlanButton',",
                    "        menu: controller.setPlanOptions(),",
                    "        menuButtonAlign: 'right',",
                    "        style: 'float: left;',",
                    "        glyph: '67@Lanista Icons' //C",
                    "    })",
                    ");",
                    "",
                    "if (parseInt(controller.plan.data.creator_id) === controller.plan.data.person_id ||",
                    "    controller.plan.data.trainer_id === controller.plan.data.person_id){",
                    "    if (Ext.ux.SessionManager.getIsLoggedIn()){",
                    "        this.getRightCommandPanel().add(",
                    "            Ext.create('LanistaTrainer.view.LanistaButton', {",
                    "                text: Ext.ux.LanguageManager.TranslationArray.CHANGE + ' / ' + Ext.ux.LanguageManager.TranslationArray.DELETE,",
                    "                itemId: 'changeDeleteButton',",
                    "                menu: controller.changeDeletePlan(),",
                    "                menuButtonAlign: 'right',",
                    "                style: 'float: left;',",
                    "                glyph: '73@Lanista Icons' //I",
                    "            })",
                    "        );",
                    "",
                    "        this.getRightCommandPanel().add(",
                    "            Ext.create('LanistaTrainer.view.LanistaButton', {",
                    "                text: Ext.ux.LanguageManager.TranslationArray.DELETE,",
                    "                itemId: 'removePlanExercisesButton',",
                    "                cls: [",
                    "                    'lanista-command-button',",
                    "                    'lanista-command-button-red'",
                    "                ],",
                    "                hidden: true,",
                    "                glyph: '117@Lanista Icons' //u",
                    "            })",
                    "        );",
                    "    }",
                    "}",
                    "",
                    "",
                    "",
                    ""
                ]
            },
            "name": "showCommands",
            "designerId": "1d82cff0-19ac-4c98-be3b-f6eaadb80802"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "days"
                ],
                "fn": "createDayPanels",
                "implHandler": [
                    "var tabPanel = this.getPlanPanel ().down ( 'tabpanel' ),",
                    "    controller = this;",
                    "",
                    "var from = 2,",
                    "    to = days,",
                    "    newList = null;",
                    "",
                    "    controller.plan.planexercises().setRemoteFilter( false );",
                    "",
                    "    for (from=2; from<=to; from++)",
                    "    {",
                    "        if (tabPanel.items.getByKey('d'+from))",
                    "            continue;",
                    "        tabPanel.insert(tabPanel.items.getCount() -1 , {",
                    "                        xtype: 'planExercisesList',",
                    "                        id: 'd'+from,",
                    "                        title: Ext.ux.LanguageManager.TranslationArray.DAY + ' ' + from,",
                    "                        store: controller.plan.planexercises()",
                    "                        });",
                    "    }",
                    ""
                ]
            },
            "name": "createDayPanels",
            "designerId": "f637c063-cfcc-421e-a0fb-8dc8919d8397"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "records",
                    "callback"
                ],
                "fn": "populateTabsExercisesByDay",
                "implHandler": [
                    "var controller = this,",
                    "    tabPanel = controller.getPlanPanel().down('tabpanel'),",
                    "    recordsArray = [],",
                    "    results,",
                    "    tab,",
                    "    ini = 4000;",
                    "",
                    "for ( var i = 1; i < tabPanel.items.length; i++ ) {",
                    "    results = records.filter(function(item) {",
                    "        return item.data.day === i;",
                    "    });",
                    "",
                    "    tab = tabPanel.child('#d' + i);",
                    "    for ( var j = 0; j < results.length; j++ ) {",
                    "        recordsArray.push(results[j].data);",
                    "    }",
                    "    if (recordsArray) {",
                    "        if (tab){",
                    "            if (i === 1) ",
                    "                tab.update(recordsArray);",
                    "            tab.recordsArray = recordsArray;",
                    "        }",
                    "    }",
                    "    recordsArray = [];",
                    "}",
                    "",
                    "//This is for plans records that has been charged from a previously plan saved",
                    "if (records.length > 0 && ( (!LanistaTrainer.app.getController ( 'PlanController' ).selectionsTab) || (LanistaTrainer.app.getController ( 'PlanController' ).selectionsTab.length === 0))) {",
                    "    var selectionsTab = [],",
                    "        itemTab = [];",
                    "",
                    "        selectionsTab[0] = [];",
                    "        for ( i = 1; i < tabPanel.items.length; i++ ) {",
                    "            //selectionsTab[i] = [];",
                    "            tab = tabPanel.child('#d' + i);",
                    "            if (tab.recordsArray){",
                    "                selection = [];",
                    "                for ( j = 0; j < tab.recordsArray.length; j++ ) {",
                    "                    itemTab = [];",
                    "                    itemTab[0] = tab.recordsArray[j].exercise_id !== 0 ? tab.recordsArray[j].exercise_id : (parseInt(tab.recordsArray[j].user_exercise_id) + ini);",
                    "                    itemTab[1] = tab.recordsArray[j].exercise_ext_id;",
                    "                    itemTab[2] = 1;",
                    "                    selection.push(itemTab);",
                    "                }",
                    "                selectionsTab.push(selection);",
                    "            }",
                    "        }",
                    "    controller.selectionsTab = selectionsTab;",
                    "    controller.currentDay = controller.getPlanPanel ().down ('tabpanel').getActiveTab();",
                    "}",
                    ""
                ]
            },
            "name": "populateTabsExercisesByDay",
            "designerId": "ccb9ac2e-7eb8-48c2-b193-e790406c863a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #closePlanPanelButton",
                "designer|targetType": "LanistaButton",
                "fn": "onClosePlanPanelButtonClick",
                "implHandler": [
                    "this.currentDay = null;",
                    "this.currentExercisePosition = 0;",
                    "this.selectionsTab = [];",
                    "this.plan = null;",
                    "this.planname = '';",
                    "this.rounds_min = '';",
                    "this.training_min = '';",
                    "this.training_unit = '';",
                    "",
                    "LanistaTrainer.app.panels.splice(LanistaTrainer.app.panels.length - 1, 1);",
                    "LanistaTrainer.app.fireEvent('closePlanPanel', function() {",
                    "    if (LanistaTrainer.app.panels[LanistaTrainer.app.panels.length - 1] === 'DashboardPanel' ){",
                    "        LanistaTrainer.app.panels[LanistaTrainer.app.panels.length] = 'CustomerExercisesPanel';",
                    "            LanistaTrainer.app.fireEvent('showCustomerExercisesPanel');",
                    "    }",
                    "    else",
                    "        LanistaTrainer.app.fireEvent('show' + LanistaTrainer.app.panels[LanistaTrainer.app.panels.length - 1]);",
                    "});",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onClosePlanPanelButtonClick",
            "designerId": "7c76e167-c921-4951-8404-6c37f3952934"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #addExerciseButton",
                "designer|targetType": "LanistaButton",
                "fn": "onAddExerciseButtonClick",
                "implHandler": [
                    "var planDayPanel = this.getPlanPanel ().down ('tabpanel').getActiveTab();",
                    "",
                    "this.currentDay = planDayPanel;",
                    "this.currentExercisePosition = planDayPanel.getStore ().getCount();",
                    "",
                    "if (!this.selectionsTab){",
                    "    this.selectionsTab = [];",
                    "    this.selectionsTab[1] = [];",
                    "}",
                    "if (!this.selectionsTab[planDayPanel.id.substring(1)])",
                    "    this.selectionsTab[planDayPanel.id.substring(1)] = [];",
                    "",
                    "LanistaTrainer.app.panels.splice(LanistaTrainer.app.panels.length - 1, 1);",
                    "LanistaTrainer.app.fireEvent( 'closePlanPanel', function() {",
                    "    LanistaTrainer.app.panels[LanistaTrainer.app.panels.length] = 'ExercisesSelectionView';",
                    "    LanistaTrainer.app.fireEvent( 'showExerciseSelectionView' );",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onAddExerciseButtonClick",
            "designerId": "fd00ea2f-ebc6-4c20-9c46-336b8d01efb3"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #closeExercisesSelectionView",
                "designer|targetType": "LanistaButton",
                "fn": "onCloseExercisesSelectionViewButtonClick",
                "implHandler": [
                    "",
                    "var controller = this,",
                    "    userId = localStorage.getItem(\"user_id\"),",
                    "    currentExercisePosition = controller.currentExercisePosition,",
                    "    currentDay = controller.currentDay.id.substring (1),",
                    "    idExercisePlan,",
                    "    planExercisesItems,",
                    "    exercisesPanel = controller.getExercisesPanel(),",
                    "    userId = localStorage.getItem(\"user_id\"),",
                    "    ini = 4000;",
                    "",
                    "this.selectionsTab[this.currentDay.id.substring(1)] = exercisesPanel.selection;",
                    "var selection = this.selectionsTab[this.currentDay.id.substring(1)],",
                    "    isCustom = false;",
                    "    storeExercises = Ext.getStore('ExerciseStore');",
                    "",
                    "for ( var i = 0; i < selection.length; i++ ) {",
                    "    if (selection[i][2] === 1) //Record already added in previous saving",
                    "        continue;",
                    "",
                    "    isCustom = isNaN (selection[i][1].substring (0,1));",
                    "    var newPlanExercise = Ext.create('LanistaTrainer.model.PlanExercise', {",
                    "        exercise_id : isCustom ? 0 : selection [i][0],",
                    "        user_exercise_id : isCustom ? parseInt((selection [i][0]) - ini) : 0,",
                    "        plan_id: controller.plan.data.id,",
                    "        day: currentDay,",
                    "        position: (currentExercisePosition + i + 1),",
                    "        rounds_min: controller.rounds_min,",
                    "        training_unit: controller.training_unit,",
                    "        training_min: controller.training_min",
                    "    });",
                    "",
                    "    newPlanExercise.proxy = new Ext.data.proxy.Ajax({",
                    "        url: Ext.ux.ConfigManager.getRoot() + '/tpmanager/planexercises/json',",
                    "        model: 'LanistaTrainer.model.PlanExercise',",
                    "        noCache: false,",
                    "        reader: {",
                    "            type: 'json',",
                    "            rootProperty: 'entries'",
                    "        },",
                    "        writer: {",
                    "            type: 'json',",
                    "            rootProperty: 'records',",
                    "            allowSingle: false",
                    "        },",
                    "        api: {",
                    "            create: undefined,",
                    "            read: undefined,",
                    "            update: undefined,",
                    "            destroy: Ext.ux.ConfigManager.getServer() + Ext.ux.ConfigManager.getRoot() + '/tpmanager/planexercises/deleteexercise'",
                    "        },",
                    "        headers: {",
                    "            user_id: userId",
                    "        }",
                    "    });",
                    "",
                    "    if (selection[i][3] !== 'd'){ //'d' indicates that the record must be deleted",
                    "        LanistaTrainer.app.getController('MainController').saveModel(newPlanExercise, {",
                    "            callback: function(record,event,success) {",
                    "                if (!success)",
                    "                {",
                    "                    console.log( \"There were problems saving PlanExercise, Err number: \" + event.error.status);",
                    "                    if (event.error.status === 401 || event.error.status === 403)",
                    "                        LanistaTrainer.app.fireEvent('reconect');",
                    "                    return;",
                    "                }",
                    "            }",
                    "        });",
                    "        selection[i][2] = 1; // To mark record as saved on server",
                    "    }",
                    "}",
                    "",
                    "setTimeout(function() {",
                    "        if ( currentDay > controller.plan.data.days ) {",
                    "            controller.plan.set ( 'days', currentDay );",
                    "",
                    "            controller.plan.proxy = new Ext.data.proxy.Ajax({",
                    "                url: Ext.ux.ConfigManager.getRoot() + '/tpmanager/plan/json',",
                    "                model: 'LanistaTrainer.model.Plan',",
                    "                noCache: false,",
                    "                reader: {",
                    "                    type: 'json',",
                    "                    rootProperty: 'entries'",
                    "                },",
                    "                writer: {",
                    "                    type: 'json',",
                    "                    rootProperty: 'records',",
                    "                    allowSingle: false",
                    "                },",
                    "                headers: {",
                    "                    user_id: userId",
                    "                }",
                    "            });",
                    "",
                    "            LanistaTrainer.app.getController('MainController').saveModel(controller.plan, {",
                    "                callback: function( changedPlan, operation, success ) {",
                    "                    if (success)",
                    "                    {",
                    "                        console.log ( changedPlan );",
                    "                        LanistaTrainer.app.panels.splice(LanistaTrainer.app.panels.length - 1, 1);",
                    "                        LanistaTrainer.app.fireEvent( 'closeExercisesSelectionView', function() {",
                    "                            LanistaTrainer.app.panels[LanistaTrainer.app.panels.length] = 'PlanPanel';",
                    "                            LanistaTrainer.app.fireEvent( 'showPlanPanel', controller.planname);",
                    "                        });",
                    "                    }",
                    "                    else{",
                    "                        console.log( \"There were problems saving the Plan, Err number: \" + operation.error.status);",
                    "                        if (operation.error.status === 401 || operation.error.status === 403)",
                    "                            LanistaTrainer.app.fireEvent('reconect');",
                    "                        return;",
                    "                    }",
                    "",
                    "",
                    "                },",
                    "                scope: this",
                    "            });",
                    "        } else {",
                    "            LanistaTrainer.app.panels.splice(LanistaTrainer.app.panels.length - 1, 1);",
                    "            LanistaTrainer.app.fireEvent( 'closeExercisesSelectionView', function() {",
                    "                LanistaTrainer.app.panels[LanistaTrainer.app.panels.length] = 'PlanPanel';",
                    "                LanistaTrainer.app.fireEvent( 'showPlanPanel', controller.planname);",
                    "            });",
                    "        }",
                    "        controller.favorite = undefined;",
                    "},2500);",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onCloseExercisesSelectionViewButtonClick",
            "designerId": "8df30e8b-e969-46ce-b4c0-8efcbecc07b2"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "setHeader",
                "implHandler": [
                    "LanistaTrainer.app.fireEvent('showPlanHeaderUpdate');"
                ]
            },
            "name": "setHeader",
            "designerId": "0eabe6d6-cb36-4886-bf2a-290cd77e0000"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "setPlanOptions",
                "implHandler": [
                    "var controller = this,",
                    "    newOption,",
                    "    user = Ext.ux.SessionManager.getUser();",
                    "",
                    "planOptions = new Ext.menu.Menu(",
                    "    {",
                    "        defaults: {",
                    "            height: '50px',",
                    "            width: '220px'",
                    "        }",
                    "    }",
                    ");",
                    "",
                    "if (user && user.role === '2' ){",
                    "    newOption = {text:\tExt.ux.LanguageManager.TranslationArray.BUTTON_ASSIGN_PLAN.toUpperCase(),",
                    "                 handler: function () {",
                    "                     LanistaTrainer.app.panels.splice(LanistaTrainer.app.panels.length - 1, 1);",
                    "                     LanistaTrainer.app.fireEvent( 'closePlanPanel', function() {",
                    "                         LanistaTrainer.app.panels[LanistaTrainer.app.panels.length] = 'CustomersPanel';",
                    "                         LanistaTrainer.app.fireEvent( 'showCustomersPanel' );",
                    "                     });",
                    "                 }",
                    "                };",
                    "    planOptions.add(newOption);",
                    "",
                    "    if (LanistaTrainer.app.panels[LanistaTrainer.app.panels.length - 2] === \"CustomerExercisesPanel\"){",
                    "        newOption = {text:  Ext.ux.LanguageManager.TranslationArray.BUTTON_SAVE.toUpperCase() + ' ' +",
                    "                            Ext.ux.LanguageManager.TranslationArray.SAVE_AS_TEMPLATE.toUpperCase(),",
                    "                            handler: function () {",
                    "                                        LanistaTrainer.app.getController('PlanController').clonePlan('');",
                    "                                    }",
                    "                    };",
                    "    }",
                    "    planOptions.add(newOption);",
                    "",
                    "}",
                    "",
                    "newOption = {text:  Ext.ux.LanguageManager.TranslationArray.SEND_EMAIL.toUpperCase(),",
                    "             handler: function () {",
                    "                 Ext.Ajax.request({",
                    "                     url: Ext.ux.ConfigManager.getServer() + Ext.ux.ConfigManager.getRoot() + \"/tpmanager/plan/sendmail\",",
                    "                     method: 'post',",
                    "                     params: { plan_id: controller.plan.data.id },",
                    "                     headers: { user_id: localStorage.getItem(\"user_id\") },",
                    "                     failure : function(response){",
                    "                         console.log( \"There were problems sending the email, Err number: \" + response.status);",
                    "                         if (response.status === 401 || response.status === 403)",
                    "                             LanistaTrainer.app.fireEvent('reconect');",
                    "                         else{",
                    "                             data = Ext.decode(response.responseText);",
                    "                             console.log ( data );",
                    "                             Ext.Msg.alert( Ext.ux.LanguageManager.TranslationArray.MSG_EMAIL_PROBLEM, '', Ext.emptyFn );",
                    "                         }",
                    "                     },",
                    "                     success: function(response, opts) {",
                    "                         data = Ext.decode ( response.responseText);",
                    "                         if (data.success !== true)",
                    "                         {",
                    "                             Ext.Msg.alert( Ext.ux.LanguageManager.TranslationArray.MSG_EMAIL_PROBLEM, data.message, Ext.emptyFn);",
                    "                         } else {",
                    "                             Ext.Msg.alert( Ext.ux.LanguageManager.TranslationArray.MSG_EMAIL_PROBLEM, data.message, Ext.emptyFn);",
                    "                             Ext.Msg.alert( Ext.ux.LanguageManager.TranslationArray.MSG_EMAIL_SENT, '', Ext.emptyFn );",
                    "                         }",
                    "                     }",
                    "                 });",
                    "             }",
                    "            };",
                    "if (user && user.role === '2' )",
                    "    planOptions.insert(1,newOption);",
                    "else",
                    "    planOptions.add(newOption);",
                    "",
                    "",
                    "newOption = {text:  Ext.ux.LanguageManager.TranslationArray.GENERATE_PDF.toUpperCase(),",
                    "                    handler: function () {",
                    "                                window.open( Ext.ux.ConfigManager.getServer() + Ext.ux.ConfigManager.getRoot() +\"/tpmanager/plan/getpdf?plan_id=\" + controller.plan.data.id );",
                    "                    }",
                    "            };",
                    "if (user && user.role === '2' )",
                    "    planOptions.insert(2,newOption);",
                    "else",
                    "    planOptions.add(newOption);",
                    "",
                    "return planOptions;",
                    "",
                    "",
                    ""
                ]
            },
            "name": "setPlanOptions",
            "designerId": "a872ee23-5dc8-46ec-9f8f-2e4fbf02d5ef"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #savePlanOptionsButton",
                "designer|targetType": "LanistaButton",
                "fn": "onSavePlanOptionsButtonClick",
                "implHandler": [
                    "var controller = this,",
                    "    planOptionsPanel = controller.getPlanOptionsPanel(),",
                    "    fields = planOptionsPanel.getForm().getFields(),",
                    "    userId = localStorage.getItem(\"user_id\");",
                    "",
                    "controller.plan.set ( 'name', fields.getByKey('planName').getValue() );",
                    "controller.plan.set ( 'duration', fields.getByKey('planDuration').getValue() );",
                    "controller.plan.set ( 'description', fields.getByKey('planDescription').getValue() );",
                    "",
                    "controller.planname = fields.getByKey('planName').getValue();",
                    "",
                    "controller.plan.proxy = new Ext.data.proxy.Ajax({",
                    "    url: Ext.ux.ConfigManager.getRoot() + '/tpmanager/plan/json',",
                    "    model: 'LanistaTrainer.model.Plan',",
                    "    noCache: false,",
                    "    reader: {",
                    "        type: 'json',",
                    "        rootProperty: 'entries'",
                    "    },",
                    "    writer: {",
                    "        type: 'json',",
                    "        rootProperty: 'records',",
                    "        allowSingle: false",
                    "    },",
                    "    headers: {",
                    "        user_id: userId",
                    "    }",
                    "});",
                    "",
                    "LanistaTrainer.app.getController('MainController').saveModel(controller.plan, {",
                    "    callback: function( changedPlan, operation, success ) {",
                    "        if (success){",
                    "            Ext.Msg.alert(Ext.ux.LanguageManager.TranslationArray.MSG_DATA_SAVE, Ext.ux.LanguageManager.TranslationArray.TRAINING_PLAN + \": \" + changedPlan.data.name, function() {planOptionsPanel.getForm().findField('planName').focus();});",
                    "            controller.getRightCommandPanel().items.each(function (item) {",
                    "                item.hide();",
                    "            });",
                    "        }",
                    "        else {",
                    "            console.log( \"There were problems saving PlanExercise, Err number: \" + operation.error.status);",
                    "            if (operation.error.status === 401 || operation.error.status === 403){",
                    "                LanistaTrainer.app.fireEvent('reconect');",
                    "                return;",
                    "            }",
                    "            else{",
                    "                Ext.Msg.alert(Ext.ux.LanguageManager.TranslationArray.MSG_DATA_NOT_SAVED_1, Ext.ux.LanguageManager.TranslationArray.MSG_DATA_NOT_SAVED_1, Ext.emptyFn);",
                    "                controller.showCommands();",
                    "            }",
                    "        }",
                    "",
                    "    },",
                    "    scope: this",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onSavePlanOptionsButtonClick",
            "designerId": "76e25979-dd16-4798-9720-7b91e18e1500"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #cancelPlanOptionsButton",
                "designer|targetType": "LanistaButton",
                "fn": "onCancelPlanOptionsButtonClick",
                "implHandler": [
                    "var controller = this;",
                    "",
                    "controller.getRightCommandPanel().items.each(function (item) {",
                    "    item.hide();",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onCancelPlanOptionsButtonClick",
            "designerId": "9b06db18-d196-4888-8fd2-d1b89758ac5a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #closePlanOptionsPanel",
                "designer|targetType": "LanistaButton",
                "fn": "onClosePlanOptionsPanelButton",
                "implHandler": [
                    "var controller = this;",
                    "",
                    "LanistaTrainer.app.panels.splice(LanistaTrainer.app.panels.length - 1, 1);",
                    "LanistaTrainer.app.fireEvent('closeGenericPanel', controller.getPlanOptionsPanel(), function() {",
                    "    LanistaTrainer.app.fireEvent('showPlanPanel', LanistaTrainer.app.getController ( 'PlanController' ).planname);",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onClosePlanOptionsPanelButton",
            "designerId": "b90bdbd6-0c6c-47d5-8000-20d6f9ec246f"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "changeDeletePlan",
                "implHandler": [
                    "var controller = this;",
                    "",
                    "planOptions = new Ext.menu.Menu(",
                    "    {",
                    "        defaults: {",
                    "            height: '50px',",
                    "            width: '220px'",
                    "        },",
                    "        items:",
                    "        [",
                    "            {text:\tExt.ux.LanguageManager.TranslationArray.CHANGE_PLAN.toUpperCase(),",
                    "                    handler: function () {",
                    "                        LanistaTrainer.app.fireEvent( 'closePlanPanel', function() {",
                    "                            LanistaTrainer.app.panels[LanistaTrainer.app.panels.length] = 'PlanOptionsPanel';",
                    "                            LanistaTrainer.app.fireEvent( 'showPlanOptionsPanel' );",
                    "                        });",
                    "                    }},",
                    "            {text:\tExt.ux.LanguageManager.TranslationArray.BUTTON_DELETE_PLAN.toUpperCase(),",
                    "                    handler: function () {",
                    "                        record = LanistaTrainer.app.getController ( 'PlanController' ).plan;",
                    "                        Ext.Msg.confirm(Ext.ux.LanguageManager.TranslationArray.MSG_DELETE_PLAN, record.data.name, function(button) {",
                    "                            if (button == 'yes') {",
                    "                                customerExerPanel = LanistaTrainer.app.getController ('CustomerExercisesController').getCustomerExercisesPanel();",
                    "                                customerExerPanel.deletePlan(record.data);",
                    "                                controller.getLeftCommandPanel().down('#closePlanPanelButton').fireEvent('click');",
                    "                            }",
                    "                        });",
                    "                    }",
                    "            }",
                    "        ]",
                    "    }",
                    ");",
                    "",
                    "",
                    "return planOptions;",
                    ""
                ]
            },
            "name": "changeDeletePlan",
            "designerId": "da853362-9ddc-4c71-82fc-adc6b44f2a52"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "loadData",
                "implHandler": [
                    ""
                ]
            },
            "name": "loadData",
            "designerId": "b3691cac-ccdb-4fbd-8c98-0fd0fb5bb158"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #defaultValuesButton",
                "designer|targetType": "LanistaButton",
                "fn": "onDefaultValuesButtonClick",
                "implHandler": [
                    "var controller = this,",
                    "    record,",
                    "    trainingUnit,",
                    "    radio,",
                    "    windowPanel = controller.getWeightsWindow(),",
                    "    viewPort = LanistaTrainer.app.getController('MainController').getLanistaStage().up('mainViewport');",
                    "",
                    "viewPort.add( windowPanel );",
                    "windowPanel.show ();",
                    "",
                    "record = [{rounds_min: controller.rounds_min,",
                    "           training: controller.training_min,",
                    "           training_unit: controller.training_unit}];",
                    "",
                    "windowPanel.down( \"#protocollTrainingValue\" ).setValue(record[0].training);",
                    "trainingUnit = record[0].training_unit;",
                    "",
                    "switch (trainingUnit)",
                    "{",
                    "    case 0:",
                    "        radio = Ext.getCmp('rb_Rep');",
                    "        radio.setValue(true);",
                    "        break;",
                    "    case 1:",
                    "        radio = Ext.getCmp('rb_Sec');",
                    "        radio.setValue(true);",
                    "        break;",
                    "    case 2:",
                    "        radio = Ext.getCmp('rb_Min');",
                    "        radio.setValue(true);",
                    "        break;",
                    "}",
                    "",
                    "windowPanel.down( \"#protocollKgValue\" ).hide();",
                    "windowPanel.down( \"#weightKilos\" ).hide();",
                    "windowPanel.down( \"#weightSets\" ).show();",
                    "windowPanel.down( \"#exerciseSets\" ).show();",
                    "windowPanel.down( \"#exerciseSets\" ).setValue(record[0].rounds_min);",
                    "windowPanel.down ( '#protocollTrainingValue' ).focus();",
                    "",
                    "windowPanel.on ( 'hide', function ( component ) {",
                    "    component.destroy ();",
                    "});",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onDefaultValuesButtonClick",
            "designerId": "38babf04-e3cf-4102-aa8f-3a59e734b29b"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #closeDefaultPlanValuesPanel",
                "designer|targetType": "LanistaButton",
                "fn": "onCloseDefaultPlanValuesPanelClick",
                "implHandler": [
                    "var controller = this;",
                    "",
                    "LanistaTrainer.app.panels.splice(LanistaTrainer.app.panels.length - 1, 1);",
                    "LanistaTrainer.app.fireEvent('closeGenericPanel', controller.getDefaultPlanValuesPanel(), function() {",
                    "    LanistaTrainer.app.fireEvent('showPlanPanel', LanistaTrainer.app.getController ( 'PlanController' ).planname);",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onCloseDefaultPlanValuesPanelClick",
            "designerId": "3f2a6cc9-849e-453b-b863-e03caaa8a26b"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #closeDefaultValuesButton",
                "designer|targetType": "LanistaButton",
                "fn": "onDefaultValuesClick",
                "implHandler": [
                    "var panelTraining = Ext.ComponentQuery.query(\"viewport\")[0].down(\"#trainingPicker\"),",
                    "    setObjectLanista = Ext.ComponentQuery.query(\"viewport\")[0].down(\"#setObjectLanista\");",
                    "",
                    "setObjectLanista.hide();",
                    "panelTraining.hide();",
                    "LanistaTrainer.app.fireEvent('defaultValuesChanged', '','','');",
                    "",
                    "",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onDefaultValuesClick",
            "designerId": "a45c0b4e-0884-4a97-8215-7cd8d6159930"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "record"
                ],
                "fn": "clonePlan",
                "implHandler": [
                    "Ext.Ajax.request({",
                    "    url: Ext.ux.ConfigManager.getServer() + Ext.ux.ConfigManager.getRoot() + \"/tpmanager/plan/clone\",",
                    "    method: 'post',",
                    "    params: { plan_id: LanistaTrainer.app.getController('PlanController').plan.data.id,",
                    "             user_id: record ? record.data.id : 0},",
                    "    headers: { user_id: localStorage.getItem(\"user_id\") },",
                    "    failure : function(response){",
                    "        console.log( \"There were problems cloning the plan, Err number: \" + response.status);",
                    "        if (response.status === 401 || response.status === 403)",
                    "            LanistaTrainer.app.fireEvent('reconect');",
                    "        else{",
                    "            data = Ext.decode(response.responseText);",
                    "            Ext.Msg.alert( Ext.ux.LanguageManager.TranslationArray.MSG_APPSTORE_ACTIVATION_ERROR_2, '', Ext.emptyFn );",
                    "        }",
                    "    },",
                    "    success: function(response, opts) {",
                    "        data = Ext.decode ( response.responseText);",
                    "        if (data.success === true)",
                    "        {",
                    "            Ext.Msg.alert( Ext.ux.LanguageManager.TranslationArray.MSG_DATA_SAVE, data.message,",
                    "                          function(){",
                    "                              LanistaTrainer.app.currentCustomer = record ? record : '';",
                    "                              if (LanistaTrainer.app.panels[LanistaTrainer.app.panels.length - 1] === 'PlanPanel'){",
                    "                                  LanistaTrainer.app.panels = [];",
                    "                                  LanistaTrainer.app.panels = ['DashboardPanel', 'TemplatesPanel'];",
                    "                                  LanistaTrainer.app.fireEvent(\"closePlanPanel\", function() {",
                    "                                      LanistaTrainer.app.panels[LanistaTrainer.app.panels.length] = 'PlanPanel';",
                    "                                      LanistaTrainer.app.fireEvent('showPlanPanel', LanistaTrainer.app.getController('PlanController').planname);",
                    "                                  });",
                    "                              }",
                    "                              else{",
                    "                                  LanistaTrainer.app.panels = [];",
                    "                                  LanistaTrainer.app.panels = ['DashboardPanel', 'CustomersPanel','CustomerExercisesPanel'];",
                    "                                  LanistaTrainer.app.fireEvent(\"closeCustomersPanel\", function() {",
                    "                                      LanistaTrainer.app.panels[LanistaTrainer.app.panels.length] = 'PlanPanel';",
                    "                                      LanistaTrainer.app.fireEvent('showPlanPanel', LanistaTrainer.app.getController('PlanController').planname);",
                    "                                  });",
                    "                              }",
                    "                          });",
                    "        } else {",
                    "            Ext.Msg.alert( Ext.ux.LanguageManager.TranslationArray.MSG_APPSTORE_ACTIVATION_ERROR_2, data.message, Ext.emptyFn);",
                    "        }",
                    "    }",
                    "});"
                ]
            },
            "name": "clonePlan",
            "designerId": "36495919-acaf-412a-8922-04d10692db5f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #removePlanExercisesButton",
                "designer|targetType": "LanistaButton",
                "fn": "onRemovePlanExercisesButtonClick",
                "implHandler": [
                    "var controller = LanistaTrainer.app.getController ('PlanController'),",
                    "    activeTab = controller.getPlanPanel().down('tabpanel').getActiveTab(),",
                    "    ItemModelData = activeTab.data || activeTab.recordsArray,",
                    "    selectionTab = controller.selectionsTab[activeTab.id.substring(1)],",
                    "    exercisesToDelete = controller.exercisesToDelete,",
                    "    exercisesToDeleteArray = [],",
                    "    internalItemId;",
                    "",
                    "Ext.Msg.confirm(Ext.ux.LanguageManager.TranslationArray.DELETE.toUpperCase(), Ext.ux.LanguageManager.TranslationArray.MSG_DELETE_PLAN_EXERCISE, function(button) {",
                    "    if (button == 'yes') {",
                    "        exercisesToDelete = new String(exercisesToDelete);",
                    "        if (exercisesToDelete.valueOf()){",
                    "            if (exercisesToDelete.indexOf(\",\") > 0)",
                    "                exercisesToDeleteArray = exercisesToDelete.split(\",\");",
                    "            else",
                    "                exercisesToDeleteArray[0] = exercisesToDelete.valueOf();",
                    "        }",
                    "",
                    "        for (var i = 0; i < exercisesToDeleteArray.length; i++){",
                    "            internalItemId = exercisesToDeleteArray[i];",
                    "            ItemModel = ItemModelData[internalItemId];",
                    "",
                    "            controller.deleteItemView(ItemModel);",
                    "            selectionTab.splice(internalItemId,1);",
                    "            //activeTab.recordsArray.splice(internalItemId, 1);",
                    "        }",
                    "",
                    "        activeTab.getStore().setRemoteFilter( true );",
                    "        activeTab.getStore().load(function(records, operation, success) {",
                    "            if (!success){",
                    "                console.log( \"There were problems in deleting planexercises, Err number: \" + operation.error.status);",
                    "                if (operation.error.status === 401 || operation.error.status === 403)",
                    "                    LanistaTrainer.app.fireEvent('reconect');",
                    "                return;",
                    "            }",
                    "",
                    "            controller.populateTabsExercisesByDay(records);",
                    "        });",
                    "",
                    "        activeTab.getStore().setRemoteFilter( false );",
                    "        for (var i = 0; i < store.filters.length; i++)",
                    "        {",
                    "            if (store.filters.items[i].getProperty()  === 'day')",
                    "                store.filters.removeAt(i);",
                    "        }",
                    "",
                    "        store.filter([",
                    "            {",
                    "                property : 'day',",
                    "                value    : parseInt(newCard.id.substr(1))",
                    "            }",
                    "        ]);",
                    "",
                    "        controller.exercisesToDelete = '';",
                    "        controller.getRightCommandPanel().getComponent('removePlanExercisesButton').hide();",
                    "    }",
                    "});",
                    "",
                    "",
                    "",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onRemovePlanExercisesButtonClick",
            "designerId": "4d853a45-af4a-4d4e-95fa-b0ff424270f0"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "data"
                ],
                "fn": "deleteItemView",
                "implHandler": [
                    "var PlanExercise = Ext.create('LanistaTrainer.model.PlanExercise'),",
                    "    userId = localStorage.getItem(\"user_id\");",
                    "",
                    "PlanExercise.data = data;",
                    "PlanExercise.phantom = false;",
                    "PlanExercise.proxy = new Ext.data.proxy.Ajax({",
                    "    url: Ext.ux.ConfigManager.getRoot() + '/tpmanager/planexercises/json',",
                    "    model: 'LanistaTrainer.model.PlanExercise',",
                    "    noCache: false,",
                    "    api: {",
                    "        create: undefined,",
                    "        read: undefined,",
                    "        update: undefined,",
                    "        destroy: Ext.ux.ConfigManager.getServer() + Ext.ux.ConfigManager.getRoot() + '/tpmanager/planexercises/deleteexercise'",
                    "    },",
                    "    extraParams: {",
                    "        exercise_id: PlanExercise.data.id",
                    "    },",
                    "    headers: {",
                    "        user_id: userId",
                    "    }",
                    "});",
                    "",
                    "LanistaTrainer.app.getController('MainController').eraseModel(PlanExercise, {",
                    "    callback: function(record,event,success) {",
                    "        if (!success)",
                    "        {",
                    "            console.log( \"There were problems erasing the planexercise, Err number: \" + event.error.status);",
                    "            if (event.error.status === 401 || event.error.status === 403)",
                    "                LanistaTrainer.app.fireEvent('reconect');",
                    "",
                    "        }",
                    "    }",
                    "});"
                ]
            },
            "name": "deleteItemView",
            "designerId": "ff98c559-74cd-4706-95c9-f366a874c313"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #showSelectionUserExercisesButton",
                "designer|targetType": "LanistaButton",
                "fn": "onShowSelectionUserExercisesButtonClick",
                "implHandler": [
                    "var store = Ext.getStore('ExerciseStore'),",
                    "    filterFunction,",
                    "    value,",
                    "    result = [];",
                    "",
                    "if (button.el.dom.classList.contains('lanista-active')){",
                    "    button.removeCls('lanista-active');",
                    "    store.removeFilter('myExercises');",
                    "}",
                    "else{",
                    "    button.addCls('lanista-active');",
                    "",
                    "    filterFunction = new Ext.util.Filter({",
                    "        id:'myExercises',",
                    "        filterFn: function(item){",
                    "            value = item.data.ext_id;",
                    "            result = value.match(\"\\\\w*CUST\\\\w*\", \"gi\");",
                    "            return (result && result.length > 0);",
                    "        }",
                    "    });",
                    "    store.filters.add (filterFunction);",
                    "}",
                    "store.loadPage(1);",
                    "records = store.data.items;",
                    "if ((LanistaTrainer.app.panels[LanistaTrainer.app.panels.length - 2] !== 'DashboardPanel') && (LanistaTrainer.app.panels[LanistaTrainer.app.panels.length - 2] !== 'LoginPanel')) {",
                    "    if ( (LanistaTrainer.app.panels[LanistaTrainer.app.panels.length - 2] === 'FavoritesPanel')) {",
                    "        favorites = LanistaTrainer.app.getController ('FavoritesController').favorites.data.objects;",
                    "        favoritesArray = favorites !== \"\" ? favorites.split(',') : [];",
                    "",
                    "        if (favoritesArray.length > 0 ){",
                    "            for (i = 0; i < records.length ; i++) {",
                    "                for ( j = 0; j < favoritesArray.length; j++) {",
                    "                    if (Number(favoritesArray[j]) === Number(records[i].data.id)) {",
                    "                        break;",
                    "                    }",
                    "                }",
                    "",
                    "                if (j !== favoritesArray.length){",
                    "                    itemNode = this.getExercisesPanel().down('#viewExercises').getNode(records[i]);",
                    "                    Ext.get(itemNode).addCls ( 'lanista-list-item-selected' );",
                    "                }",
                    "            }",
                    "        }",
                    "    }",
                    "    else{",
                    "        for (var i = 0; i < records.length ; i++) {",
                    "            for(var j = 0; j < this.getExercisesPanel().selection.length; j++) {",
                    "                if(this.getExercisesPanel().selection[j][0] === records[i].data.id) {",
                    "                    break;",
                    "                }",
                    "            }",
                    "            if (j !== this.getExercisesPanel().selection.length){",
                    "                itemNode = this.getExercisesPanel().down('#viewExercises').getNode(records[i]);",
                    "                Ext.get(itemNode).addCls ( 'lanista-list-item-selected' );",
                    "            }",
                    "        }",
                    "    }",
                    "}",
                    "",
                    "LanistaTrainer.app.fireEvent('showSearchHeaderUpdate');",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onShowSelectionUserExercisesButtonClick",
            "designerId": "cb831011-2dab-495c-9f94-600aea54c496"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "showCommandsExercises",
                "implHandler": [
                    "var controller = this,",
                    "    menuFilters = LanistaTrainer.app.getController('ExercisesController').showExercisesMenu(),",
                    "    myExercies = false,",
                    "    store = Ext.getStore( 'ExerciseStore' ),",
                    "    user = Ext.ux.SessionManager.getUser(),",
                    "    tools;",
                    "",
                    "controller.getRightCommandPanel().items.each(function (item) {",
                    "    item.hide();",
                    "});",
                    "",
                    "controller.getLeftCommandPanel().items.each(function (item) {",
                    "    item.hide();",
                    "});",
                    "",
                    "for (var i = 0; i < store.filters.length; i++)",
                    "{",
                    "    if (store.filters.items[i].id  == 'myExercises'){",
                    "        myExercies = true;",
                    "        break;",
                    "    }",
                    "",
                    "}",
                    "",
                    "this.getRightCommandPanel().add(",
                    "    Ext.create('LanistaTrainer.view.LanistaButton', {",
                    "        text: Ext.ux.LanguageManager.TranslationArray.SEARCH,",
                    "        //itemId: 'showExerciseFilterButton',",
                    "        itemId: 'searchButton',",
                    "        menu: menuFilters,",
                    "        menuButtonAlign: 'right',",
                    "        glyph: '90@Lanista Icons' //Z",
                    "    })",
                    ");",
                    "",
                    "if (user.role === '2' ){",
                    "    this.getRightCommandPanel().add(",
                    "        Ext.create('LanistaTrainer.view.LanistaButton', {",
                    "            text: Ext.ux.LanguageManager.TranslationArray.BUTTON_OWN_EXERCISES,",
                    "            itemId: 'showSelectionUserExercisesButton',",
                    "            glyph: '97@Lanista Icons' //a",
                    "        })",
                    "    );",
                    "    this.getRightCommandPanel().add(",
                    "        Ext.create('LanistaTrainer.view.LanistaButton', {",
                    "            text: Ext.ux.LanguageManager.TranslationArray.BUTTON_FAVORITES,",
                    "            itemId: 'favoritesCustomersButton',",
                    "            menu: LanistaTrainer.app.getController('ExercisesController').findFavoritesExercises(),",
                    "            menuButtonAlign: 'right',",
                    "            glyph: '122@Lanista Icons' //z",
                    "        })",
                    "    );",
                    "}",
                    "",
                    "this.getRightCommandPanel().add(",
                    "    Ext.create('LanistaTrainer.view.LanistaButton', {",
                    "        text: Ext.ux.LanguageManager.TranslationArray.BUTTON_ADD_EXERCISES,",
                    "        itemId: 'addPlanExercisesButton',",
                    "        hidden: true,",
                    "        glyph: '108@Lanista Icons' //l",
                    "    })",
                    ");",
                    "",
                    "",
                    "this.getLeftCommandPanel().add(",
                    "    Ext.create('LanistaTrainer.view.LanistaButton', {",
                    "        text: Ext.ux.LanguageManager.TranslationArray.BUTTON_ADD_EXERCISES,",
                    "        itemId: 'closeExercisesSelectionView',",
                    "        glyph: '98@Lanista Icons', //b",
                    "        cls: [",
                    "            'lanista-command-button',",
                    "            'lanista-command-button-green'",
                    "        ]",
                    "    })",
                    ");",
                    "",
                    "tools = new Ext.menu.Menu(",
                    "    {",
                    "        defaults: {",
                    "            height: '50px',",
                    "            width: '220px'",
                    "        },",
                    "        items:",
                    "        [",
                    "            {text:   Ext.ux.LanguageManager.TranslationArray.MUSCLES,",
                    "             handler: function () {",
                    "                 ",
                    "                 Ext.Msg.alert (",
                    "                     '',",
                    "                     Ext.ux.LanguageManager.TranslationArray.FUNCTIONALITY_NOT_AVAILABLE,",
                    "                     null,",
                    "                     null",
                    "                 );",
                    "                 ",
                    "                 return;",
                    "                 ",
                    "                 LanistaTrainer.app.fireEvent('showTools', 'MUSCLES');",
                    "             }",
                    "            },",
                    "            {text:\t Ext.ux.LanguageManager.TranslationArray.SKELETON,",
                    "             handler: function () {",
                    "                 ",
                    "                 Ext.Msg.alert (",
                    "                     '',",
                    "                     Ext.ux.LanguageManager.TranslationArray.FUNCTIONALITY_NOT_AVAILABLE,",
                    "                     null,",
                    "                     null",
                    "                 );",
                    "                 ",
                    "                 return;",
                    "                 ",
                    "                 LanistaTrainer.app.fireEvent('showTools', 'SKELETON');",
                    "             }",
                    "            },",
                    "            {text:   Ext.ux.LanguageManager.TranslationArray.STOP_WATCH,",
                    "             handler: function () {",
                    "                 ",
                    "                 Ext.Msg.alert (",
                    "                     '',",
                    "                     Ext.ux.LanguageManager.TranslationArray.FUNCTIONALITY_NOT_AVAILABLE,",
                    "                     null,",
                    "                     null",
                    "                 );",
                    "                 ",
                    "                 return;",
                    "                 ",
                    "                 LanistaTrainer.app.fireEvent('showTools', 'STOP_WATCH');",
                    "             }",
                    "            }",
                    "        ]",
                    "    });",
                    "",
                    "/*",
                    "this.getLeftCommandPanel().add(",
                    "    Ext.create('LanistaTrainer.view.LanistaButton', {",
                    "        text: Ext.ux.LanguageManager.TranslationArray.TOOLS,",
                    "        itemId: 'toolsButton',",
                    "        menu: tools,",
                    "        menuButtonAlign: 'left',",
                    "        glyph: '102@Lanista Icons', //f",
                    "        cls: [",
                    "            'lanista-command-button',",
                    "            'lanista-command-button-violet'",
                    "        ]",
                    "    })",
                    ");",
                    "*/",
                    "this.getLeftCommandPanel().add(",
                    "    Ext.create('LanistaTrainer.view.LanistaButton', {",
                    "        text: Ext.ux.LanguageManager.TranslationArray.BUTTON_HELP,",
                    "        itemId: 'helpButton',",
                    "        glyph: '104@Lanista Icons', //h",
                    "        cls: [",
                    "            'lanista-command-button',",
                    "            'lanista-command-button-violet'",
                    "        ]",
                    "    })",
                    ");",
                    "",
                    ""
                ]
            },
            "name": "showCommandsExercises",
            "designerId": "b47b248e-d449-4183-9988-3df5e034264c"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "planPanel #exercicesPanel",
                "designer|targetType": "Ext.tab.Panel",
                "fn": "onTabpanelTabChange",
                "implHandler": [
                    "var store = newCard.store;",
                    "",
                    "for (var i = 0; i < store.filters.length; i++)",
                    "{",
                    "    if (store.filters.items[i].getProperty()  === 'day')",
                    "        store.filters.removeAt(i);",
                    "}",
                    "",
                    "store.filter([",
                    "    {",
                    "        property : 'day',",
                    "        value    : parseInt(newCard.id.substr(1))",
                    "    }",
                    "]);",
                    ""
                ],
                "name": "tabchange",
                "scope": "me"
            },
            "name": "onTabpanelTabChange",
            "designerId": "a8e222b8-04a2-4a92-b4cc-8761ab9734d5"
        }
    ]
}