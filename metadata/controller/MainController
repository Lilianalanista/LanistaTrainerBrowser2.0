{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userAlias": "mainController",
        "designer|userClassName": "MainController",
        "id": "mainController"
    },
    "designerId": "23d09b6b-e2b7-4a99-beb8-bf61e6bfdda2",
    "cn": [
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "mainStage",
                "selector": "#mainStage"
            },
            "name": "mainStage",
            "designerId": "2c31514e-620d-4f0d-83c0-fd698a173678"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "mainViewport",
                "selector": "#mainViewport"
            },
            "name": "mainViewport",
            "designerId": "469c1055-8144-42f1-ad1d-bf662e3ca94e"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "lanistaCopyRights",
                "selector": "#lanistaCopyRights"
            },
            "name": "lanistaCopyRights",
            "designerId": "a35987e6-18a5-44d5-988c-62192a6d873c"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "header",
                "selector": "#header"
            },
            "name": "header",
            "designerId": "6c6ea45c-5739-4721-8ac7-2ed106fa5415"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "leftCommandPanel",
                "selector": "#leftCommandPanel"
            },
            "name": "leftCommandPanel",
            "designerId": "08031f00-28ff-4d7d-bdf0-ad2a9fae06fe"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "rightCommandPanel",
                "selector": "#rightCommandPanel"
            },
            "name": "rightCommandPanel",
            "designerId": "1c2fdd0f-e670-43c1-b22b-abf2d1da65ad"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "lanistaStage",
                "selector": "#lanistaStage"
            },
            "name": "lanistaStage",
            "designerId": "d1a8c04b-2e78-4988-b116-62f7b529c6f7"
        },
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "callback"
                ],
                "fn": "onHideStage",
                "implHandler": [
                    "var leftCommandPanel = this.getLeftCommandPanel();",
                    "",
                    "this.getMainStage().el.setStyle('opacity', '0');",
                    "",
                    "leftCommandPanel.el.setStyle('opacity', '0');",
                    "leftCommandPanel.up().down('#splitterLeft').el.setStyle('opacity', '0');",
                    "leftCommandPanel.up().down('#splitterRight').el.setStyle('opacity', '0');",
                    "",
                    "",
                    "this.getRightCommandPanel().el.setStyle('opacity', '0');",
                    "setTimeout(",
                    "    function(){",
                    "        if (callback instanceof Function) callback();",
                    "    },",
                    "    1000",
                    ");",
                    ""
                ],
                "name": "hideStage",
                "scope": "this"
            },
            "name": "onHideStage",
            "designerId": "559e775a-5859-47df-9920-c2108e32d69b"
        },
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "callback"
                ],
                "fn": "onShowStage",
                "implHandler": [
                    "var leftCommandPanel = this.getLeftCommandPanel(),",
                    "    mainStage = this.getMainStage();",
                    "",
                    "mainStage.el.setStyle('opacity', '1');",
                    "",
                    "leftCommandPanel.el.setStyle('opacity', '1');",
                    "leftCommandPanel.up().down('#splitterLeft').el.setStyle('opacity', '1');",
                    "leftCommandPanel.up().down('#splitterRight').el.setStyle('opacity', '1');",
                    "",
                    "this.getRightCommandPanel().el.setStyle('opacity', '1');",
                    "",
                    "setTimeout(function(){",
                    "    if (callback instanceof Function) callback();",
                    "}, 1000);"
                ],
                "name": "showStage",
                "scope": "this"
            },
            "name": "onShowStage",
            "designerId": "d928606f-b887-4922-8070-b8420825c873"
        },
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "saveButtonId",
                    "cancelButtonId"
                ],
                "fn": "onShowSavePanel",
                "implHandler": [
                    "var controller = this;",
                    "if ( !this.getMainStage().down ( '#' + saveButtonId ) ) {",
                    "    controller.getRightCommandPanel().items.each(function (item) {",
                    "        item.hide();",
                    "    });",
                    "",
                    "    var saveButton = Ext.create('LanistaTrainer.view.LanistaButton', {",
                    "        //iconCls: 'lanista-sync',",
                    "        text: Ext.ux.LanguageManager.TranslationArray.BUTTON_SAVE,",
                    "        itemId: saveButtonId,",
                    "        glyph: '100@Lanista Icons', //d",
                    "        cls: [",
                    "            'lanista-command-button',",
                    "            'lanista-command-button-green'",
                    "            ]",
                    "    });",
                    "    var cancelButton = Ext.create('LanistaTrainer.view.LanistaButton', {",
                    "        //iconCls: 'lanista-remove',",
                    "        text: Ext.ux.LanguageManager.TranslationArray.BUTTON_CANCEL,",
                    "        itemId: cancelButtonId,",
                    "        glyph: '65@Lanista Icons', //A",
                    "        cls: [",
                    "            'lanista-command-button',",
                    "            'lanista-command-button-red'",
                    "            ]",
                    "    });",
                    "",
                    "    controller.getRightCommandPanel().add(",
                    "        saveButton",
                    "    );",
                    "    controller.getRightCommandPanel().add(",
                    "        cancelButton",
                    "    );",
                    "}",
                    ""
                ],
                "name": "showSavePanel",
                "scope": "this"
            },
            "name": "onShowSavePanel",
            "designerId": "10663f79-f66b-4b3f-8c18-6eee21483bcc"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "model",
                    "options"
                ],
                "fn": "saveModel",
                "implHandler": [
                    "    options = Ext.apply({}, options);",
                    "",
                    "    var me = model,",
                    "        phantom = me.phantom,",
                    "        dropped = me.dropped,",
                    "        action = dropped ? 'destroy' : (phantom ? 'create' : 'update'),",
                    "        scope  = options.scope || me,",
                    "        callback = options.callback,",
                    "        proxy = me.proxy,",
                    "        operation;",
                    "",
                    "    options.records = [me];",
                    "    options.internalCallback = function(operation) {",
                    "        var args = [me, operation],",
                    "            success = operation.wasSuccessful();",
                    "        if (success) {",
                    "            Ext.callback(options.success, scope, args);",
                    "        } else {",
                    "            Ext.callback(options.failure, scope, args);",
                    "        }",
                    "        args.push(success);",
                    "        Ext.callback(callback, scope, args);",
                    "    };",
                    "    delete options.callback;",
                    "",
                    "    operation = proxy.createOperation(action, options);",
                    "",
                    "    // Not a phantom, then we must perform this operation on the remote datasource.",
                    "    // Record will be removed from the store in the callback upon a success response",
                    "    if (dropped && phantom) {",
                    "        // If it's a phantom, then call the callback directly with a dummy successful ResultSet",
                    "        operation.setResultSet(Ext.data.reader.Reader.prototype.nullResultSet);",
                    "        me.setErased();",
                    "        operation.setSuccessful(true);",
                    "    } else {",
                    "        operation.execute();",
                    "    }",
                    "",
                    "    return operation;"
                ]
            },
            "name": "saveModel",
            "designerId": "44aa746d-c7b2-4e16-b14e-f727deae5bfd"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "model",
                    "options"
                ],
                "fn": "eraseModel",
                "implHandler": [
                    "var me = model;",
                    "",
                    "    me.erasing = true;",
                    "    me.drop();",
                    "",
                    "    delete me.erasing;",
                    "    return this.saveModel(me, options);"
                ]
            },
            "name": "eraseModel",
            "designerId": "f8eb568e-41e4-48a7-bd22-b23ca4f5a01d"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "text"
                ],
                "fn": "capitalizeFirstLetter",
                "implHandler": [
                    "    return text.charAt(0).toUpperCase() + text.slice(1);",
                    ""
                ]
            },
            "name": "capitalizeFirstLetter",
            "designerId": "15f4978e-75e5-4dc2-b0d9-4ad0e95cf7fe"
        },
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onReconect",
                "implHandler": [
                    "var controller = this,",
                    "    user = Ext.ux.SessionManager.getUser();",
                    "",
                    "console.log(\"try to log in.\");",
                    "LanistaTrainer.app.fireEvent('loginUser', user.email, user.password,",
                    "                             function (data) {",
                    "                                 Ext.Msg.show({",
                    "                                     title: Ext.ux.LanguageManager.TranslationArray.MSG_RECONECT_TITLE,",
                    "                                     message: Ext.ux.LanguageManager.TranslationArray.MSG_RECONECT_INFO,",
                    "                                     width: 300,",
                    "                                     buttons: Ext.Msg.OK,",
                    "                                     multiline: false,",
                    "                                     fn: function(btn, text){",
                    "                                         setTimeout(function()",
                    "                                                    {",
                    "                                                        LanistaTrainer.app.panels = [];",
                    "                                                        LanistaTrainer.app.getController('MainController').getMainStage().destroy();",
                    "                                                        LanistaTrainer.app.getController('MainController').getLanistaStage().destroy();",
                    "                                                        LanistaTrainer.app.getController('MainController').getHeader().destroy();",
                    "                                                        LanistaTrainer.app.getController('MainController').getLanistaCopyRights().destroy();",
                    "                                                        LanistaTrainer.app.getController('MainController').getMainViewport().destroy();",
                    "                                                        LanistaTrainer.app.launch();",
                    "                                                    }, 1600);",
                    "                                     }",
                    "",
                    "                                 });",
                    "                             },",
                    "                             function (status) {",
                    "                                 Ext.Msg.show({",
                    "                                    title: Ext.ux.LanguageManager.TranslationArray.MSG_RECONECT_TITLE,",
                    "                                    message: Ext.ux.LanguageManager.TranslationArray.MSG_RECONECT_INFO,",
                    "                                    width: 300,",
                    "                                    buttons: Ext.Msg.OK,",
                    "                                    multiline: false,",
                    "                                    fn: function(btn, text){",
                    "                                        setTimeout(function()",
                    "                                                    {",
                    "                                                        LanistaTrainer.app.panels = [];",
                    "                                                        LanistaTrainer.app.getController('MainController').getMainStage().destroy();",
                    "                                                        LanistaTrainer.app.getController('MainController').getLanistaStage().destroy();",
                    "                                                        LanistaTrainer.app.getController('MainController').getHeader().destroy();",
                    "                                                        LanistaTrainer.app.getController('MainController').getLanistaCopyRights().destroy();",
                    "                                                        LanistaTrainer.app.getController('MainController').getMainViewport().destroy();",
                    "                                                        LanistaTrainer.app.fireEvent('showLoginPanel');",
                    "                                                    }, 1600);",
                    "                                        }",
                    "                                 });",
                    "                             });",
                    "",
                    ""
                ],
                "name": "reconect",
                "scope": "this"
            },
            "name": "onReconect",
            "designerId": "0785f5c6-f044-487d-a8bf-bc4bbf0c049d"
        }
    ]
}