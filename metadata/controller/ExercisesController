{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userAlias": "exercisesController",
        "designer|userClassName": "ExercisesController",
        "id": "exercisesController"
    },
    "designerId": "52ded827-c29d-4d9f-8209-c4791844ebf6",
    "cn": [
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "callback"
                ],
                "fn": "onShowExercisesPanel",
                "implHandler": [
                    "",
                    "var controller = this,",
                    "    exercisesPanel\t= controller.getExercisesPanel(),",
                    "    mainStage\t= controller.getMainStage(),",
                    "    store = Ext.getStore('ExerciseStore');",
                    "",
                    "mainStage.add( exercisesPanel );",
                    "",
                    "exercisesPanel.on('hide', function(component) {",
                    "    component.destroy();",
                    "}, controller);",
                    "",
                    "var viewportXCapacity\t= Math.floor(mainStage.getEl().getWidth(true)/187);",
                    "var viewportCapacity\t= Math.floor((mainStage.getEl().getHeight(true)-47)/177) * viewportXCapacity;",
                    "",
                    "store.pageSize = viewportCapacity;",
                    "store.clearFilter(true);",
                    "store.sort('name_' + Ext.ux.LanguageManager.lang, 'ASC');",
                    "store.load();",
                    "",
                    "// **** 1 create the commands",
                    "LanistaTrainer.app.setStandardButtons('closeExercisesPanelButton');",
                    "this.showCommands();",
                    "",
                    "// *** 2 Show the panel",
                    "exercisesPanel.show();",
                    "",
                    "LanistaTrainer.app.fireEvent('showSearchHeaderUpdate');",
                    "LanistaTrainer.app.fireEvent('showStage');",
                    "",
                    "// *** 4 Callback",
                    "if (callback instanceof Function) callback();",
                    "",
                    "// *** 5 Load data",
                    "controller.loadData();"
                ],
                "name": "showExercisesPanel",
                "scope": "this"
            },
            "designerId": "38c4d2c6-9096-4906-aed3-66d874f3fb51"
        },
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "callback"
                ],
                "fn": "onCloseExercisesPanel",
                "implHandler": [
                    "var controller = this;",
                    "LanistaTrainer.app.fireEvent('hideStage', function () {",
                    "    controller.getRightCommandPanel().items.each(function (item) {",
                    "        item.hide();",
                    "    });",
                    "    controller.getLeftCommandPanel().items.each(function (item) {",
                    "        item.hide();",
                    "    });",
                    "    controller.getExercisesPanel().hide();",
                    "    if (callback instanceof Function) callback();",
                    "});"
                ],
                "name": "closeExercisesPanel",
                "scope": "this"
            },
            "designerId": "d6974465-aac4-4a2f-9d1e-bb810ce2cb05"
        },
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value",
                    "type"
                ],
                "fn": "onShowExercisesFiltered",
                "implHandler": [
                    ""
                ],
                "name": "showExercisesFiltered",
                "scope": "this"
            },
            "designerId": "d12722c9-b60f-48d7-a9df-26a14003dbf4"
        },
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "afterLoadCallback"
                ],
                "fn": "onLoadExercises",
                "implHandler": [
                    "",
                    "var controller = this;",
                    "Ext.getStore('ExerciseStore').load({",
                    "\tcallback: function(records, operation, success) {",
                    "        console.log(\"RECORDS \" + records.length);",
                    "\t\tif (records.length == 0) {",
                    "\t\t\tExt.getStore('ExerciseInitialStore').load({",
                    "\t\t\t\tcallback: function(records, operation, success) {",
                    "\t\t\t\t\tvar data = records;",
                    "\t\t\t\t\tvar record = null;",
                    "\t\t\t\t\tfor (var i = 0; i < records.length; i++) {",
                    "\t\t\t\t\t\trecord = records[i].copy(records[i].data.id);",
                    "                        record.setDirty();",
                    "\t\t\t\t\t\tExt.getStore('ExerciseStore').add(record);",
                    "\t\t\t\t\t}",
                    "\t\t\t\t\tExt.getStore('ExerciseStore').sync();",
                    "                    Ext.getStore('ExerciseInitialStore').removeAll();",
                    "                    Ext.getStore('ExerciseStore').loadPage(1);",
                    "                    if (afterLoadCallback instanceof Function) {",
                    "\t\t\t\t\t\tafterLoadCallback();",
                    "\t\t\t\t\t}",
                    "\t\t\t\t},",
                    "\t\t\t\t\tscope: this",
                    "\t\t\t});",
                    "\t\t} else {",
                    "            Ext.getStore('ExerciseStore').loadPage(1);",
                    "\t\t\tafterLoadCallback();",
                    "\t\t}",
                    "\t},",
                    "\tscope: this",
                    "});"
                ],
                "name": "loadExercises",
                "scope": "this"
            },
            "designerId": "b19e224b-b5fa-4840-8dd2-aeb2542dd943"
        },
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onShowSearchHeaderUpdate",
                "implHandler": [
                    "var store = Ext.getStore('ExerciseStore'),",
                    "     page = store.currentPage,",
                    "     totalPages = \"\",",
                    "     filter = \"\",",
                    "     controller = this,",
                    "     numOfExercises = store.proxy.totalCount,",
                    "     totalPages = Math.ceil(numOfExercises/store.pageSize);",
                    "",
                    "",
                    "",
                    "console.log('store.pageSize from show header');",
                    "console.log(store.pageSize);",
                    "",
                    "",
                    "",
                    "",
                    "if (store.filters.items.length !== 0)",
                    "   filter = (store.filters.items[1].textOptSel ? 'Musclegruppe: '+store.filters.items[1].textOptSel+'<br>' : '') + (store.filters.items[0].textOptSel ? ' Übungstyp: '+store.filters.items[0].textOptSel+'<br>' : '') + (store.filters.items[2].textOptSel ? ' Zusätze: '+store.filters.items[2].textOptSel+'<br>' : '');",
                    "",
                    "if (Ext.getStore(\"ExerciseStore\").currentPage > totalPages)",
                    "    return false;",
                    "",
                    "if (this.getExercisesPanel() && !this.getExercisesPanel().isHidden()) {",
                    "    console.log(\"numOfExercises \" + numOfExercises);",
                    "    console.log(\"store.getCount() \" + store.getCount());",
                    "",
                    "    controller.getMainViewport().down(\"#header\").update({",
                    "       info: '<div class=\"exercises-header\"><div class=\"header-filter\">' + filter + '</div>' + numOfExercises + ' ' + Ext.ux.LanguageManager.TranslationArray.EXERCISES.toUpperCase() + '<br><span class=\"header-subtitle\">' + Ext.ux.LanguageManager.TranslationArray.PAGE + ' '+ page +' ' + Ext.ux.LanguageManager.TranslationArray.VON + ' '+totalPages+'</span></div>',",
                    "       title: '-' + Ext.ux.LanguageManager.TranslationArray.EXERCISES.toUpperCase()",
                    "    });",
                    "}",
                    "",
                    "//var exercisesView = this.getExercisesView();",
                    "//var HeaderView = this.getHeaderView();",
                    "//var totalPages = Math.ceil(totalCounts/this.ViewPortCapacityGlb);",
                    "//var filter = (isNaN(this.filters[1]) ? 'Musclegruppe: '+ this.filters[1] + '<br>' : '') + (isNaN(this.filters[2]) ? ' Übungstyp: '+ this.filters[2] + '<br>' : '') + (isNaN(this.filters[3]) ? ' Zusätze: '+ this.filters[3] + '<br>' : '');",
                    "",
                    "",
                    "//*****************************************",
                    "//OJO:  BUSCAR TAMANIO DEL BROWSER!!!!!!  PARA SABER CUANTOS EJERCICIOS ENTRAN EN LA PAGINA!!!!!!!",
                    "//*****************************************",
                    "",
                    ""
                ],
                "name": "showSearchHeaderUpdate",
                "scope": "this"
            },
            "designerId": "e8f65cd2-661e-415f-8682-d58a4fc3e3c0"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "autoCreate": true,
                "ref": "exercisesPanel",
                "selector": "exercisesPanel",
                "xtype": "exercisesPanel"
            },
            "designerId": "58237758-0edc-4723-875b-e89b846e5629"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "rightCommandPanel",
                "selector": "#rightCommandPanel"
            },
            "designerId": "e47bbced-f583-4394-815e-17c2f7afa899"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "leftCommandPanel",
                "selector": "#leftCommandPanel"
            },
            "designerId": "53331e97-5d6e-490f-8b58-8757289cb2c8"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "mainViewport",
                "selector": "mainViewport"
            },
            "designerId": "908fc6da-9d3f-4096-b25e-ab58eeff1b32"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "mainStage",
                "selector": "#mainStage"
            },
            "designerId": "6b1c562d-0e4c-4aca-9574-2115eee9624f"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "callback"
                ],
                "fn": "showCommands",
                "implHandler": [
                    "",
                    "var controller = this;",
                    "controller.getRightCommandPanel().items.each(function (item) {",
                    "    item.hide();",
                    "});",
                    "",
                    "//Adding bottoms into RightPanel",
                    "var menuFilters = controller.showExercisesMenu();",
                    "this.getRightCommandPanel().add(",
                    "    Ext.create('LanistaTrainer.view.LanistaButton', {",
                    "        text: Ext.ux.LanguageManager.TranslationArray.SEARCH,",
                    "        itemId: 'searchButton',",
                    "        menu: menuFilters,",
                    "        menuButtonAlign: 'right',",
                    "        glyph: 72",
                    "    })",
                    ");",
                    "",
                    ""
                ]
            },
            "designerId": "fee35e2c-2118-4dc7-a82e-3723921f9658"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #showExercisesPanelButton",
                "designer|targetType": "LanistaButton",
                "fn": "onShowExercisesPanelButtonClick",
                "implHandler": [
                    "",
                    "LanistaTrainer.app.fireEvent('close' + LanistaTrainer.app.panels[LanistaTrainer.app.panels.length - 1], function() {",
                    "    LanistaTrainer.app.panels[LanistaTrainer.app.panels.length] = 'ExercisesPanel';",
                    "    LanistaTrainer.app.fireEvent('showExercisesPanel');",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "67abd17d-564e-42ba-a557-2d80975d3dd3"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #closeExercisesPanelButton",
                "designer|targetType": "LanistaButton",
                "fn": "onCloseExercisesPanelButtonClick",
                "implHandler": [
                    "LanistaTrainer.app.panels.splice(LanistaTrainer.app.panels.length - 1, 1);",
                    "LanistaTrainer.app.fireEvent('closeExercisesPanel', function() {",
                    "    LanistaTrainer.app.fireEvent('show' + LanistaTrainer.app.panels[LanistaTrainer.app.panels.length - 1]);",
                    "});",
                    "",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "a02d89a3-b821-4071-bd5c-a1a72fbd60d4"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "loadData",
                "implHandler": [
                    ""
                ]
            },
            "designerId": "0c52d427-6a4b-4540-8aee-8c3cf6871c39"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "showExercisesMenu",
                "implHandler": [
                    "container = this;",
                    "tools = new Ext.menu.Menu(",
                    "    {",
                    "        defaults: {",
                    "            height: '50px',",
                    "            width: '220px'",
                    "        },",
                    "        items:",
                    "        [",
                    "            {text:\tExt.ux.LanguageManager.TranslationArray.FILTER_MUSCLES.toUpperCase(),",
                    "             menuAlign: 'tr-tl?',",
                    "             rtl: true,",
                    "             menu:{",
                    "                     defaults: {",
                    "                         height: '50px',",
                    "                         width: '220px'",
                    "                     },",
                    "                     items:",
                    "                     [",
                    "                             {text:\tExt.ux.LanguageManager.TranslationArray.FILTER_ALL_MUSCLES.toUpperCase(),",
                    "                                  handler: function () {",
                    "                                      container.showFilteredExercises('', 1, this.text);",
                    "                                  }",
                    "                             },",
                    "                             {text: Ext.ux.LanguageManager.TranslationArray.FILTER_SHOULDER.toUpperCase(),",
                    "                                  handler: function () {",
                    "                                      container.showFilteredExercises('3', 1, this.text);",
                    "                                  }",
                    "                             },",
                    "                             {text:   Ext.ux.LanguageManager.TranslationArray.FILTER_ARMS.toUpperCase(),",
                    "                                      menuAlign: 'tr-tl?',",
                    "                                      rtl: true,",
                    "                                      menu:{",
                    "                                              defaults: {",
                    "                                                      height: '50px',",
                    "                                                      width: '220px'",
                    "                                                  },",
                    "                                              items:",
                    "                                              [",
                    "                                                      {text: Ext.ux.LanguageManager.TranslationArray.FILTER_BICEPS.toUpperCase(),",
                    "                                                           handler: function () {",
                    "                                                               container.showFilteredExercises('8', 1, this.text);",
                    "                                                           }",
                    "                                                      },",
                    "                                                      {text: Ext.ux.LanguageManager.TranslationArray.FILTER_TRICEPS.toUpperCase(),",
                    "                                                           handler: function () {",
                    "                                                               container.showFilteredExercises('9', 1, this.text);",
                    "                                                           }",
                    "                                                      },",
                    "                                                      {text: Ext.ux.LanguageManager.TranslationArray.FILTER_FOREARM.toUpperCase(),",
                    "                                                           handler: function () {",
                    "                                                               container.showFilteredExercises('10', 1, this.text);",
                    "                                                           }",
                    "                                                      }",
                    "                                               ]",
                    "                                           }",
                    "                             },",
                    "                             {text: Ext.ux.LanguageManager.TranslationArray.FILTER_CHEST.toUpperCase(),",
                    "                                  handler: function () {",
                    "                                      container.showFilteredExercises('1', 1, this.text);",
                    "                                  }",
                    "                             },",
                    "                             {text: Ext.ux.LanguageManager.TranslationArray.FILTER_BACK.toUpperCase(),",
                    "                                    menuAlign: 'tr-tl?',",
                    "                                      rtl: true,",
                    "                                      menu:{",
                    "                                              defaults: {",
                    "                                                      height: '50px',",
                    "                                                      width: '220px'",
                    "                                                  },",
                    "                                              items:",
                    "                                              [",
                    "                                                      {text: Ext.ux.LanguageManager.TranslationArray.FILTER_UPPERBACK.toUpperCase(),",
                    "                                                           handler: function () {",
                    "                                                               container.showFilteredExercises('2', 1, this.text);",
                    "                                                           }",
                    "                                                      },",
                    "                                                      {text: Ext.ux.LanguageManager.TranslationArray.FILTER_LOWERBACK.toUpperCase(),",
                    "                                                           handler: function () {",
                    "                                                               container.showFilteredExercises('5', 1, this.text);",
                    "                                                           }",
                    "                                                      }",
                    "                                               ]",
                    "                                           }",
                    "                             },",
                    "                             {text: Ext.ux.LanguageManager.TranslationArray.FILTER_AB.toUpperCase(),",
                    "                                  handler: function () {",
                    "                                      container.showFilteredExercises('7', 1, this.text);",
                    "                                  }",
                    "                             },",
                    "                             {text: Ext.ux.LanguageManager.TranslationArray.FILTER_WAISHIP.toUpperCase(),",
                    "                                  handler: function () {",
                    "                                      container.showFilteredExercises('6', 1, this.text);",
                    "                                  }",
                    "                             },",
                    "                             {text:   Ext.ux.LanguageManager.TranslationArray.FILTER_LEGS.toUpperCase(),",
                    "                                      menuAlign: 'tr-tl?',",
                    "                                      rtl: true,",
                    "                                      menu:{",
                    "                                              defaults: {",
                    "                                                  height: '50px',",
                    "                                                  width: '220px'",
                    "                                              },",
                    "                                              items:",
                    "                                              [",
                    "                                                  {text: Ext.ux.LanguageManager.TranslationArray.FILTER_FRONTTHIG.toUpperCase(),",
                    "                                                   handler: function () {",
                    "                                                       container.showFilteredExercises('4', 1, this.text);",
                    "                                                   }",
                    "                                                  },",
                    "                                                  {text: Ext.ux.LanguageManager.TranslationArray.FILTER_BACKTHIGH.toUpperCase(),",
                    "                                                   handler: function () {",
                    "                                                       container.showFilteredExercises('14', 1, this.text);",
                    "                                                   }",
                    "                                                  },",
                    "                                                  {text: Ext.ux.LanguageManager.TranslationArray.FILTER_LOWERLEG.toUpperCase(),",
                    "                                                   handler: function () {",
                    "                                                       container.showFilteredExercises('11', 1, this.text);",
                    "                                                   }",
                    "                                                  }",
                    "                                               ]",
                    "                                           }",
                    "                             }",
                    "                     ]",
                    "                  }",
                    "            },",
                    "            {text:\t Ext.ux.LanguageManager.TranslationArray.FILTER_TYPE.toUpperCase(),",
                    "                     menuAlign: 'tr-tl?',",
                    "                     rtl: true,",
                    "                     menu:{",
                    "                             defaults: {",
                    "                                     height: '50px',",
                    "                                     width: '220px'",
                    "                                 },",
                    "                             items:",
                    "                             [",
                    "                                 {text: Ext.ux.LanguageManager.TranslationArray.FILTER_ALL_EXERCISES.toUpperCase(),",
                    "                                  handler: function () {",
                    "                                      container.showFilteredExercises('', 2, this.text);",
                    "                                  }",
                    "                                 },",
                    "                                 {text: Ext.ux.LanguageManager.TranslationArray.FILTER_BODYWEIGHT.toUpperCase(),",
                    "                                  handler: function () {",
                    "                                      container.showFilteredExercises('4', 2, this.text);",
                    "                                  }",
                    "                                 },",
                    "                                 {text: Ext.ux.LanguageManager.TranslationArray.FILTER_MACHINE.toUpperCase(),",
                    "                                  handler: function () {",
                    "                                      container.showFilteredExercises('1', 2, this.text);",
                    "                                  }",
                    "                                 },",
                    "                                 {text: Ext.ux.LanguageManager.TranslationArray.FILTER_FREEWEIGHTS.toUpperCase(),",
                    "                                  handler: function () {",
                    "                                      container.showFilteredExercises('2', 2, this.text);",
                    "                                  }",
                    "                                 },",
                    "                                 {text: Ext.ux.LanguageManager.TranslationArray.FILTER_CABLE.toUpperCase(),",
                    "                                  handler: function () {",
                    "                                      container.showFilteredExercises('3', 2, this.text);",
                    "                                  }",
                    "                                 },",
                    "                                 {text: Ext.ux.LanguageManager.TranslationArray.FILTER_STRETCH.toUpperCase(),",
                    "                                  handler: function () {",
                    "                                      container.showFilteredExercises('5', 2, this.text);",
                    "                                  }",
                    "                                 },",
                    "                                 {text: Ext.ux.LanguageManager.TranslationArray.FILTER_CARDIO.toUpperCase(),",
                    "                                  handler: function () {",
                    "                                      container.showFilteredExercises('7', 2, this.text);",
                    "                                  }",
                    "                                 },",
                    "                                 {text: Ext.ux.LanguageManager.TranslationArray.FILTER_SPEC.toUpperCase(),",
                    "                                  handler: function () {",
                    "                                      container.showFilteredExercises('8', 2, this.text);",
                    "                                  }",
                    "                                 },",
                    "                                 {text: Ext.ux.LanguageManager.TranslationArray.FILTER_UNILATERAL.toUpperCase(),",
                    "                                  handler: function () {",
                    "                                      container.showFilteredExercises('9', 2, this.text);",
                    "                                  }",
                    "                                 }",
                    "                             ]",
                    "                         }",
                    "            },",
                    "            {text:   Ext.ux.LanguageManager.TranslationArray.FILTER_ADDITIVES.toUpperCase(),",
                    "                     menuAlign: 'tr-tl?',",
                    "                     rtl: true,",
                    "                     menu:{",
                    "                             defaults: {",
                    "                                     height: '50px',",
                    "                                     width: '220px'",
                    "                                 },",
                    "                             items:",
                    "                             [",
                    "                                     {text: Ext.ux.LanguageManager.TranslationArray.FILTER_ALL_MACHINES.toUpperCase(),",
                    "                                          handler: function () {",
                    "                                              container.showFilteredExercises('', 3, this.text);",
                    "                                          }",
                    "                                     },",
                    "                                     {text: Ext.ux.LanguageManager.TranslationArray.FILTER_DUMBBELLS.toUpperCase(),",
                    "                                          handler: function () {",
                    "                                              container.showFilteredExercises('1', 3, this.text);",
                    "                                          }",
                    "                                     },",
                    "                                     {text: Ext.ux.LanguageManager.TranslationArray.FILTER_BARBELL.toUpperCase(),",
                    "                                          handler: function () {",
                    "                                              container.showFilteredExercises('3', 3, this.text);",
                    "                                          }",
                    "                                     },",
                    "                                     {text: Ext.ux.LanguageManager.TranslationArray.FILTER_KETT.toUpperCase(),",
                    "                                          handler: function () {",
                    "                                              container.showFilteredExercises('2', 3, this.text);",
                    "                                          }",
                    "                                     },",
                    "                                     {text: Ext.ux.LanguageManager.TranslationArray.FILTER_BANK.toUpperCase(),",
                    "                                          handler: function () {",
                    "                                              container.showFilteredExercises('4', 3, this.text);",
                    "                                          }",
                    "                                     },",
                    "                                     {text: Ext.ux.LanguageManager.TranslationArray.FILTER_VARADD.toUpperCase(),",
                    "                                          handler: function () {",
                    "                                              container.showFilteredExercises('5', 3, this.text);",
                    "                                          }",
                    "                                     },",
                    "                                     {text: Ext.ux.LanguageManager.TranslationArray.FILTER_BALL.toUpperCase(),",
                    "                                          handler: function () {",
                    "                                              container.showFilteredExercises('6', 3, this.text);",
                    "                                          }",
                    "                                     },",
                    "                                     {text: Ext.ux.LanguageManager.TranslationArray.FILTER_BLAST.toUpperCase(),",
                    "                                          handler: function () {",
                    "                                              container.showFilteredExercises('7', 3, this.text);",
                    "                                          }",
                    "                                     },",
                    "                                     {text: Ext.ux.LanguageManager.TranslationArray.FILTER_JUMPER.toUpperCase(),",
                    "                                          handler: function () {",
                    "                                              container.showFilteredExercises('8', 3, this.text);",
                    "                                          }",
                    "                                     },",
                    "                                     {text: Ext.ux.LanguageManager.TranslationArray.FILTER_FOAM.toUpperCase(),",
                    "                                          handler: function () {",
                    "                                              container.showFilteredExercises('9', 3, this.text);",
                    "                                          }",
                    "                                     },",
                    "                                     {text: Ext.ux.LanguageManager.TranslationArray.FILTER_MINIBAND.toUpperCase(),",
                    "                                          handler: function () {",
                    "                                              container.showFilteredExercises('11', 3, this.text);",
                    "                                          }",
                    "                                     }",
                    "                             ]",
                    "                          }",
                    "            }",
                    "        ]",
                    "    }",
                    ");",
                    "",
                    "",
                    "return tools;"
                ]
            },
            "designerId": "f3c98974-e437-437c-b5d4-6ea676002b7e"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #nextExercises",
                "designer|targetType": "Ext.panel.Tool",
                "fn": "onNextExercisesClick",
                "implHandler": [
                    "console.log(\"SHOW NEXT EXERCISES\");",
                    "",
                    "var store = Ext.getStore(\"ExerciseStore\");",
                    "var totalPages = Math.ceil(store.proxy.totalCount/store.pageSize);",
                    "",
                    "console.log('totalPages: ' + totalPages);",
                    "",
                    "if (Ext.getStore(\"ExerciseStore\").currentPage < totalPages)",
                    "{",
                    "    store.nextPage();",
                    "    LanistaTrainer.app.fireEvent('showSearchHeaderUpdate', Ext.ux.LanguageManager.TranslationArray.EXERCISES.toUpperCase());",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "e650672e-8593-4b0e-b6b6-729c60f4fcf3"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "viewport #previousExercises",
                "designer|targetType": "Ext.panel.Tool",
                "fn": "onPreviousExercisesClick",
                "implHandler": [
                    "console.log(\"SHOW PREVIOUS EXERCISES\");",
                    "if (Ext.getStore(\"ExerciseStore\").currentPage > 1)",
                    "{",
                    "    var store = Ext.getStore(\"ExerciseStore\");",
                    "    store.previousPage();",
                    "    LanistaTrainer.app.fireEvent('showSearchHeaderUpdate', Ext.ux.LanguageManager.TranslationArray.EXERCISES.toUpperCase());",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "cd3002fb-27ed-4209-9e7f-4b62b83c0d80"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "seekValue",
                    "type",
                    "text"
                ],
                "fn": "showFilteredExercises",
                "implHandler": [
                    "",
                    "var store = Ext.getStore('ExerciseStore'),",
                    "    language = Ext.ux.LanguageManager.lang,",
                    "    numOfFilters = store.filters.length,",
                    "    varSearch = seekValue;",
                    "",
                    "if (numOfFilters === 0)",
                    "{",
                    "    store.filters.add(new Ext.util.Filter({",
                    "        property: 'type',",
                    "        value: new RegExp(\"^$|^(?:[0-9 ]+$)\"),",
                    "        root: 'data',",
                    "        exactMatch: true",
                    "    }));",
                    "    store.filters.add(new Ext.util.Filter({",
                    "        property: 'muscle',",
                    "        value: new RegExp(\"^$|^(?:[0-9 ]+$)\"),",
                    "        root: 'data',",
                    "        exactMatch: true",
                    "    }));",
                    "",
                    "    var filterFunction = new Ext.util.Filter({",
                    "        filterFn: function(item){",
                    "            if (Ext.isEmpty(this.serchValue)) return true;",
                    "            for (var i = 0; i < item.data.addition.length; i++) {",
                    "                if (item.data.addition[i] ==  this.serchValue)",
                    "                    return true;",
                    "            }",
                    "            return false;",
                    "        }",
                    "    });",
                    "",
                    "    store.filters.add(filterFunction);",
                    "}",
                    "",
                    "var seekValue1 = \"\";",
                    "if (type === 3)",
                    "{",
                    "    if (seekValue !== \"\")",
                    "        seekValue1 = parseInt(seekValue);",
                    "}",
                    "else",
                    "    seekValue1 = (seekValue === \"\") ? new RegExp(\"^$|^(?:[0-9 ]+$)\") : parseInt(seekValue);",
                    "",
                    "switch(type)",
                    "{",
                    "    case 1: //By Muscle",
                    "        store.filters.items[1].textOptSel = text;",
                    "        store.filters.items[1].setValue(seekValue1);",
                    "      break;",
                    "    case 2: //By Type",
                    "        store.filters.items[0].textOptSel = text;",
                    "        store.filters.items[0].setValue(seekValue1);",
                    "      break;",
                    "    case 3://By Addtion",
                    "        store.filters.items[2].textOptSel = text;",
                    "        store.filters.items[2].setValue(seekValue1);",
                    "        store.filters.items[2].serchValue = seekValue1;",
                    "      break;",
                    "    default:",
                    "      //",
                    "}",
                    "",
                    "store.sort('name_' + language, 'ASC');",
                    "//store.load();",
                    "",
                    "LanistaTrainer.app.fireEvent('showSearchHeaderUpdate', Ext.ux.LanguageManager.TranslationArray.EXERCISES.toUpperCase());",
                    "",
                    "",
                    ""
                ]
            },
            "designerId": "640971d2-2bcc-4982-8946-088ed20ae9a9"
        }
    ]
}